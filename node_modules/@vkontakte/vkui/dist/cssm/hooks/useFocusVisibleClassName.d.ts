import { LiteralUnion } from '../types';
export declare const focusVisiblePresetModeClassNames: {
    inside: string;
    outside: string;
};
type FocusVisiblePresetMode = keyof typeof focusVisiblePresetModeClassNames;
export type FocusVisibleMode = LiteralUnion<FocusVisiblePresetMode, string>;
export interface FocusVisibleModeProps {
    /**
     * Стиль аутлайна focus visible. Если передать произвольную строку, она добавится как css-класс при :focus-visible
     */
    focusVisibleMode?: FocusVisibleMode;
}
export interface UseFocusVisibleClassNameProps {
    focusVisible?: boolean;
    mode?: FocusVisibleMode;
}
/**
 * Используется для проброса классов состояния :focus-visible в компонент.
 *
 * Рулит исключительно классами. Чтобы определить, есть ли фокусное состояние,
 * используйте хуки `useFocusVisible()` и `useFocusWithin()`.
 */
export declare function useFocusVisibleClassName({ focusVisible, mode, }: UseFocusVisibleClassNameProps): string;
export {};
//# sourceMappingURL=useFocusVisibleClassName.d.ts.map