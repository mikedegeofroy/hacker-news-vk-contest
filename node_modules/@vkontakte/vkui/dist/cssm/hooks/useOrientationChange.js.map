{"version":3,"sources":["../../../src/hooks/useOrientationChange.ts"],"sourcesContent":["import * as React from 'react';\nimport { useDOM } from '../lib/dom';\nimport { useGlobalEventListener } from './useGlobalEventListener';\n\ntype Orientation = 'portrait' | 'landscape';\n\n/**\n * Возвращает текущую ориентация экрана на человеческом языке.\n * Учитывает особенности API на разных платформах.\n */\nfunction getOrientation(window: Window | undefined): Orientation {\n  if (!window) {\n    return 'portrait';\n  }\n\n  const angle = Math.abs(\n    // eslint-disable-next-line compat/compat\n    window.screen?.orientation?.angle ?? Number(window.orientation),\n  );\n\n  return angle === 90 ? 'landscape' : 'portrait';\n}\n\n/**\n * Возвращает текущую ориентация экрана на человеческом языке.\n * Обновляется при изменении ориентации.\n */\nexport function useOrientationChange(): Orientation {\n  const { window } = useDOM();\n\n  const [orientation, setOrientation] = React.useState(() => getOrientation(window));\n\n  useGlobalEventListener(window, 'orientationchange', () => setOrientation(getOrientation(window)));\n\n  return orientation;\n}\n"],"names":["React","useDOM","useGlobalEventListener","getOrientation","window","angle","Math","abs","screen","orientation","Number","useOrientationChange","setOrientation","useState"],"mappings":"AAAA,YAAYA,WAAW,QAAQ;AAC/B,SAASC,MAAM,QAAQ,aAAa;AACpC,SAASC,sBAAsB,QAAQ,2BAA2B;AAIlE;;;CAGC,GACD,SAASC,eAAeC,MAA0B;IAChD,IAAI,CAACA,QAAQ;QACX,OAAO;IACT;IAEA,MAAMC,QAAQC,KAAKC,GAAG,CACpB,yCAAyC;IACzCH,OAAOI,MAAM,EAAEC,aAAaJ,SAASK,OAAON,OAAOK,WAAW;IAGhE,OAAOJ,UAAU,KAAK,cAAc;AACtC;AAEA;;;CAGC,GACD,OAAO,SAASM;IACd,MAAM,EAAEP,MAAM,EAAE,GAAGH;IAEnB,MAAM,CAACQ,aAAaG,eAAe,GAAGZ,MAAMa,QAAQ,CAAC,IAAMV,eAAeC;IAE1EF,uBAAuBE,QAAQ,qBAAqB,IAAMQ,eAAeT,eAAeC;IAExF,OAAOK;AACT"}