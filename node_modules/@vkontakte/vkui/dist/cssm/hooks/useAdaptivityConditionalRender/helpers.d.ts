import { SizeTypeValues, ViewHeightType, ViewWidthType } from '../../lib/adaptivity';
import type { PlatformType } from '../../lib/platform';
import type { AdaptiveDeviceType, AdaptiveSizeType, AdaptiveViewWidth, DeviceTypeCSSBreakpoints, ElementProps, ViewWidthCSSBreakpoints } from './types';
export declare const getAdaptiveSizeType: (type: undefined | SizeTypeValues, compactClassNames: Record<'mq' | 'compact', ElementProps>, regularClassNames: Record<'mq' | 'regular', ElementProps>) => AdaptiveSizeType;
export declare const getAdaptiveViewWidth: (viewWidth: undefined | ViewWidthType, viewWidthClassNames: Record<ViewWidthCSSBreakpoints, Record<'mq' | 'forced', ElementProps>>) => AdaptiveViewWidth;
export declare const getAdaptiveDeviceType: (viewWidth: undefined | ViewWidthType, viewHeight: undefined | ViewHeightType, hasPointer: undefined | boolean, platform: PlatformType, deviceTypeClassNames: Record<DeviceTypeCSSBreakpoints, Record<'mq' | 'forced', ElementProps>>) => AdaptiveDeviceType;
//# sourceMappingURL=helpers.d.ts.map