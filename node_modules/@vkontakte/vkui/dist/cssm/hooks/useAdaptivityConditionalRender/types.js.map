{"version":3,"sources":["../../../../src/hooks/useAdaptivityConditionalRender/types.ts"],"sourcesContent":["import { type CSSBreakpoints, SizeTypeValues } from '../../lib/adaptivity';\n\nexport type ForcedHiddenByAdaptivityProviderType = false; // имеется ввиду, что зашили значение, например, <AdaptivityProvider sizeY=\"regular\" />\n\nexport type ElementProps = { className: string };\n\n/* ================================================================================================================== */\n\nexport type AdaptiveSizeType = Record<\n  SizeTypeValues,\n  ForcedHiddenByAdaptivityProviderType | ElementProps\n>;\n\n/* ================================================================================================================== */\n\nexport type ViewWidthCSSBreakpoints = Extract<CSSBreakpoints, 'tabletMinus' | 'tabletPlus'>;\n\nexport type AdaptiveViewWidth = Record<\n  ViewWidthCSSBreakpoints,\n  ForcedHiddenByAdaptivityProviderType | ElementProps\n>;\n\n/* ================================================================================================================== */\n\nexport type DeviceTypeCSSBreakpoints = 'mobile' | 'desktop';\n\nexport type AdaptiveDeviceType = Record<\n  DeviceTypeCSSBreakpoints,\n  ForcedHiddenByAdaptivityProviderType | ElementProps\n>;\n\n/* ================================================================================================================== */\n\nexport interface UseAdaptivityConditionalRender {\n  sizeX: AdaptiveSizeType;\n  sizeY: AdaptiveSizeType;\n  viewWidth: AdaptiveViewWidth;\n  deviceType: AdaptiveDeviceType;\n}\n"],"names":[],"mappings":"AA+BA,sHAAsH,GAEtH,WAKC"}