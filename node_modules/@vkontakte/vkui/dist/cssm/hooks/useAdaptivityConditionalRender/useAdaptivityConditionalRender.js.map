{"version":3,"sources":["../../../../src/hooks/useAdaptivityConditionalRender/useAdaptivityConditionalRender.tsx"],"sourcesContent":["import * as React from 'react';\nimport { AdaptivityContext } from '../../components/AdaptivityProvider/AdaptivityContext';\nimport { usePlatform } from '../usePlatform';\nimport {\n  deviceTypeClassNames,\n  sizeXCompactClassNames,\n  sizeXRegularClassNames,\n  sizeYCompactClassNames,\n  sizeYRegularClassNames,\n  viewWidthClassNames,\n} from './constants';\nimport { getAdaptiveDeviceType, getAdaptiveSizeType, getAdaptiveViewWidth } from './helpers';\nimport type { UseAdaptivityConditionalRender } from './types';\n\nexport const useAdaptivityConditionalRender = (): UseAdaptivityConditionalRender => {\n  const {\n    sizeX: sizeXContext,\n    sizeY: sizeYContext,\n    viewWidth: viewWidthContext,\n    viewHeight: viewHeightContext,\n    hasPointer: hasPointerContext,\n  } = React.useContext(AdaptivityContext);\n  const platform = usePlatform();\n\n  return React.useMemo(() => {\n    const sizeX = getAdaptiveSizeType(sizeXContext, sizeXCompactClassNames, sizeXRegularClassNames);\n    const sizeY = getAdaptiveSizeType(sizeYContext, sizeYCompactClassNames, sizeYRegularClassNames);\n    const viewWidth = getAdaptiveViewWidth(viewWidthContext, viewWidthClassNames);\n    const deviceType = getAdaptiveDeviceType(\n      viewWidthContext,\n      viewHeightContext,\n      hasPointerContext,\n      platform,\n      deviceTypeClassNames,\n    );\n    return {\n      sizeX,\n      sizeY,\n      viewWidth,\n      deviceType,\n    };\n  }, [\n    sizeXContext,\n    sizeYContext,\n    viewWidthContext,\n    viewHeightContext,\n    hasPointerContext,\n    platform,\n  ]);\n};\n"],"names":["React","AdaptivityContext","usePlatform","deviceTypeClassNames","sizeXCompactClassNames","sizeXRegularClassNames","sizeYCompactClassNames","sizeYRegularClassNames","viewWidthClassNames","getAdaptiveDeviceType","getAdaptiveSizeType","getAdaptiveViewWidth","useAdaptivityConditionalRender","sizeX","sizeXContext","sizeY","sizeYContext","viewWidth","viewWidthContext","viewHeight","viewHeightContext","hasPointer","hasPointerContext","useContext","platform","useMemo","deviceType"],"mappings":"AAAA,YAAYA,WAAW,QAAQ;AAC/B,SAASC,iBAAiB,QAAQ,wDAAwD;AAC1F,SAASC,WAAW,QAAQ,iBAAiB;AAC7C,SACEC,oBAAoB,EACpBC,sBAAsB,EACtBC,sBAAsB,EACtBC,sBAAsB,EACtBC,sBAAsB,EACtBC,mBAAmB,QACd,cAAc;AACrB,SAASC,qBAAqB,EAAEC,mBAAmB,EAAEC,oBAAoB,QAAQ,YAAY;AAG7F,OAAO,MAAMC,iCAAiC;IAC5C,MAAM,EACJC,OAAOC,YAAY,EACnBC,OAAOC,YAAY,EACnBC,WAAWC,gBAAgB,EAC3BC,YAAYC,iBAAiB,EAC7BC,YAAYC,iBAAiB,EAC9B,GAAGtB,MAAMuB,UAAU,CAACtB;IACrB,MAAMuB,WAAWtB;IAEjB,OAAOF,MAAMyB,OAAO,CAAC;QACnB,MAAMZ,QAAQH,oBAAoBI,cAAcV,wBAAwBC;QACxE,MAAMU,QAAQL,oBAAoBM,cAAcV,wBAAwBC;QACxE,MAAMU,YAAYN,qBAAqBO,kBAAkBV;QACzD,MAAMkB,aAAajB,sBACjBS,kBACAE,mBACAE,mBACAE,UACArB;QAEF,OAAO;YACLU;YACAE;YACAE;YACAS;QACF;IACF,GAAG;QACDZ;QACAE;QACAE;QACAE;QACAE;QACAE;KACD;AACH,EAAE"}