{"version":3,"sources":["../../../src/hooks/useGlobalEventListener.ts"],"sourcesContent":["import { useIsomorphicLayoutEffect } from '../lib/useIsomorphicLayoutEffect';\nimport { useEventListener } from './useEventListener';\n\nexport function useGlobalEventListener<K extends keyof GlobalEventHandlersEventMap>(\n  element: Document | HTMLElement | Window | null | undefined,\n  event: K,\n  cb: ((ev: GlobalEventHandlersEventMap[K]) => void) | null | false | undefined,\n  options?: AddEventListenerOptions,\n): void;\nexport function useGlobalEventListener<E extends Event>(\n  element: Document | HTMLElement | Window | null | undefined,\n  event: string,\n  cb: ((ev: E) => void) | null | false | undefined,\n  options?: AddEventListenerOptions,\n): void;\nexport function useGlobalEventListener<\n  K extends keyof GlobalEventHandlersEventMap,\n  E extends Event,\n>(\n  element: Document | HTMLElement | Window | null | undefined,\n  event: K | string,\n  cb: ((ev: E) => void) | null | false | undefined,\n  options?: AddEventListenerOptions,\n) {\n  const listener = useEventListener(event, cb, options);\n  useIsomorphicLayoutEffect(() => {\n    if (cb && element) {\n      listener.add(element);\n    } else {\n      listener.remove();\n    }\n  }, [Boolean(cb), Boolean(element)]);\n}\n"],"names":["useIsomorphicLayoutEffect","useEventListener","useGlobalEventListener","element","event","cb","options","listener","add","remove","Boolean"],"mappings":"AAAA,SAASA,yBAAyB,QAAQ,mCAAmC;AAC7E,SAASC,gBAAgB,QAAQ,qBAAqB;AActD,OAAO,SAASC,uBAIdC,OAA2D,EAC3DC,KAAiB,EACjBC,EAAgD,EAChDC,OAAiC;IAEjC,MAAMC,WAAWN,iBAAiBG,OAAOC,IAAIC;IAC7CN,0BAA0B;QACxB,IAAIK,MAAMF,SAAS;YACjBI,SAASC,GAAG,CAACL;QACf,OAAO;YACLI,SAASE,MAAM;QACjB;IACF,GAAG;QAACC,QAAQL;QAAKK,QAAQP;KAAS;AACpC"}