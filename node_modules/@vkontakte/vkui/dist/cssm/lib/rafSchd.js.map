{"version":3,"sources":["../../../src/lib/rafSchd.ts"],"sourcesContent":["/**\n * https://github.com/alexreardon/raf-schd\n *\n * Copyright (c) 2021 Alex Reardon\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\ntype AnyFn = (...args: any[]) => void;\n\nexport interface RafSchedule<T extends AnyFn> {\n  (...args: Parameters<T>): void;\n  cancel(): void;\n}\n\nexport const rafSchd = <T extends AnyFn>(fn: T): RafSchedule<T> => {\n  let lastArgs: any = [];\n  let frameId: number | null = null;\n\n  const wrapperFn = <T extends AnyFn>(...args: Parameters<T>) => {\n    // Always capture the latest value\n    lastArgs = args;\n\n    // There is already a frame queued\n    if (frameId) {\n      return;\n    }\n\n    // Schedule a new frame\n    frameId = requestAnimationFrame(() => {\n      frameId = null;\n      fn(...lastArgs);\n    });\n  };\n\n  // Adding cancel property to result function\n  wrapperFn.cancel = () => {\n    if (!frameId) {\n      return;\n    }\n\n    cancelAnimationFrame(frameId);\n    frameId = null;\n  };\n\n  return wrapperFn;\n};\n"],"names":["rafSchd","fn","lastArgs","frameId","wrapperFn","args","requestAnimationFrame","cancel","cancelAnimationFrame"],"mappings":"AAAA;;;;;;;CAOC,GASD,OAAO,MAAMA,UAAU,CAAkBC;IACvC,IAAIC,WAAgB,EAAE;IACtB,IAAIC,UAAyB;IAE7B,MAAMC,YAAY,CAAkB,GAAGC;QACrC,kCAAkC;QAClCH,WAAWG;QAEX,kCAAkC;QAClC,IAAIF,SAAS;YACX;QACF;QAEA,uBAAuB;QACvBA,UAAUG,sBAAsB;YAC9BH,UAAU;YACVF,MAAMC;QACR;IACF;IAEA,4CAA4C;IAC5CE,UAAUG,MAAM,GAAG;QACjB,IAAI,CAACJ,SAAS;YACZ;QACF;QAEAK,qBAAqBL;QACrBA,UAAU;IACZ;IAEA,OAAOC;AACT,EAAE"}