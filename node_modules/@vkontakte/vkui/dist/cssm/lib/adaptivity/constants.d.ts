import { ValuesOfObject } from '../../types';
export { BREAKPOINTS, MEDIA_QUERIES } from '../../shared/breakpoints';
/**
 * Public API.
 * Брейкпоинты на ширину.
 *
 * > Note: Используется порядковый номер вместо значений в пикселях... ¯\_(ツ)_/¯
 */
export declare const ViewWidth: {
    readonly SMALL_MOBILE: 1;
    readonly MOBILE: 2;
    readonly SMALL_TABLET: 3;
    readonly TABLET: 4;
    readonly DESKTOP: 5;
};
export type ViewWidthType = ValuesOfObject<typeof ViewWidth>;
/**
 * Public API.
 * Брейкпоинт на высоту.
 *
 * > Note: Используется порядковый номер вместо значений в пикселях... ¯\_(ツ)_/¯
 */
export declare const ViewHeight: {
    EXTRA_SMALL: number;
    SMALL: number;
    MEDIUM: number;
};
export type ViewHeightType = ValuesOfObject<typeof ViewHeight>;
/**
 * Public API.
 * Классы размеров. Заимствованы из гайдлайнов Apple.
 *
 * Ссылки
 * - {@link https://www.figma.com/file/2sQl2eaxsp7RDRdMOeneEC/%F0%9F%92%A0-VKUI-Common-Library-%5BBeta%5D?node-id=3220%3A0 | Figma VKUI – Адаптивность}
 * - {@link https://developer.apple.com/design/human-interface-guidelines/foundations/layout/ | Layout - Foundations - Human Interface Guidelines - Design}
 */
export declare const SizeType: {
    readonly COMPACT: "compact";
    readonly REGULAR: "regular";
};
export type SizeTypeValues = ValuesOfObject<typeof SizeType>;
export declare const VIEW_WIDTH_TO_CSS_BREAKPOINT_MAP: {
    readonly 1: "smallMobileMinus";
    readonly 2: "mobile";
    readonly 3: "smallTablet";
    readonly 4: "tablet";
    readonly 5: "desktopPlus";
};
//# sourceMappingURL=constants.d.ts.map