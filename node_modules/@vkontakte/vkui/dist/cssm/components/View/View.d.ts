import * as React from 'react';
import { NavIdProps } from '../../lib/getNavId';
import { HTMLAttributesWithRootRef } from '../../types';
interface Scrolls {
    [index: string]: number | undefined;
}
interface ViewsScrolls {
    [index: string]: Scrolls;
}
export declare let scrollsCache: ViewsScrolls;
export interface ViewProps extends HTMLAttributesWithRootRef<HTMLElement>, NavIdProps {
    activePanel: string;
    onTransition?(params: {
        isBack: boolean;
        from: string;
        to: string;
    }): void;
    /**
     * callback свайпа назад
     */
    onSwipeBack?(): void;
    /**
     * callback начала анимации свайпа назад.
     *
     * Чтобы остановить свайп назад, возвращайте `"prevent"`.
     */
    onSwipeBackStart?(activePanel: string | null): void | 'prevent';
    /**
     * callback завершения анимации отмененного пользователем свайпа
     */
    onSwipeBackCancel?(): void;
    history?: string[];
    children: React.ReactElement | Iterable<React.ReactElement>;
}
/**
 * @see https://vkcom.github.io/VKUI/#/View
 */
export declare const View: ({ activePanel: activePanelProp, history, nav, onTransition, onSwipeBack, onSwipeBackStart, onSwipeBackCancel: onSwipeBackCancelProp, children, className, ...restProps }: ViewProps) => React.JSX.Element;
export {};
//# sourceMappingURL=View.d.ts.map