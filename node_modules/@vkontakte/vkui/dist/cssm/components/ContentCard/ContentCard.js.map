{"version":3,"sources":["../../../../src/components/ContentCard/ContentCard.tsx"],"sourcesContent":["import * as React from 'react';\nimport { classNames, hasReactNode } from '@vkontakte/vkjs';\nimport { HasRef, HasRootRef } from '../../types';\nimport { Card, CardProps } from '../Card/Card';\nimport { Tappable, TappableProps } from '../Tappable/Tappable';\nimport { Caption } from '../Typography/Caption/Caption';\nimport { Footnote } from '../Typography/Footnote/Footnote';\nimport { Headline } from '../Typography/Headline/Headline';\nimport { Text } from '../Typography/Text/Text';\nimport styles from './ContentCard.module.css';\n\nexport interface ContentCardProps\n  extends HasRootRef<HTMLDivElement>,\n    Omit<TappableProps, 'getRootRef' | 'crossOrigin'>,\n    Omit<React.ImgHTMLAttributes<HTMLImageElement>, keyof React.HTMLAttributes<HTMLImageElement>>,\n    HasRef<HTMLImageElement> {\n  /**\n   Текст над заголовком\n   */\n  subtitle?: React.ReactNode;\n  /**\n   Заголовок\n   */\n  header?: React.ReactNode;\n  /**\n   Позволяет поменять тег используемый для заголовка\n   */\n  headerComponent?: React.ElementType;\n  /**\n   Текст\n   */\n  text?: React.ReactNode;\n  /**\n   Нижний текст\n   */\n  caption?: React.ReactNode;\n  /**\n    Максимальная высота изображения\n   */\n  maxHeight?: number;\n  mode?: CardProps['mode'];\n}\n\n/**\n * @see https://vkcom.github.io/VKUI/#/ContentCard\n */\nexport const ContentCard = ({\n  subtitle,\n  header,\n  headerComponent = 'span',\n  text,\n  caption,\n  // card props\n  className,\n  mode = 'shadow',\n  style,\n  getRootRef,\n  // img props\n  getRef,\n  maxHeight,\n  src,\n  srcSet,\n  alt = '',\n  width,\n  height,\n  crossOrigin,\n  decoding,\n  loading,\n  referrerPolicy,\n  sizes,\n  useMap,\n  hasHover = false,\n  hasActive = false,\n  ...restProps\n}: ContentCardProps) => {\n  return (\n    <Card\n      mode={mode}\n      getRootRef={getRootRef}\n      style={style}\n      className={classNames(restProps.disabled && styles['ContentCard--disabled'], className)}\n    >\n      <Tappable\n        {...restProps}\n        hasHover={hasHover}\n        hasActive={hasActive}\n        className={styles['ContentCard__tappable']}\n      >\n        {(src || srcSet) && (\n          <img\n            ref={getRef}\n            className={styles['ContentCard__img']}\n            src={src}\n            srcSet={srcSet}\n            alt={alt}\n            crossOrigin={crossOrigin}\n            decoding={decoding}\n            loading={loading}\n            referrerPolicy={referrerPolicy}\n            sizes={sizes}\n            useMap={useMap}\n            height={height}\n            style={{ maxHeight }}\n            width=\"100%\"\n          />\n        )}\n        <div className={styles['ContentCard__body']}>\n          {hasReactNode(subtitle) && (\n            <Caption\n              className={classNames(styles['ContentCard__text'], styles['ContentCard__subtitle'])}\n              weight=\"1\"\n              level=\"3\"\n              caps\n            >\n              {subtitle}\n            </Caption>\n          )}\n          {hasReactNode(header) && (\n            <Headline\n              className={styles['ContentCard__text']}\n              weight=\"2\"\n              level=\"1\"\n              Component={headerComponent}\n            >\n              {header}\n            </Headline>\n          )}\n          {hasReactNode(text) && <Text className={styles['ContentCard__text']}>{text}</Text>}\n          {hasReactNode(caption) && (\n            <Footnote\n              className={classNames(styles['ContentCard__text'], styles['ContentCard__caption'])}\n            >\n              {caption}\n            </Footnote>\n          )}\n        </div>\n      </Tappable>\n    </Card>\n  );\n};\n"],"names":["React","classNames","hasReactNode","Card","Tappable","Caption","Footnote","Headline","Text","styles","ContentCard","subtitle","header","headerComponent","text","caption","className","mode","style","getRootRef","getRef","maxHeight","src","srcSet","alt","width","height","crossOrigin","decoding","loading","referrerPolicy","sizes","useMap","hasHover","hasActive","restProps","disabled","img","ref","div","weight","level","caps","Component"],"mappings":"AAAA,YAAYA,WAAW,QAAQ;AAC/B,SAASC,UAAU,EAAEC,YAAY,QAAQ,kBAAkB;AAE3D,SAASC,IAAI,QAAmB,eAAe;AAC/C,SAASC,QAAQ,QAAuB,uBAAuB;AAC/D,SAASC,OAAO,QAAQ,gCAAgC;AACxD,SAASC,QAAQ,QAAQ,kCAAkC;AAC3D,SAASC,QAAQ,QAAQ,kCAAkC;AAC3D,SAASC,IAAI,QAAQ,0BAA0B;AAC/C,OAAOC,YAAY,2BAA2B;AAkC9C;;CAEC,GACD,OAAO,MAAMC,cAAc,CAAC,EAC1BC,QAAQ,EACRC,MAAM,EACNC,kBAAkB,MAAM,EACxBC,IAAI,EACJC,OAAO,EACP,aAAa;AACbC,SAAS,EACTC,OAAO,QAAQ,EACfC,KAAK,EACLC,UAAU,EACV,YAAY;AACZC,MAAM,EACNC,SAAS,EACTC,GAAG,EACHC,MAAM,EACNC,MAAM,EAAE,EACRC,KAAK,EACLC,MAAM,EACNC,WAAW,EACXC,QAAQ,EACRC,OAAO,EACPC,cAAc,EACdC,KAAK,EACLC,MAAM,EACNC,WAAW,KAAK,EAChBC,YAAY,KAAK,EACjB,GAAGC,WACc;IACjB,qBACE,oBAAChC;QACCc,MAAMA;QACNE,YAAYA;QACZD,OAAOA;QACPF,WAAWf,WAAWkC,UAAUC,QAAQ,IAAI3B,MAAM,CAAC,wBAAwB,EAAEO;qBAE7E,oBAACZ;QACE,GAAG+B,SAAS;QACbF,UAAUA;QACVC,WAAWA;QACXlB,WAAWP,MAAM,CAAC,wBAAwB;OAEzC,AAACa,CAAAA,OAAOC,MAAK,mBACZ,oBAACc;QACCC,KAAKlB;QACLJ,WAAWP,MAAM,CAAC,mBAAmB;QACrCa,KAAKA;QACLC,QAAQA;QACRC,KAAKA;QACLG,aAAaA;QACbC,UAAUA;QACVC,SAASA;QACTC,gBAAgBA;QAChBC,OAAOA;QACPC,QAAQA;QACRN,QAAQA;QACRR,OAAO;YAAEG;QAAU;QACnBI,OAAM;sBAGV,oBAACc;QAAIvB,WAAWP,MAAM,CAAC,oBAAoB;OACxCP,aAAaS,2BACZ,oBAACN;QACCW,WAAWf,WAAWQ,MAAM,CAAC,oBAAoB,EAAEA,MAAM,CAAC,wBAAwB;QAClF+B,QAAO;QACPC,OAAM;QACNC,MAAAA;OAEC/B,WAGJT,aAAaU,yBACZ,oBAACL;QACCS,WAAWP,MAAM,CAAC,oBAAoB;QACtC+B,QAAO;QACPC,OAAM;QACNE,WAAW9B;OAEVD,SAGJV,aAAaY,uBAAS,oBAACN;QAAKQ,WAAWP,MAAM,CAAC,oBAAoB;OAAGK,OACrEZ,aAAaa,0BACZ,oBAACT;QACCU,WAAWf,WAAWQ,MAAM,CAAC,oBAAoB,EAAEA,MAAM,CAAC,uBAAuB;OAEhFM;AAOf,EAAE"}