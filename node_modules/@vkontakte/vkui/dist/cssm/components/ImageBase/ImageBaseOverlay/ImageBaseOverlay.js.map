{"version":3,"sources":["../../../../../src/components/ImageBase/ImageBaseOverlay/ImageBaseOverlay.tsx"],"sourcesContent":["import * as React from 'react';\nimport { classNames, noop } from '@vkontakte/vkjs';\nimport { useAdaptivityHasPointer } from '../../../hooks/useAdaptivityHasPointer';\nimport { useAppearance } from '../../../hooks/useAppearance';\nimport { focusVisiblePresetModeClassNames } from '../../../hooks/useFocusVisibleClassName';\nimport { Tappable } from '../../Tappable/Tappable';\nimport { ImageBaseContext } from '../context';\nimport type { ImageBaseExpectedIconProps } from '../types';\nimport { validateOverlayIcon } from '../validators';\nimport styles from './ImageBaseOverlay.module.css';\n\nexport interface ImageBaseOverlayProps extends React.AriaAttributes {\n  /**\n   * –ó–∞–¥–∞—ë—Ç —Ç–µ–º—É –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è.\n   *\n   * > –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –±–µ—Ä—ë—Ç—Å—è –∏–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ `appearance` –≤ `ConfigProvider`.\n   */\n  theme?: 'dark' | 'light';\n  /**\n   * –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç –∫–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º –¥–æ–ª–∂–µ–Ω –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å—Å—è –æ–≤–µ—Ä–ª–µ–π.\n   *\n   * - `\"on-hover\"` ‚Äì –Ω–∞ –Ω–∞–≤–µ–¥–µ–Ω–∏–µ —É–∫–∞–∑–∞—Ç–µ–ª—è –º—ã—à–∏.\n   * - `\"always\"` ‚Äì –≤—Å–µ–≥–¥–∞ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å.\n   *\n   * > –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–æ–≥–æ, –µ—Å—Ç—å –ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –º—ã—à—å –∏–ª–∏ –Ω–µ—Ç.\n   */\n  visibility?: 'on-hover' | 'always';\n  /**\n   * –ü—Ä–∏–Ω–∏–º–∞–µ—Ç –∏–∫–æ–Ω–∫—É.\n   *\n   *\n   * > üìù –ù—É–∂–Ω—ã–π –¥–ª—è `<ImageBase size={...} />` —Ä–∞–∑–º–µ—Ä –º–æ–∂–Ω–æ —É–∑–Ω–∞—Ç—å –∏–∑ —Ñ—É–Ω–∫—Ü–∏–∏ `getOverlayIconSizeByImageBaseSize()`.\n   *\n   * > –ü—Ä–µ–¥–ø–æ—á—Ç–∏—Ç–µ–ª—å–Ω–µ–π –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∏–∫–æ–Ω–∫–∏ –∏–∑ `@vkontakte/icons`.\n   *\n   * > üìäÔ∏è –ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–µ—Ä–µ–¥–∞—Ç—å –∫–∞—Å—Ç–æ–º–Ω—É—é –∏–∫–æ–Ω–∫—É, —Ç–æ —Å–ª–µ–¥—É–µ—Ç –∏–º–µ–Ω–æ–≤–∞—Ç—å –µ—ë –ø–æ —à–∞–±–ª–æ–Ω—É `Icon<size><name>`. –ò–ª–∏ –∂–µ\n   * > —á—Ç–æ–±—ã –≤ –Ω–µ—ë –±—ã–ª –ø–µ—Ä–µ–¥–∞–Ω –ø–∞—Ä–∞–º–µ—Ç—Ä `width`. –¢–æ–≥–¥–∞ –º—ã —Å–º–æ–∂–µ–º –≤—ã–≤–æ–¥–∏—Ç—å –≤ –∫–æ–Ω—Å–æ–ª—å –ø–æ–¥—Å–∫–∞–∑–∫—É –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –ª–∏ —Ä–∞–∑–º–µ—Ä–∞ –≤—ã\n   * > –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏ –∏–∫–æ–Ω–∫—É.\n   */\n  children: React.ReactElement<ImageBaseExpectedIconProps>;\n  className?: string;\n  onClick?: React.MouseEventHandler<HTMLElement>;\n}\n\n/**\n * –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –æ–≤–µ—Ä–ª–µ–π –Ω–∞–¥ –∫–∞—Ä—Ç–∏–Ω–∫–æ–π.\n */\nexport const ImageBaseOverlay = ({\n  className,\n  theme: themeProp,\n  visibility: visibilityProp,\n  children,\n  onClick: onClickProp,\n  ...restProps\n}: ImageBaseOverlayProps) => {\n  const appearance = useAppearance();\n  const hasPointer = useAdaptivityHasPointer();\n  const theme = themeProp ?? appearance;\n  const visibility = visibilityProp ?? (hasPointer ? 'on-hover' : 'always');\n\n  if (process.env.NODE_ENV === 'development') {\n    if (children) {\n      // eslint-disable-next-line react-hooks/rules-of-hooks\n      const { size } = React.useContext(ImageBaseContext);\n      validateOverlayIcon(size, { name: 'children', value: children });\n    }\n  }\n\n  const onClick = onClickProp ?? visibility === 'on-hover' ? noop : undefined;\n\n  return (\n    <Tappable\n      {...restProps}\n      className={classNames(\n        styles['ImageBaseOverlay'],\n        visibility === 'always' && styles['ImageBaseOverlay--visible'],\n        theme === 'light' && styles['ImageBaseOverlay--theme-light'],\n        theme === 'dark' && styles['ImageBaseOverlay--theme-dark'],\n        className,\n      )}\n      hasHover={visibility === 'on-hover'}\n      hoverMode={visibility === 'on-hover' ? styles['ImageBaseOverlay--visible'] : undefined}\n      focusVisibleMode={classNames(\n        focusVisiblePresetModeClassNames['inside'],\n        styles['ImageBaseOverlay--visible'],\n      )}\n      hasActive={false}\n      onClick={onClick}\n    >\n      {children}\n    </Tappable>\n  );\n};\n"],"names":["React","classNames","noop","useAdaptivityHasPointer","useAppearance","focusVisiblePresetModeClassNames","Tappable","ImageBaseContext","validateOverlayIcon","styles","ImageBaseOverlay","className","theme","themeProp","visibility","visibilityProp","children","onClick","onClickProp","restProps","appearance","hasPointer","process","env","NODE_ENV","size","useContext","name","value","undefined","hasHover","hoverMode","focusVisibleMode","hasActive"],"mappings":"AAAA,YAAYA,WAAW,QAAQ;AAC/B,SAASC,UAAU,EAAEC,IAAI,QAAQ,kBAAkB;AACnD,SAASC,uBAAuB,QAAQ,yCAAyC;AACjF,SAASC,aAAa,QAAQ,+BAA+B;AAC7D,SAASC,gCAAgC,QAAQ,0CAA0C;AAC3F,SAASC,QAAQ,QAAQ,0BAA0B;AACnD,SAASC,gBAAgB,QAAQ,aAAa;AAE9C,SAASC,mBAAmB,QAAQ,gBAAgB;AACpD,OAAOC,YAAY,gCAAgC;AAmCnD;;CAEC,GACD,OAAO,MAAMC,mBAAmB,CAAC,EAC/BC,SAAS,EACTC,OAAOC,SAAS,EAChBC,YAAYC,cAAc,EAC1BC,QAAQ,EACRC,SAASC,WAAW,EACpB,GAAGC,WACmB;IACtB,MAAMC,aAAahB;IACnB,MAAMiB,aAAalB;IACnB,MAAMS,QAAQC,aAAaO;IAC3B,MAAMN,aAAaC,kBAAmBM,CAAAA,aAAa,aAAa,QAAO;IAEvE,IAAIC,QAAQC,GAAG,CAACC,QAAQ,KAAK,eAAe;QAC1C,IAAIR,UAAU;YACZ,sDAAsD;YACtD,MAAM,EAAES,IAAI,EAAE,GAAGzB,MAAM0B,UAAU,CAACnB;YAClCC,oBAAoBiB,MAAM;gBAAEE,MAAM;gBAAYC,OAAOZ;YAAS;QAChE;IACF;IAEA,MAAMC,UAAUC,eAAeJ,eAAe,aAAaZ,OAAO2B;IAElE,qBACE,oBAACvB;QACE,GAAGa,SAAS;QACbR,WAAWV,WACTQ,MAAM,CAAC,mBAAmB,EAC1BK,eAAe,YAAYL,MAAM,CAAC,4BAA4B,EAC9DG,UAAU,WAAWH,MAAM,CAAC,gCAAgC,EAC5DG,UAAU,UAAUH,MAAM,CAAC,+BAA+B,EAC1DE;QAEFmB,UAAUhB,eAAe;QACzBiB,WAAWjB,eAAe,aAAaL,MAAM,CAAC,4BAA4B,GAAGoB;QAC7EG,kBAAkB/B,WAChBI,gCAAgC,CAAC,SAAS,EAC1CI,MAAM,CAAC,4BAA4B;QAErCwB,WAAW;QACXhB,SAASA;OAERD;AAGP,EAAE"}