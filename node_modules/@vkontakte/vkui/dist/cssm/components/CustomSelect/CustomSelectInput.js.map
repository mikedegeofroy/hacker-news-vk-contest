{"version":3,"sources":["../../../../src/components/CustomSelect/CustomSelectInput.tsx"],"sourcesContent":["import * as React from 'react';\nimport { classNames } from '@vkontakte/vkjs';\nimport { useAdaptivity } from '../../hooks/useAdaptivity';\nimport { useExternRef } from '../../hooks/useExternRef';\nimport { useFocusWithin } from '../../hooks/useFocusWithin';\nimport { usePlatform } from '../../hooks/usePlatform';\nimport { getFormFieldModeFromSelectType } from '../../lib/select';\nimport { HasAlign, HasRef, HasRootRef } from '../../types';\nimport { FormField, FormFieldProps } from '../FormField/FormField';\nimport type { SelectType } from '../Select/Select';\nimport { SelectTypography } from '../SelectTypography/SelectTypography';\nimport { Text } from '../Typography/Text/Text';\nimport { VisuallyHidden } from '../VisuallyHidden/VisuallyHidden';\nimport styles from './CustomSelectInput.module.css';\n\nconst sizeYClassNames = {\n  none: styles['CustomSelectInput--sizeY-none'],\n  compact: styles['CustomSelectInput--sizeY-compact'],\n};\n\nexport interface CustomSelectInputProps\n  extends React.InputHTMLAttributes<HTMLInputElement>,\n    HasRef<HTMLInputElement>,\n    HasRootRef<HTMLDivElement>,\n    HasAlign,\n    Omit<FormFieldProps, 'mode' | 'type'> {\n  selectType?: SelectType;\n  multiline?: boolean;\n  labelTextTestId?: string;\n  fetching?: boolean;\n}\n\n/**\n * @since 5.10.0\n * @private\n */\nexport const CustomSelectInput = ({\n  align = 'left',\n  getRef,\n  className,\n  getRootRef,\n  style,\n  before,\n  after,\n  status,\n  children,\n  placeholder,\n  selectType = 'default',\n  multiline,\n  disabled,\n  fetching,\n  labelTextTestId,\n  ...restProps\n}: CustomSelectInputProps) => {\n  const { sizeY = 'none' } = useAdaptivity();\n\n  const title = children || placeholder;\n  const showLabelOrPlaceholder = !Boolean(restProps.value);\n\n  const handleRootRef = useExternRef(getRootRef);\n  const focusWithin = useFocusWithin(handleRootRef);\n\n  const input = (\n    <Text\n      type=\"text\"\n      {...restProps}\n      disabled={disabled && !fetching}\n      readOnly={restProps.readOnly || (disabled && fetching)}\n      Component=\"input\"\n      normalize={false}\n      className={classNames(\n        styles['CustomSelectInput__el'],\n        (restProps.readOnly || (showLabelOrPlaceholder && !focusWithin)) &&\n          styles['CustomSelectInput__el--cursor-pointer'],\n      )}\n      getRootRef={getRef}\n      placeholder={children ? '' : placeholder}\n    />\n  );\n\n  const platform = usePlatform();\n  return (\n    <FormField\n      Component=\"div\"\n      style={style}\n      className={classNames(\n        styles['CustomSelectInput'],\n        align === 'right' && styles['CustomSelectInput--align-right'],\n        align === 'center' && styles['CustomSelectInput--align-center'],\n        !children && styles['CustomSelectInput--empty'],\n        multiline && styles['CustomSelectInput--multiline'],\n        sizeY !== 'regular' && sizeYClassNames[sizeY],\n        before && styles['CustomSelectInput--hasBefore'],\n        after && styles['CustomSelectInput--hasAfter'],\n        className,\n      )}\n      getRootRef={handleRootRef}\n      before={before}\n      after={after}\n      disabled={disabled}\n      mode={getFormFieldModeFromSelectType(selectType)}\n      status={status}\n    >\n      <div className={styles['CustomSelectInput__input-group']}>\n        <div\n          className={classNames(styles['CustomSelectInput__container'], className)}\n          tabIndex={-1}\n          aria-hidden\n          data-testid={labelTextTestId}\n        >\n          <SelectTypography selectType={selectType} className={styles['CustomSelectInput__title']}>\n            {showLabelOrPlaceholder && title}\n          </SelectTypography>\n        </div>\n        {/* Чтобы отключить autosuggestion в iOS, тултипы которого начинают всплывать даже когда input\n         * в режиме readonly, мы оборачиваем инпут в VisuallyHidden.\n         * Тултипы появляются при каждом клике на input.\n         * смотри: https://github.com/VKCOM/VKUI/issues/6205\n         *\n         * Достаточно не дать пользователю кликнуть по инпуту.\n         * Делаем это только для режима read-only. Потому что проблема именно в режиме read-only.\n         * Обертка вокруг инпута обрабатывает клики и передаёт фокус, так что на взаимодействии с инпутом это никак не скажется.\n         **/}\n        {restProps.readOnly && platform === 'ios' ? (\n          <VisuallyHidden>{input}</VisuallyHidden>\n        ) : (\n          input\n        )}\n      </div>\n    </FormField>\n  );\n};\n"],"names":["React","classNames","useAdaptivity","useExternRef","useFocusWithin","usePlatform","getFormFieldModeFromSelectType","FormField","SelectTypography","Text","VisuallyHidden","styles","sizeYClassNames","none","compact","CustomSelectInput","align","getRef","className","getRootRef","style","before","after","status","children","placeholder","selectType","multiline","disabled","fetching","labelTextTestId","restProps","sizeY","title","showLabelOrPlaceholder","Boolean","value","handleRootRef","focusWithin","input","type","readOnly","Component","normalize","platform","mode","div","tabIndex","aria-hidden","data-testid"],"mappings":"AAAA,YAAYA,WAAW,QAAQ;AAC/B,SAASC,UAAU,QAAQ,kBAAkB;AAC7C,SAASC,aAAa,QAAQ,4BAA4B;AAC1D,SAASC,YAAY,QAAQ,2BAA2B;AACxD,SAASC,cAAc,QAAQ,6BAA6B;AAC5D,SAASC,WAAW,QAAQ,0BAA0B;AACtD,SAASC,8BAA8B,QAAQ,mBAAmB;AAElE,SAASC,SAAS,QAAwB,yBAAyB;AAEnE,SAASC,gBAAgB,QAAQ,uCAAuC;AACxE,SAASC,IAAI,QAAQ,0BAA0B;AAC/C,SAASC,cAAc,QAAQ,mCAAmC;AAClE,OAAOC,YAAY,iCAAiC;AAEpD,MAAMC,kBAAkB;IACtBC,MAAMF,MAAM,CAAC,gCAAgC;IAC7CG,SAASH,MAAM,CAAC,mCAAmC;AACrD;AAcA;;;CAGC,GACD,OAAO,MAAMI,oBAAoB,CAAC,EAChCC,QAAQ,MAAM,EACdC,MAAM,EACNC,SAAS,EACTC,UAAU,EACVC,KAAK,EACLC,MAAM,EACNC,KAAK,EACLC,MAAM,EACNC,QAAQ,EACRC,WAAW,EACXC,aAAa,SAAS,EACtBC,SAAS,EACTC,QAAQ,EACRC,QAAQ,EACRC,eAAe,EACf,GAAGC,WACoB;IACvB,MAAM,EAAEC,QAAQ,MAAM,EAAE,GAAG9B;IAE3B,MAAM+B,QAAQT,YAAYC;IAC1B,MAAMS,yBAAyB,CAACC,QAAQJ,UAAUK,KAAK;IAEvD,MAAMC,gBAAgBlC,aAAagB;IACnC,MAAMmB,cAAclC,eAAeiC;IAEnC,MAAME,sBACJ,oBAAC9B;QACC+B,MAAK;QACJ,GAAGT,SAAS;QACbH,UAAUA,YAAY,CAACC;QACvBY,UAAUV,UAAUU,QAAQ,IAAKb,YAAYC;QAC7Ca,WAAU;QACVC,WAAW;QACXzB,WAAWjB,WACTU,MAAM,CAAC,wBAAwB,EAC/B,AAACoB,CAAAA,UAAUU,QAAQ,IAAKP,0BAA0B,CAACI,WAAW,KAC5D3B,MAAM,CAAC,wCAAwC;QAEnDQ,YAAYF;QACZQ,aAAaD,WAAW,KAAKC;;IAIjC,MAAMmB,WAAWvC;IACjB,qBACE,oBAACE;QACCmC,WAAU;QACVtB,OAAOA;QACPF,WAAWjB,WACTU,MAAM,CAAC,oBAAoB,EAC3BK,UAAU,WAAWL,MAAM,CAAC,iCAAiC,EAC7DK,UAAU,YAAYL,MAAM,CAAC,kCAAkC,EAC/D,CAACa,YAAYb,MAAM,CAAC,2BAA2B,EAC/CgB,aAAahB,MAAM,CAAC,+BAA+B,EACnDqB,UAAU,aAAapB,eAAe,CAACoB,MAAM,EAC7CX,UAAUV,MAAM,CAAC,+BAA+B,EAChDW,SAASX,MAAM,CAAC,8BAA8B,EAC9CO;QAEFC,YAAYkB;QACZhB,QAAQA;QACRC,OAAOA;QACPM,UAAUA;QACViB,MAAMvC,+BAA+BoB;QACrCH,QAAQA;qBAER,oBAACuB;QAAI5B,WAAWP,MAAM,CAAC,iCAAiC;qBACtD,oBAACmC;QACC5B,WAAWjB,WAAWU,MAAM,CAAC,+BAA+B,EAAEO;QAC9D6B,UAAU,CAAC;QACXC,eAAAA;QACAC,eAAanB;qBAEb,oBAACtB;QAAiBkB,YAAYA;QAAYR,WAAWP,MAAM,CAAC,2BAA2B;OACpFuB,0BAA0BD,SAY9BF,UAAUU,QAAQ,IAAIG,aAAa,sBAClC,oBAAClC,sBAAgB6B,SAEjBA;AAKV,EAAE"}