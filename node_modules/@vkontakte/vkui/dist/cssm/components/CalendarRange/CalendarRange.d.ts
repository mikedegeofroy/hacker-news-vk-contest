import * as React from 'react';
import { HTMLAttributesWithRootRef } from '../../types';
import { CalendarDaysProps } from '../CalendarDays/CalendarDays';
import { CalendarHeaderProps } from '../CalendarHeader/CalendarHeader';
export type DateRangeType = [Date | null, Date | null];
export interface CalendarRangeProps extends Omit<HTMLAttributesWithRootRef<HTMLDivElement>, 'onChange'>, Pick<CalendarHeaderProps, 'prevMonthLabel' | 'nextMonthLabel' | 'changeMonthLabel' | 'changeYearLabel' | 'prevMonthIcon' | 'nextMonthIcon'>, Pick<CalendarDaysProps, 'listenDayChangesForUpdate'> {
    value?: DateRangeType;
    disablePast?: boolean;
    disableFuture?: boolean;
    disablePickers?: boolean;
    changeDayLabel?: string;
    weekStartsOn?: 0 | 1 | 2 | 3 | 4 | 5 | 6;
    onChange?: (value: DateRangeType | undefined) => void;
    shouldDisableDate?(value: Date): boolean;
    onClose?(): void;
}
/**
 * @see https://vkcom.github.io/VKUI/#/CalendarRange
 */
export declare const CalendarRange: ({ value, onChange, disablePast, disableFuture, shouldDisableDate, onClose, weekStartsOn, disablePickers, prevMonthLabel, nextMonthLabel, changeMonthLabel, changeYearLabel, changeDayLabel, prevMonthIcon, nextMonthIcon, listenDayChangesForUpdate, ...props }: CalendarRangeProps) => React.JSX.Element;
//# sourceMappingURL=CalendarRange.d.ts.map