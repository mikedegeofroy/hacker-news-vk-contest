{"version":3,"sources":["../../../../src/components/ModalRoot/ModalRoot.tsx"],"sourcesContent":["import * as React from 'react';\nimport { classNames } from '@vkontakte/vkjs';\nimport { clamp } from '../../helpers/math';\nimport { withContext } from '../../hoc/withContext';\nimport { withPlatform } from '../../hoc/withPlatform';\nimport { DOMProps, withDOM } from '../../lib/dom';\nimport { getNavId } from '../../lib/getNavId';\nimport { setTransformStyle } from '../../lib/styles';\nimport { transitionEvent } from '../../lib/supportEvents';\nimport { rubber } from '../../lib/touch';\nimport { warnOnce } from '../../lib/warnOnce';\nimport { ConfigProviderContext } from '../ConfigProvider/ConfigProviderContext';\nimport { FocusTrap } from '../FocusTrap/FocusTrap';\nimport { Touch, TouchEvent } from '../Touch/Touch';\nimport TouchRootContext from '../Touch/TouchContext';\nimport { ModalRootContext, ModalRootContextInterface } from './ModalRootContext';\nimport { MODAL_PAGE_DEFAULT_PERCENT_HEIGHT } from './constants';\nimport { ModalRootWithDOMProps, ModalsStateEntry, TranslateRange } from './types';\nimport { ModalTransitionProps, withModalManager } from './useModalManager';\nimport styles from './ModalRoot.module.css';\n\nconst warn = warnOnce('ModalRoot');\n\nfunction numberInRange(number: number, range: TranslateRange | undefined) {\n  if (!range) {\n    return false;\n  }\n  return number >= range[0] && number <= range[1];\n}\n\nfunction rangeTranslate(number: number) {\n  return clamp(number, 0, 98);\n}\n\ninterface ModalRootState {\n  touchDown?: boolean;\n  dragging?: boolean;\n  modalOpenedLog: string[];\n}\n\nclass ModalRootTouchComponent extends React.Component<\n  ModalRootWithDOMProps & DOMProps & ModalTransitionProps,\n  ModalRootState\n> {\n  constructor(props: ModalRootWithDOMProps & ModalTransitionProps) {\n    super(props);\n    this.state = {\n      touchDown: false,\n      dragging: false,\n      modalOpenedLog: [],\n    };\n\n    this.maskElementRef = React.createRef();\n\n    this.modalRootContext = {\n      updateModalHeight: this.updateModalHeight,\n      registerModal: ({ id, ...data }) => Object.assign(this.props.getModalState(id) ?? {}, data),\n      onClose: () => this.props.onExit(),\n      isInsideModal: true,\n    };\n\n    this.frameIds = {};\n  }\n\n  private documentScrolling = false;\n  private readonly maskElementRef: React.RefObject<HTMLDivElement>;\n  private readonly viewportRef = React.createRef<HTMLDivElement>();\n  private maskAnimationFrame: number | undefined = undefined;\n  private readonly modalRootContext: ModalRootContextInterface;\n  private readonly frameIds: {\n    [index: string]: number;\n  };\n  private restoreFocusTo: HTMLElement | undefined | null = undefined;\n\n  get timeout(): number {\n    return this.props.platform === 'ios' ? 400 : 320;\n  }\n\n  get document(): Document {\n    return this.props.document as Document;\n  }\n\n  get window(): Window {\n    return this.props.window as Window;\n  }\n\n  getModals() {\n    return React.Children.toArray(this.props.children) as React.ReactElement[];\n  }\n\n  componentDidMount() {\n    // Отслеживаем изменение размеров viewport\n    this.window?.addEventListener('resize', this.updateModalHeight, false);\n  }\n\n  componentWillUnmount() {\n    this.toggleDocumentScrolling(true);\n    this.window.removeEventListener('resize', this.updateModalHeight, false);\n  }\n\n  componentDidUpdate(prevProps: ModalRootWithDOMProps & ModalTransitionProps) {\n    // transition phase 2: animate exiting modal\n    if (this.props.exitingModal && this.props.exitingModal !== prevProps.exitingModal) {\n      this.closeModal(this.props.exitingModal);\n    }\n\n    // transition phase 3: animate entering modal\n    if (this.props.enteringModal && this.props.enteringModal !== prevProps.enteringModal) {\n      const enteringState = this.props.getModalState(this.props.enteringModal);\n      this.props.onEnter();\n      this.waitTransitionFinish(enteringState, () => {\n        if (enteringState) {\n          if (enteringState.innerElement) {\n            enteringState.innerElement.style.transitionDelay = '';\n          }\n          this.onEntered(enteringState);\n        }\n      });\n\n      if (enteringState?.innerElement) {\n        enteringState.innerElement.style.transitionDelay = this.props.delayEnter\n          ? `${this.timeout}ms`\n          : '';\n        this.animateTranslate(enteringState, enteringState.translateY);\n        this.setMaskOpacity(enteringState, 1);\n      }\n    }\n\n    // focus restoration\n    if (this.props.activeModal && !prevProps.activeModal) {\n      this.restoreFocusTo = this.document.activeElement as HTMLElement;\n    }\n    if (!this.props.activeModal && !this.props.exitingModal && this.restoreFocusTo) {\n      this.restoreFocusTo.focus();\n      this.restoreFocusTo = null;\n    }\n\n    this.toggleDocumentScrolling(!this.props.activeModal && !this.props.exitingModal);\n  }\n\n  /* Отключает скролл документа */\n  toggleDocumentScrolling(enabled: boolean) {\n    if (this.documentScrolling === enabled) {\n      return;\n    }\n    this.documentScrolling = enabled;\n\n    if (enabled) {\n      // восстанавливаем значение overscroll behavior\n      // eslint-disable-next-line no-restricted-properties\n      this.document.documentElement.classList.remove('vkui--disable-overscroll-behavior');\n\n      // некоторые браузеры на странных вендорах типа Meizu не удаляют обработчик.\n      // https://github.com/VKCOM/VKUI/issues/444\n      this.window.removeEventListener('touchmove', this.preventTouch, {\n        // @ts-expect-error: TS2769 В интерфейсе EventListenerOptions нет поля passive\n        passive: false,\n      });\n    } else {\n      // отключаем нативный pull-to-refresh при открытом модальном окне\n      // чтобы он не срабатывал при закрытии модалки смахиванием вниз\n      // eslint-disable-next-line no-restricted-properties\n      this.document.documentElement.classList.add('vkui--disable-overscroll-behavior');\n\n      this.window.addEventListener('touchmove', this.preventTouch, {\n        passive: false,\n      });\n    }\n  }\n\n  preventTouch = (event: any) => {\n    if (!event) {\n      return false;\n    }\n    while (event.originalEvent) {\n      event = event.originalEvent;\n    }\n    if (event.preventDefault) {\n      event.preventDefault();\n    }\n    return false;\n  };\n\n  checkPageContentHeight() {\n    const modalState = this.props.getModalState(this.props.activeModal);\n\n    if (modalState?.type === 'page' && modalState?.modalElement) {\n      const prevModalState = { ...modalState };\n      initPageModal(modalState);\n      const currentModalState = { ...modalState };\n\n      let needAnimate = false;\n\n      if (prevModalState.expandable === currentModalState.expandable) {\n        if (prevModalState.translateYFrom !== currentModalState.translateYFrom) {\n          needAnimate = true;\n        }\n      } else {\n        needAnimate = true;\n      }\n\n      if (needAnimate) {\n        this.animateTranslate(modalState, modalState.translateY);\n      }\n    }\n  }\n\n  updateModalHeight = () => {\n    const modalState = this.props.getModalState(this.props.activeModal);\n\n    if (modalState && modalState.type === 'page') {\n      if (this.props.enteringModal) {\n        this.waitTransitionFinish(modalState, () => {\n          requestAnimationFrame(() => this.checkPageContentHeight());\n        });\n      } else {\n        requestAnimationFrame(() => this.checkPageContentHeight());\n      }\n    }\n  };\n\n  onEntered({ id, modalElement }: ModalsStateEntry) {\n    if (\n      !this.props.noFocusToDialog &&\n      modalElement &&\n      !modalElement.contains(this.document.activeElement)\n    ) {\n      modalElement.focus();\n    }\n\n    this.props.onEntered(id);\n  }\n\n  closeModal(id: string) {\n    // Сбрасываем состояния, которые могут помешать закрытию модального окна\n    this.setState({ touchDown: false });\n\n    const prevModalState = this.props.getModalState(id);\n\n    if (!prevModalState) {\n      id && warn(`closeActiveModal: модальное окно (страница) ${id} не существует`, 'error');\n      return;\n    }\n    if (!this.state.modalOpenedLog.length) {\n      this.setState((prevState) => ({\n        modalOpenedLog: [...prevState.modalOpenedLog, id],\n      }));\n    }\n    const nextModalState = this.props.getModalState(this.props.activeModal);\n    const nextIsPage = !!nextModalState && nextModalState.type === 'page';\n\n    const prevIsPage = !!prevModalState && prevModalState.type === 'page';\n    this.waitTransitionFinish(prevModalState, () => this.props.onExited(id));\n    const exitTranslate =\n      prevIsPage &&\n      nextIsPage &&\n      (prevModalState.translateY ?? 0) <= (nextModalState?.translateYFrom ?? 0) &&\n      !this.props.isBack\n        ? (nextModalState?.translateYFrom ?? 0) + 10\n        : 100;\n    this.animateTranslate(prevModalState, exitTranslate);\n\n    if (!nextModalState) {\n      // NOTE: was only for clean exit\n      this.setMaskOpacity(prevModalState, 0);\n      this.setState({ modalOpenedLog: [] });\n      prevModalState.translateY = undefined;\n      prevModalState.expandable = undefined;\n    } else if (nextModalState.id && !this.state.modalOpenedLog.includes(nextModalState.id)) {\n      nextModalState.translateY = undefined;\n      this.setState((prevState) => ({\n        modalOpenedLog: [...prevState.modalOpenedLog, nextModalState.id!],\n      }));\n    }\n  }\n\n  onTouchMove = (e: TouchEvent) => {\n    if (this.props.exitingModal) {\n      return;\n    }\n    const modalState = this.props.getModalState(this.props.activeModal);\n    if (!modalState) {\n      return;\n    }\n\n    if (modalState.type === 'page') {\n      return this.onPageTouchMove(e, modalState);\n    }\n\n    if (modalState.type === 'card') {\n      return this.onCardTouchMove(e, modalState);\n    }\n  };\n\n  onPageTouchMove(event: TouchEvent, modalState: ModalsStateEntry) {\n    const { shiftY, originalEvent } = event;\n    const target = originalEvent.target as HTMLElement;\n\n    if (!event.isY) {\n      if (this.viewportRef.current?.contains(target)) {\n        originalEvent.preventDefault();\n      }\n      return;\n    }\n\n    if (!modalState.innerElement?.contains(target)) {\n      return originalEvent.preventDefault();\n    }\n\n    originalEvent.stopPropagation();\n\n    const { expandable, contentScrolled, collapsed, expanded } = modalState;\n\n    if (!this.state.touchDown) {\n      modalState.touchStartContentScrollTop = modalState.contentElement?.scrollTop ?? 0;\n      this.setState({ touchDown: true });\n    }\n\n    if (contentScrolled) {\n      return;\n    }\n\n    if (modalState.touchMovePositive === null) {\n      modalState.touchMovePositive = shiftY > 0;\n    }\n\n    if (\n      !modalState.expandable ||\n      collapsed ||\n      (expanded && modalState.touchMovePositive && modalState.touchStartContentScrollTop === 0) ||\n      modalState.headerElement?.contains(target)\n    ) {\n      originalEvent.preventDefault();\n\n      if ((!expandable && shiftY < 0) || !this.window) {\n        return;\n      }\n\n      !this.state.dragging && this.setState({ dragging: true });\n\n      const shiftYPercent = (shiftY / this.window.innerHeight) * 100;\n      const shiftYCurrent = rubber(shiftYPercent, 72, 0.8, this.props.platform !== 'ios');\n\n      modalState.touchShiftYPercent = shiftYPercent;\n      modalState.translateYCurrent = rangeTranslate((modalState.translateY ?? 0) + shiftYCurrent);\n\n      this.animateTranslate(modalState, modalState.translateYCurrent);\n      this.setMaskOpacity(modalState);\n    }\n  }\n\n  onCardTouchMove(event: TouchEvent, modalState: ModalsStateEntry) {\n    const { originalEvent, shiftY } = event;\n    const target = originalEvent.target as HTMLElement;\n    if (modalState.innerElement?.contains(target)) {\n      if (!this.state.touchDown) {\n        this.setState({ touchDown: true, dragging: true });\n      }\n\n      const shiftYPercent = (shiftY / modalState.innerElement.offsetHeight) * 100;\n      const shiftYCurrent = rubber(shiftYPercent, 72, 1.2, this.props.platform !== 'ios');\n\n      modalState.touchShiftYPercent = shiftYPercent;\n      modalState.translateYCurrent = Math.max(0, (modalState.translateY ?? 0) + shiftYCurrent);\n\n      this.animateTranslate(modalState, modalState.translateYCurrent);\n      this.setMaskOpacity(modalState);\n    }\n  }\n\n  onTouchEnd = (e: TouchEvent) => {\n    const modalState = this.props.getModalState(this.props.activeModal);\n\n    if (modalState?.type === 'page') {\n      return this.onPageTouchEnd(e, modalState);\n    }\n\n    if (modalState?.type === 'card') {\n      return this.onCardTouchEnd(e, modalState);\n    }\n  };\n\n  onPageTouchEnd(event: TouchEvent, modalState: ModalsStateEntry) {\n    const { startY, shiftY } = event;\n\n    modalState.contentScrolled = false;\n    modalState.touchMovePositive = null;\n\n    let setStateCallback;\n\n    if (this.state.dragging && this.window) {\n      const shiftYEndPercent = ((startY + shiftY) / this.window.innerHeight) * 100;\n\n      let translateY = modalState.translateYCurrent ?? 0;\n      const expectTranslateY =\n        (translateY / event.duration) *\n        240 *\n        0.6 *\n        ((modalState.touchShiftYPercent ?? 0) < 0 ? -1 : 1);\n      translateY = rangeTranslate(translateY + expectTranslateY);\n\n      if (modalState.settlingHeight !== 100) {\n        if (numberInRange(translateY, modalState.expandedRange)) {\n          translateY = modalState.expandedRange?.[0] ?? 0;\n        } else if (numberInRange(translateY, modalState.collapsedRange)) {\n          translateY = modalState.translateYFrom ?? 0;\n        } else if (numberInRange(translateY, modalState.hiddenRange)) {\n          translateY = 100;\n        } else {\n          translateY = modalState.translateYFrom ?? 0;\n        }\n      } else {\n        if (numberInRange(translateY, [0, 25])) {\n          translateY = 0;\n        } else {\n          translateY = 100;\n        }\n      }\n\n      if (translateY !== 100 && shiftYEndPercent >= 75) {\n        translateY = 100;\n      }\n\n      modalState.translateY = translateY;\n      modalState.translateYCurrent = translateY;\n      modalState.collapsed = numberInRange(translateY, modalState.collapsedRange);\n      modalState.expanded = translateY === 0;\n      modalState.hidden = translateY === 100;\n\n      if (modalState.hidden) {\n        this.props.onExit();\n      }\n\n      setStateCallback = () => {\n        if (!modalState.hidden) {\n          this.animateTranslate(modalState, modalState.translateY);\n        }\n\n        this.setMaskOpacity(modalState);\n      };\n    }\n\n    this.setState(\n      {\n        touchDown: false,\n        dragging: false,\n      },\n      setStateCallback,\n    );\n  }\n\n  onCardTouchEnd({ duration }: TouchEvent, modalState: ModalsStateEntry) {\n    let setStateCallback;\n\n    if (this.state.dragging) {\n      let translateY = modalState.translateYCurrent ?? 0;\n\n      const expectTranslateY =\n        (translateY / duration) * 240 * 0.6 * ((modalState.touchShiftYPercent ?? 0) < 0 ? -1 : 1);\n      translateY = Math.max(0, translateY + expectTranslateY);\n\n      if (translateY >= 30) {\n        translateY = 100;\n      } else {\n        translateY = 0;\n      }\n\n      modalState.translateY = translateY;\n      modalState.hidden = translateY === 100;\n\n      if (modalState.hidden) {\n        this.props.onExit();\n      }\n\n      setStateCallback = () => {\n        if (!modalState.hidden) {\n          this.animateTranslate(modalState, modalState.translateY);\n        }\n\n        this.setMaskOpacity(modalState);\n      };\n    }\n\n    this.setState(\n      {\n        touchDown: false,\n        dragging: false,\n      },\n      setStateCallback,\n    );\n  }\n\n  onScroll = (e: React.SyntheticEvent) => {\n    const activeModal = this.props.activeModal;\n\n    const target = e.target as HTMLElement;\n\n    if (!activeModal) {\n      return;\n    }\n    const modalState = this.props.getModalState(activeModal);\n    if (modalState?.type === 'page' && modalState?.contentElement?.contains(target)) {\n      modalState.contentScrolled = true;\n\n      if (modalState.contentScrollStopTimeout) {\n        clearTimeout(modalState.contentScrollStopTimeout);\n      }\n\n      modalState.contentScrollStopTimeout = setTimeout(() => {\n        if (modalState.contentScrolled) {\n          modalState.contentScrolled = false;\n        }\n      }, 250);\n    }\n  };\n\n  waitTransitionFinish(modalState: ModalsStateEntry | undefined, eventHandler: () => void) {\n    if (transitionEvent.supported) {\n      const onceHandler = () => {\n        modalState?.innerElement?.removeEventListener(transitionEvent.name as string, onceHandler);\n        eventHandler();\n      };\n\n      modalState?.innerElement?.addEventListener(transitionEvent.name as string, onceHandler);\n    } else {\n      setTimeout(eventHandler, this.timeout);\n    }\n  }\n\n  /**\n   * Анимирует сдвиг модалки\n   *\n   * @param {ModalsStateEntry} modalState\n   * @param {number} percent Процент сдвига: 0 – полностью открыта, 100 – полностью закрыта\n   */\n  animateTranslate(modalState: ModalsStateEntry, percent: number | undefined) {\n    const frameId = `animateTranslateFrame${modalState.id}`;\n\n    cancelAnimationFrame(this.frameIds[frameId]);\n\n    this.frameIds[frameId] = requestAnimationFrame(() => {\n      setTransformStyle(modalState.innerElement, `translate3d(0, ${percent}%, 0)`);\n    });\n  }\n\n  /* Устанавливает прозрачность для полупрозрачной подложки */\n  setMaskOpacity(modalState: ModalsStateEntry, forceOpacity: number | null = null) {\n    if (forceOpacity === null && this.props.history?.[0] !== modalState.id) {\n      return;\n    }\n    if (this.maskAnimationFrame) {\n      cancelAnimationFrame(this.maskAnimationFrame);\n    }\n    this.maskAnimationFrame = requestAnimationFrame(() => {\n      if (this.maskElementRef.current) {\n        const { translateY = 0, translateYCurrent = 0 } = modalState;\n\n        const opacity =\n          forceOpacity === null\n            ? 1 - (translateYCurrent - translateY) / (100 - translateY) || 0\n            : forceOpacity;\n        this.maskElementRef.current.style.opacity = clamp(opacity, 0, 100).toString();\n        this.maskElementRef.current.style.transitionDelay =\n          opacity && this.props.delayEnter ? `${this.timeout}ms` : '';\n      }\n    });\n  }\n\n  render() {\n    const { activeModal, exitingModal, enteringModal, modalOverlayTestId } = this.props;\n    const { touchDown, dragging } = this.state;\n\n    if (!activeModal && !exitingModal) {\n      return null;\n    }\n\n    return (\n      <TouchRootContext.Provider value={true}>\n        <ModalRootContext.Provider value={this.modalRootContext}>\n          <Touch\n            className={classNames(\n              styles['ModalRoot'],\n              this.props.configProvider?.hasCustomPanelHeaderAfter &&\n                styles['ModalRoot--hasCustomPanelHeaderAfterSlot'],\n              touchDown &&\n                classNames(styles['ModalRoot--touched'], 'vkuiInternalModalRoot--touched'),\n              !!(enteringModal || exitingModal) &&\n                classNames(styles['ModalRoot--switching'], 'vkuiInternalModalRoot--switching'),\n            )}\n            onMove={this.onTouchMove}\n            onEnd={this.onTouchEnd}\n            onScroll={this.onScroll}\n          >\n            <div\n              data-testid={modalOverlayTestId}\n              className={styles['ModalRoot__mask']}\n              onClick={this.props.onExit}\n              ref={this.maskElementRef}\n            />\n            <div className={styles['ModalRoot__viewport']} ref={this.viewportRef}>\n              {this.getModals().map((Modal) => {\n                const modalId = getNavId(Modal.props, warn);\n                const _modalState = this.props.getModalState(modalId);\n                if ((modalId !== activeModal && modalId !== exitingModal) || !_modalState) {\n                  return null;\n                }\n                const modalState = { ..._modalState };\n\n                const isPage = modalState.type === 'page';\n                const key = `modal-${modalId}`;\n\n                return (\n                  <FocusTrap\n                    key={key}\n                    onClose={this.props.onExit}\n                    timeout={this.timeout}\n                    className={classNames(\n                      styles['ModalRoot__modal'],\n\n                      dragging && 'vkuiInternalModalRoot__modal--dragging',\n\n                      isPage && modalState.expandable && 'vkuiInternalModalRoot__modal--expandable',\n                      isPage && modalState.collapsed && 'vkuiInternalModalRoot__modal--collapsed',\n                    )}\n                    restoreFocus={false}\n                  >\n                    {Modal}\n                  </FocusTrap>\n                );\n              })}\n            </div>\n          </Touch>\n        </ModalRootContext.Provider>\n      </TouchRootContext.Provider>\n    );\n  }\n}\n\nexport const ModalRootTouch = withContext(\n  withPlatform(\n    withDOM<ModalRootWithDOMProps>(withModalManager(initModal)(ModalRootTouchComponent)),\n  ),\n  ConfigProviderContext,\n  'configProvider',\n);\n\n/**\n * Инициализирует модалку перед анимацией открытия\n */\nfunction initModal(modalState: ModalsStateEntry) {\n  switch (modalState.type) {\n    case 'page':\n      modalState.settlingHeight = modalState.settlingHeight || MODAL_PAGE_DEFAULT_PERCENT_HEIGHT;\n      return initPageModal(modalState);\n    case 'card':\n      return initCardModal(modalState);\n    default:\n      process.env.NODE_ENV === 'development' &&\n        warn(`initActiveModal: modalState.type=\"${modalState.type}\" не поддерживается`, 'error');\n  }\n}\n\nfunction initPageModal(modalState: ModalsStateEntry) {\n  const { contentElement, bottomInset } = modalState;\n  const contentElementHeight = calculateModalContentHeight(\n    contentElement?.firstElementChild as HTMLElement,\n    modalState.expandable,\n  );\n  const bottomInsetHeight = bottomInset?.offsetHeight || 0;\n  const contentHeight = contentElementHeight + bottomInsetHeight;\n  let prevTranslateY = modalState.translateY;\n  let prevExpandable = modalState.expandable;\n\n  modalState.expandable =\n    contentHeight > (contentElement?.clientHeight ?? 0) || modalState.settlingHeight === 100;\n\n  let collapsed = false;\n  let expanded = false;\n  let translateYFrom;\n  let translateY;\n  let expandedRange: TranslateRange;\n  let collapsedRange: TranslateRange | undefined;\n  let hiddenRange: TranslateRange;\n\n  const hasCollapsedState = Boolean(modalState.expandable && modalState.settlingHeight !== 100);\n  if (modalState.expandable) {\n    translateYFrom = 100 - (modalState.settlingHeight ?? 0);\n\n    const shiftHalf = translateYFrom / 2;\n    const visiblePart = 100 - translateYFrom;\n\n    expandedRange = [0, shiftHalf];\n    collapsedRange = hasCollapsedState ? [shiftHalf, translateYFrom + visiblePart / 4] : undefined;\n    hiddenRange = [translateYFrom + visiblePart / 4, 100];\n\n    collapsed = hasCollapsedState && translateYFrom > 0;\n    expanded = translateYFrom <= 0;\n    translateY = translateYFrom;\n  } else {\n    const headerHeight = modalState.headerElement?.offsetHeight ?? 0;\n    const height = contentHeight + headerHeight;\n\n    translateYFrom =\n      100 - (height / (modalState.innerElement?.parentElement?.offsetHeight ?? 0)) * 100;\n    translateY = translateYFrom;\n\n    expandedRange = [translateY, translateY + 25];\n    collapsedRange = undefined;\n    hiddenRange = [translateY + 25, translateY + 100];\n  }\n\n  // Свойство expandable может измениться из-за высоты контента, в таком случае на всю высоту не разворачиваем\n  const shouldExpand = prevExpandable && modalState.expandable;\n  // Если модалка может открываться на весь экран, и новый сдвиг больше предыдущего, то откроем её на весь экран\n  if ((shouldExpand && translateY > (prevTranslateY ?? 100)) || modalState.settlingHeight === 100) {\n    translateY = 0;\n  }\n\n  // Если модалка уже раскрыта обновляем состояния\n  if (translateY === 0) {\n    expanded = true;\n    collapsed = false;\n  }\n\n  modalState.expandedRange = expandedRange;\n  modalState.collapsedRange = collapsedRange;\n  modalState.hiddenRange = hiddenRange;\n  modalState.translateY = translateY;\n  modalState.translateYFrom = translateYFrom;\n  modalState.collapsed = collapsed;\n  modalState.expanded = expanded;\n}\n\nfunction initCardModal(modalState: ModalsStateEntry) {\n  modalState.translateY = 0;\n}\n\nfunction calculateModalContentHeight(\n  element: HTMLElement,\n  isExpandable: ModalsStateEntry['expandable'],\n) {\n  if (!isExpandable) {\n    return element.scrollHeight;\n  }\n\n  /*\n   * В режиме expandable мы назначаем контейнеру контента высоту 100%, что не даёт\n   * получить реальную высоту контента.\n   * Поэтому мы пересчитываем высоту, временно устанавливая height: auto;\n   * */\n  const currentHeightStyle = element.style.height;\n  element.style.height = 'auto';\n\n  const elementHeight = element.scrollHeight;\n  element.style.height = currentHeightStyle;\n\n  return elementHeight;\n}\n"],"names":["React","classNames","clamp","withContext","withPlatform","withDOM","getNavId","setTransformStyle","transitionEvent","rubber","warnOnce","ConfigProviderContext","FocusTrap","Touch","TouchRootContext","ModalRootContext","MODAL_PAGE_DEFAULT_PERCENT_HEIGHT","withModalManager","styles","warn","numberInRange","number","range","rangeTranslate","ModalRootTouchComponent","Component","constructor","props","state","touchDown","dragging","modalOpenedLog","maskElementRef","createRef","modalRootContext","updateModalHeight","registerModal","id","data","Object","assign","getModalState","onClose","onExit","isInsideModal","frameIds","documentScrolling","viewportRef","maskAnimationFrame","undefined","restoreFocusTo","timeout","platform","document","window","getModals","Children","toArray","children","componentDidMount","addEventListener","componentWillUnmount","toggleDocumentScrolling","removeEventListener","componentDidUpdate","prevProps","exitingModal","closeModal","enteringModal","enteringState","onEnter","waitTransitionFinish","innerElement","style","transitionDelay","onEntered","delayEnter","animateTranslate","translateY","setMaskOpacity","activeModal","activeElement","focus","enabled","documentElement","classList","remove","preventTouch","passive","add","event","originalEvent","preventDefault","checkPageContentHeight","modalState","type","modalElement","prevModalState","initPageModal","currentModalState","needAnimate","expandable","translateYFrom","requestAnimationFrame","noFocusToDialog","contains","setState","length","prevState","nextModalState","nextIsPage","prevIsPage","onExited","exitTranslate","isBack","includes","onTouchMove","e","onPageTouchMove","onCardTouchMove","shiftY","target","isY","current","stopPropagation","contentScrolled","collapsed","expanded","touchStartContentScrollTop","contentElement","scrollTop","touchMovePositive","headerElement","shiftYPercent","innerHeight","shiftYCurrent","touchShiftYPercent","translateYCurrent","offsetHeight","Math","max","onTouchEnd","onPageTouchEnd","onCardTouchEnd","startY","setStateCallback","shiftYEndPercent","expectTranslateY","duration","settlingHeight","expandedRange","collapsedRange","hiddenRange","hidden","onScroll","contentScrollStopTimeout","clearTimeout","setTimeout","eventHandler","supported","onceHandler","name","percent","frameId","cancelAnimationFrame","forceOpacity","history","opacity","toString","render","modalOverlayTestId","Provider","value","className","configProvider","hasCustomPanelHeaderAfter","onMove","onEnd","div","data-testid","onClick","ref","map","Modal","modalId","_modalState","isPage","key","restoreFocus","ModalRootTouch","initModal","initCardModal","process","env","NODE_ENV","bottomInset","contentElementHeight","calculateModalContentHeight","firstElementChild","bottomInsetHeight","contentHeight","prevTranslateY","prevExpandable","clientHeight","hasCollapsedState","Boolean","shiftHalf","visiblePart","headerHeight","height","parentElement","shouldExpand","element","isExpandable","scrollHeight","currentHeightStyle","elementHeight"],"mappings":"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"}