{"version":3,"sources":["../../../../src/components/Alert/Alert.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Icon20Cancel } from '@vkontakte/icons';\nimport { classNames, hasReactNode } from '@vkontakte/vkjs';\nimport { useAdaptivityWithJSMediaQueries } from '../../hooks/useAdaptivityWithJSMediaQueries';\nimport { usePlatform } from '../../hooks/usePlatform';\nimport { useWaitTransitionFinish } from '../../hooks/useWaitTransitionFinish';\nimport { stopPropagation } from '../../lib/utils';\nimport { AlignType, AnchorHTMLAttributesOnly, HasDataAttribute, HasRootRef } from '../../types';\nimport { useScrollLock } from '../AppRoot/ScrollContext';\nimport { ButtonProps } from '../Button/Button';\nimport { FocusTrap } from '../FocusTrap/FocusTrap';\nimport { IconButton } from '../IconButton/IconButton';\nimport { ModalDismissButton } from '../ModalDismissButton/ModalDismissButton';\nimport { PopoutWrapper } from '../PopoutWrapper/PopoutWrapper';\nimport { AlertActionProps } from './AlertAction';\nimport { AlertActions } from './AlertActions';\nimport { AlertHeader, AlertText } from './AlertTypography';\nimport styles from './Alert.module.css';\n\ntype AlertActionMode = 'cancel' | 'destructive' | 'default';\n\nexport interface AlertActionInterface\n  extends Pick<ButtonProps, 'Component'>,\n    AnchorHTMLAttributesOnly,\n    HasDataAttribute {\n  title: string;\n  action?: VoidFunction;\n  /**\n   * По умолчанию клик на опцию вызывает переданную в `Alert` функцию `onClose`, данное свойство\n   * позволяет отключить такое поведение\n   */\n  autoCloseDisabled?: boolean;\n  mode: AlertActionMode;\n}\n\nexport interface AlertProps extends React.HTMLAttributes<HTMLElement>, HasRootRef<HTMLDivElement> {\n  actionsLayout?: 'vertical' | 'horizontal';\n  actionsAlign?: AlignType;\n  actions?: AlertActionInterface[];\n  renderAction?: (props: AlertActionProps) => React.ReactNode;\n  header?: React.ReactNode;\n  text?: React.ReactNode;\n  onClose: VoidFunction;\n  /**\n   * Текст кнопки закрытия. Делает ее доступной для ассистивных технологий\n   */\n  dismissLabel?: string;\n  /**\n   * Расположение кнопки закрытия (внутри и вне `popout'a`)\n   * Доступно только в `compact`-режиме, не отображается на `iOS`\n   */\n  dismissButtonMode?: 'inside' | 'outside';\n  /**\n   * `data-testid` для кнопки закрытия\n   */\n  dismissButtonTestId?: string;\n}\n\n/**\n * @see https://vkcom.github.io/VKUI/#/Alert\n */\nexport const Alert = ({\n  actions = [],\n  actionsLayout = 'horizontal',\n  children,\n  className,\n  style,\n  text,\n  header,\n  onClose,\n  dismissLabel = 'Закрыть предупреждение',\n  renderAction,\n  actionsAlign,\n  dismissButtonMode = 'outside',\n  dismissButtonTestId,\n  getRootRef,\n  ...restProps\n}: AlertProps) => {\n  const generatedId = React.useId();\n\n  const headerId = `vkui-alert-${generatedId}-header`;\n  const textId = `vkui-alert-${generatedId}-text`;\n\n  const platform = usePlatform();\n  const { isDesktop } = useAdaptivityWithJSMediaQueries();\n  const { waitTransitionFinish } = useWaitTransitionFinish();\n\n  const [closing, setClosing] = React.useState(false);\n  const isDismissButtonVisible = isDesktop && platform !== 'ios';\n\n  const elementRef = React.useRef<HTMLDivElement>(null);\n\n  const timeout = platform === 'ios' ? 300 : 200;\n\n  const close = React.useCallback(() => {\n    setClosing(true);\n    waitTransitionFinish(\n      elementRef.current,\n      (e?: TransitionEvent) => {\n        if (!e || e.propertyName === 'opacity') {\n          onClose();\n        }\n      },\n      timeout,\n    );\n  }, [elementRef, waitTransitionFinish, onClose, timeout]);\n\n  const onItemClick = React.useCallback(\n    (item: AlertActionInterface) => {\n      const { action, autoCloseDisabled = false } = item;\n\n      if (!autoCloseDisabled) {\n        setClosing(true);\n        waitTransitionFinish(\n          elementRef.current,\n          (e?: TransitionEvent) => {\n            if (!e || e.propertyName === 'opacity') {\n              onClose();\n              action && action();\n            }\n          },\n          timeout,\n        );\n      } else {\n        action && action();\n      }\n    },\n    [elementRef, waitTransitionFinish, onClose, timeout],\n  );\n\n  useScrollLock();\n\n  return (\n    <PopoutWrapper\n      className={className}\n      closing={closing}\n      style={style}\n      onClick={close}\n      getRootRef={getRootRef}\n    >\n      <FocusTrap\n        {...restProps}\n        getRootRef={elementRef}\n        onClick={stopPropagation}\n        onClose={close}\n        timeout={timeout}\n        className={classNames(\n          styles['Alert'],\n          platform === 'ios' && styles['Alert--ios'],\n          platform === 'vkcom' && styles['Alert--vkcom'],\n          closing && styles['Alert--closing'],\n          isDesktop && styles['Alert--desktop'],\n        )}\n        role=\"alertdialog\"\n        aria-modal\n        aria-labelledby={headerId}\n        aria-describedby={textId}\n      >\n        <div\n          className={classNames(\n            styles['Alert__content'],\n            dismissButtonMode === 'inside' && styles['Alert__content--withButton'],\n          )}\n        >\n          {hasReactNode(header) && <AlertHeader id={headerId}>{header}</AlertHeader>}\n          {hasReactNode(text) && <AlertText id={textId}>{text}</AlertText>}\n          {children}\n          {isDismissButtonVisible && dismissButtonMode === 'inside' && (\n            <IconButton\n              label={dismissLabel}\n              className={classNames(styles['Alert__dismiss'], 'vkuiInternalAlert__dismiss')}\n              onClick={close}\n              hoverMode=\"opacity\"\n              activeMode=\"opacity\"\n              data-testid={dismissButtonTestId}\n            >\n              <Icon20Cancel />\n            </IconButton>\n          )}\n        </div>\n        <AlertActions\n          actions={actions}\n          actionsAlign={actionsAlign}\n          actionsLayout={actionsLayout}\n          renderAction={renderAction}\n          onItemClick={onItemClick}\n        />\n        {isDismissButtonVisible && dismissButtonMode === 'outside' && (\n          <ModalDismissButton onClick={close} data-testid={dismissButtonTestId}>\n            {dismissLabel}\n          </ModalDismissButton>\n        )}\n      </FocusTrap>\n    </PopoutWrapper>\n  );\n};\n"],"names":["React","Icon20Cancel","classNames","hasReactNode","useAdaptivityWithJSMediaQueries","usePlatform","useWaitTransitionFinish","stopPropagation","useScrollLock","FocusTrap","IconButton","ModalDismissButton","PopoutWrapper","AlertActions","AlertHeader","AlertText","styles","Alert","actions","actionsLayout","children","className","style","text","header","onClose","dismissLabel","renderAction","actionsAlign","dismissButtonMode","dismissButtonTestId","getRootRef","restProps","generatedId","useId","headerId","textId","platform","isDesktop","waitTransitionFinish","closing","setClosing","useState","isDismissButtonVisible","elementRef","useRef","timeout","close","useCallback","current","e","propertyName","onItemClick","item","action","autoCloseDisabled","onClick","role","aria-modal","aria-labelledby","aria-describedby","div","id","label","hoverMode","activeMode","data-testid"],"mappings":"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"}