{"version":3,"sources":["../../../../src/components/ChipsSelect/useChipsSelect.ts"],"sourcesContent":["import * as React from 'react';\nimport { isEqual } from '@vkontakte/vkjs';\nimport { defaultFilterFn, type FilterFn } from '../../lib/select';\nimport { useIsomorphicLayoutEffect } from '../../lib/useIsomorphicLayoutEffect';\nimport {\n  transformValue,\n  useChipsInput,\n  type UseChipsInputProps,\n} from '../ChipsInput/useChipsInput';\nimport {\n  DEFAULT_INPUT_VALUE,\n  DEFAULT_VALUE,\n  getNewOptionDataDefault,\n  getOptionLabelDefault,\n  getOptionValueDefault,\n} from '../ChipsInputBase/constants';\nimport type { ChipOption } from '../ChipsInputBase/types';\nimport { DEFAULT_EMPTY_TEXT, DEFAULT_SELECTED_BEHAVIOR, isNotServicePreset } from './constants';\nimport type { OptionPreset } from './types';\n\nexport interface UseChipsSelectProps<O extends ChipOption = ChipOption>\n  extends UseChipsInputProps<O> {\n  options?: O[];\n  /**\n   * Возможность создавать чипы которых нет в списке:\n   * - `true` – добавление по кнопке Enter;\n   * - `<текст>` – помимо возможности добавления через Enter, в пункте меню появится кнопка с текстом.\n   * Текст для пункта, создающего чипы при клике, также отвечает за то, будет ли показан этот пункт\n   * (показывается после того как в списке не останется опций).\n   */\n  creatable?: boolean | string;\n  /**\n   * Текст, который показывается если список опций пуст\n   */\n  emptyText?: string;\n  /**\n   * Показывать или скрывать уже выбранные опции.\n   */\n  selectedBehavior?: 'hide' | 'highlight';\n  filterFn?: false | FilterFn<O>;\n}\n\nexport const useChipsSelect = <O extends ChipOption>({\n  // common\n  disabled,\n\n  // option\n  value: valueProp,\n  defaultValue,\n  onChange,\n  getOptionLabel = getOptionLabelDefault,\n  getOptionValue = getOptionValueDefault,\n  getNewOptionData = getNewOptionDataDefault,\n\n  // input\n  inputValue: inputValueProp,\n  defaultInputValue = DEFAULT_INPUT_VALUE,\n  onInputChange: onInputChangeProp,\n\n  // dropdown\n  creatable = false,\n  emptyText = DEFAULT_EMPTY_TEXT,\n  filterFn = defaultFilterFn,\n  selectedBehavior = DEFAULT_SELECTED_BEHAVIOR,\n  options: optionsProp = DEFAULT_VALUE,\n}: UseChipsSelectProps<O>) => {\n  const { value, inputValue, onInputChange, ...restChipsInputProps } = useChipsInput({\n    // option\n    value: valueProp,\n    defaultValue,\n    onChange,\n    getOptionValue,\n    getOptionLabel,\n    getNewOptionData,\n\n    // input\n    inputValue: inputValueProp,\n    defaultInputValue,\n    onInputChange: onInputChangeProp,\n\n    // other\n    disabled,\n  });\n\n  // dropdown\n  const [opened, setOpened] = React.useState(false);\n  const [options, setOptions] = React.useState<Array<OptionPreset<O>>>(() =>\n    opened\n      ? transformOptions({\n          value,\n          getOptionValue,\n          getOptionLabel,\n          inputValue,\n          emptyText,\n          creatable,\n          filterFn,\n          options: optionsProp,\n          selectedBehavior,\n        })\n      : [],\n  );\n  const [focusedOptionIndex, setFocusedOptionIndex] = React.useState<number | null>(0);\n  const [focusedOption, setFocusedOption] = React.useState<O | null>(null);\n\n  const handleInputChange = React.useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      onInputChange(event);\n\n      if (!opened) {\n        setOpened(true);\n        setFocusedOptionIndex(0);\n      }\n    },\n    [onInputChange, opened],\n  );\n\n  useIsomorphicLayoutEffect(\n    function handleDropdownOpen() {\n      if (!opened) {\n        return;\n      }\n\n      setOptions((prevOptions) => {\n        const nextOptions = transformOptions({\n          value,\n          getOptionValue,\n          getOptionLabel,\n          inputValue,\n          emptyText,\n          creatable,\n          filterFn,\n          options: optionsProp,\n          selectedBehavior,\n        });\n\n        if (isEqual(prevOptions, nextOptions)) {\n          return prevOptions;\n        }\n\n        return nextOptions;\n      });\n    },\n    [\n      opened,\n      value,\n      getOptionLabel,\n      getOptionValue,\n      inputValue,\n      optionsProp,\n      creatable,\n      selectedBehavior,\n      filterFn,\n    ],\n  );\n\n  return {\n    ...restChipsInputProps,\n\n    // options\n    value,\n\n    // input\n    inputValue,\n    onInputChange: handleInputChange,\n\n    // dropdown states\n    options,\n    opened,\n    setOpened,\n    focusedOption,\n    focusedOptionIndex,\n    setFocusedOption,\n    setFocusedOptionIndex,\n  };\n};\n\nfunction transformOptions<O extends ChipOption>({\n  value,\n  getOptionValue = getOptionValueDefault,\n  getOptionLabel = getOptionLabelDefault,\n  inputValue = DEFAULT_INPUT_VALUE,\n  emptyText = DEFAULT_EMPTY_TEXT,\n  creatable = false,\n  filterFn = defaultFilterFn,\n  options: optionsProp = DEFAULT_VALUE,\n  selectedBehavior = DEFAULT_SELECTED_BEHAVIOR,\n}: Required<Pick<UseChipsSelectProps<O>, 'value'>> &\n  Pick<\n    UseChipsSelectProps<O>,\n    | 'getOptionValue'\n    | 'getOptionLabel'\n    | 'inputValue'\n    | 'emptyText'\n    | 'creatable'\n    | 'filterFn'\n    | 'options'\n    | 'selectedBehavior'\n  >) {\n  const filteredOptionsProp = filterFn\n    ? optionsProp.filter((option) => filterFn(inputValue, option, getOptionLabel))\n    : optionsProp;\n\n  if (filteredOptionsProp.length === 0) {\n    if (inputValue !== DEFAULT_INPUT_VALUE && typeof creatable === 'string') {\n      return [{ actionText: creatable }];\n    }\n    return [{ placeholder: emptyText }];\n  }\n\n  const parsedOptions = transformValue(filteredOptionsProp, getOptionValue, getOptionLabel);\n\n  if (selectedBehavior === 'hide') {\n    const selected = value.map((item) => item.value);\n    return parsedOptions.filter((item) =>\n      isNotServicePreset(item) ? !selected.includes(item.value) : false,\n    );\n  }\n  return parsedOptions;\n}\n"],"names":["React","isEqual","defaultFilterFn","useIsomorphicLayoutEffect","transformValue","useChipsInput","DEFAULT_INPUT_VALUE","DEFAULT_VALUE","getNewOptionDataDefault","getOptionLabelDefault","getOptionValueDefault","DEFAULT_EMPTY_TEXT","DEFAULT_SELECTED_BEHAVIOR","isNotServicePreset","useChipsSelect","disabled","value","valueProp","defaultValue","onChange","getOptionLabel","getOptionValue","getNewOptionData","inputValue","inputValueProp","defaultInputValue","onInputChange","onInputChangeProp","creatable","emptyText","filterFn","selectedBehavior","options","optionsProp","restChipsInputProps","opened","setOpened","useState","setOptions","transformOptions","focusedOptionIndex","setFocusedOptionIndex","focusedOption","setFocusedOption","handleInputChange","useCallback","event","handleDropdownOpen","prevOptions","nextOptions","filteredOptionsProp","filter","option","length","actionText","placeholder","parsedOptions","selected","map","item","includes"],"mappings":"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"}