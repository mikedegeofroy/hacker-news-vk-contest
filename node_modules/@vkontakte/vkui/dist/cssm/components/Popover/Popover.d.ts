import * as React from 'react';
import { type FloatingComponentProps, type FloatingContentRenderProp, type OnShownChange } from '../../lib/floating';
import type { HTMLAttributesWithRootRef } from '../../types';
/**
 * @alias
 * @public
 */
export type PopoverOnShownChange = OnShownChange;
/**
 * @alias
 * @public
 */
export type PopoverContentRenderProp = FloatingContentRenderProp;
type AllowedFloatingComponentProps = Pick<FloatingComponentProps, 'placement' | 'onPlacementChange' | 'trigger' | 'content' | 'hoverDelay' | 'closeAfterClick' | 'offsetByMainAxis' | 'offsetByCrossAxis' | 'defaultShown' | 'shown' | 'onShownChange' | 'usePortal' | 'sameWidth' | 'hideWhenReferenceHidden' | 'disabled' | 'disableInteractive' | 'disableCloseOnClickOutside' | 'disableCloseOnEscKey' | 'autoFocus' | 'restoreFocus' | 'children' | 'zIndex'>;
/**
 * @public
 */
export interface PopoverProps extends AllowedFloatingComponentProps, Omit<HTMLAttributesWithRootRef<HTMLDivElement>, keyof FloatingComponentProps> {
    /**
     * Отключает у всплывающего элемента стилизацию по умолчанию, а именно:
     * - background
     * - border-radius
     * - box-shadow
     *
     * Используется в случае, если необходимо стилизовать по своему.
     */
    noStyling?: boolean;
}
/**
 * @see https://vkcom.github.io/VKUI/#/Popover
 */
export declare const Popover: ({ placement: expectedPlacement, onPlacementChange, trigger, content, hoverDelay, closeAfterClick, offsetByMainAxis, offsetByCrossAxis, sameWidth, hideWhenReferenceHidden, disabled, disableInteractive, disableCloseOnClickOutside, disableCloseOnEscKey, defaultShown, shown: shownProp, onShownChange, usePortal, autoFocus, restoreFocus, className, children, noStyling, zIndex, role, ...restPopoverProps }: PopoverProps) => React.JSX.Element;
export {};
//# sourceMappingURL=Popover.d.ts.map