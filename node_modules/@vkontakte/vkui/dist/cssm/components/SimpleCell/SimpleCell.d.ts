import * as React from 'react';
import { HasComponent } from '../../types';
import { TappableProps } from '../Tappable/Tappable';
export interface SimpleCellOwnProps extends HasComponent {
    /**
     * Иконка 28 или `<Avatar size={28|32|40|48|72} />`
     */
    before?: React.ReactNode;
    /**
     * Иконка 12 или `<Badge />`. Добавится слева от текста `children`.
     */
    badgeBeforeTitle?: React.ReactNode;
    /**
     * Иконка 12 или `<Badge />`. Добавится справа от текста `children`.
     */
    badgeAfterTitle?: React.ReactNode;
    /**
     * Иконка 12. Добавится слева от текста `subtitle`.
     */
    badgeBeforeSubtitle?: React.ReactNode;
    /**
     * Иконка 12. Добавится справа от текста `subtitle`.
     */
    badgeAfterSubtitle?: React.ReactNode;
    /**
     * Контейнер для текста справа от `children`.
     */
    indicator?: React.ReactNode;
    /**
     * Дополнительная строка текста над `children`.
     */
    subhead?: React.ReactNode;
    /**
     * Дополнительная строка текста под `children`.
     */
    subtitle?: React.ReactNode;
    /**
     * Дополнительная строка текста под `children` и `subtitle`.
     */
    extraSubtitle?: React.ReactNode;
    /**
     * Иконка 24|28 или `<Switch />`. Располагается справа от `indicator`.
     */
    after?: React.ReactNode;
    /**
     * Убирает анимацию нажатия
     */
    disabled?: boolean;
    /**
     * В режиме `auto` в iOS добавляет chevron справа.
     * Передавать `always`, если предполагается переход при клике по ячейке.
     */
    expandable?: 'auto' | 'always';
    /**
     * Размер chevron
     */
    chevronSize?: 's' | 'm';
    /**
     * Включает многострочный режим для отображения текста
     */
    multiline?: boolean;
}
export interface SimpleCellProps extends SimpleCellOwnProps, TappableProps {
}
/**
 * @see https://vkcom.github.io/VKUI/#/SimpleCell
 */
export declare const SimpleCell: ({ badgeBeforeTitle, badgeAfterTitle, badgeBeforeSubtitle, badgeAfterSubtitle, before, indicator, children, after, expandable, multiline, subhead, subtitle, extraSubtitle, className, chevronSize, ...restProps }: SimpleCellProps) => React.JSX.Element;
//# sourceMappingURL=SimpleCell.d.ts.map