import * as React from 'react';
export interface StateProps {
    /**
     * Указывает, должен ли компонент реагировать на hover-состояние
     */
    hasHover?: boolean;
    /**
     * Позволяет управлять hovered-состоянием извне
     */
    hovered?: boolean;
    /**
     * Позволяет управлять activated-состоянием извне
     */
    activated?: boolean;
    /**
     * Указывает, должен ли компонент реагировать на active-состояние
     */
    hasActive?: boolean;
    /**
     * Длительность показа `activated`-состояния
     */
    activeEffectDelay?: number;
    /**
     * Стиль подсветки active-состояния
     */
    activeClassName?: string;
    /**
     * Стиль подсветки hover-состояния
     */
    hoverClassName?: string;
}
export declare const DEFAULT_ACTIVE_EFFECT_DELAY = 600;
export declare const ACTIVE_DELAY = 70;
export declare const ClickableLockStateContext: React.Context<((v: boolean) => void) | undefined>;
/**
 * Блокирует стейт на всплытие
 */
export declare function useLockState(): readonly [boolean, (v: boolean) => void, (...args: any[]) => void];
/**
 * Управляет состоянием компонента
 */
export declare function useState({ hasHover, hasActive, ...restProps }: StateProps): {
    stateClassName: string;
    setLockBubblingImmediate: (...args: any[]) => void;
};
//# sourceMappingURL=useState.d.ts.map