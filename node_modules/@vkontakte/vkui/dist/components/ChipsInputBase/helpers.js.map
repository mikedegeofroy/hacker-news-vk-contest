{"version":3,"sources":["../../../src/components/ChipsInputBase/helpers.ts"],"sourcesContent":["import { DEFAULT_INPUT_VALUE } from './constants';\nimport type { ChipOption, ChipOptionValue, NavigateTo } from './types';\n\n/**\n * @private\n */\nexport const isValueLikeChipOptionObject = <O extends ChipOption>(v: O | ChipOptionValue): v is O =>\n  typeof v === 'object' && 'value' in v;\n\n/**\n * @private\n */\nexport const isInputValueEmpty = (input: HTMLInputElement | null) =>\n  input ? input.value === DEFAULT_INPUT_VALUE : true;\n\n/**\n * @private\n */\nexport const getChipOptionIndexByValueProp = <O extends ChipOption>(\n  optionProp: O | ChipOptionValue,\n  valueProp: O[],\n) => {\n  const value = isValueLikeChipOptionObject(optionProp) ? optionProp.value : optionProp;\n  return valueProp.findIndex((option) => option.value === value);\n};\n\n/**\n * @private\n */\nexport const getChipOptionIndexByHTMLElement = (el: HTMLElement | null) => {\n  const value = el && el.dataset.index;\n  return typeof value === 'string' ? Number(value) : -1;\n};\n\n/**\n * @private\n */\nexport const getChipOptionValueByHTMLElement = (el: HTMLElement | null) => {\n  const value = el && el.dataset.value;\n  return typeof value === 'string' ? value : -1;\n};\n\n/**\n * @private\n */\nexport const getNextChipOptionIndexByNavigateToProp = (\n  currentIndex: number,\n  navigateTo: NavigateTo,\n  length: number,\n) => {\n  const FIRST_INDEX = 0;\n  const LAST_INDEX = length - 1;\n  switch (navigateTo) {\n    case 'first':\n      return FIRST_INDEX;\n    case 'prev':\n      const prevIndex = currentIndex - 1;\n      return prevIndex < 0 ? LAST_INDEX : prevIndex;\n    case 'next':\n      const nextIndex = currentIndex + 1;\n      return nextIndex > LAST_INDEX ? 0 : nextIndex;\n    case 'last':\n      return LAST_INDEX;\n    default:\n      /* istanbul ignore next */\n      return -1;\n  }\n};\n"],"names":["DEFAULT_INPUT_VALUE","isValueLikeChipOptionObject","v","isInputValueEmpty","input","value","getChipOptionIndexByValueProp","optionProp","valueProp","findIndex","option","getChipOptionIndexByHTMLElement","el","dataset","index","Number","getChipOptionValueByHTMLElement","getNextChipOptionIndexByNavigateToProp","currentIndex","navigateTo","length","FIRST_INDEX","LAST_INDEX","prevIndex","nextIndex"],"mappings":"AAAA,SAASA,mBAAmB,QAAQ,cAAc;AAGlD;;CAEC,GACD,OAAO,MAAMC,8BAA8B,CAAuBC,IAChE,OAAOA,MAAM,YAAY,WAAWA,EAAE;AAExC;;CAEC,GACD,OAAO,MAAMC,oBAAoB,CAACC,QAChCA,QAAQA,MAAMC,KAAK,KAAKL,sBAAsB,KAAK;AAErD;;CAEC,GACD,OAAO,MAAMM,gCAAgC,CAC3CC,YACAC;IAEA,MAAMH,QAAQJ,4BAA4BM,cAAcA,WAAWF,KAAK,GAAGE;IAC3E,OAAOC,UAAUC,SAAS,CAAC,CAACC,SAAWA,OAAOL,KAAK,KAAKA;AAC1D,EAAE;AAEF;;CAEC,GACD,OAAO,MAAMM,kCAAkC,CAACC;IAC9C,MAAMP,QAAQO,MAAMA,GAAGC,OAAO,CAACC,KAAK;IACpC,OAAO,OAAOT,UAAU,WAAWU,OAAOV,SAAS,CAAC;AACtD,EAAE;AAEF;;CAEC,GACD,OAAO,MAAMW,kCAAkC,CAACJ;IAC9C,MAAMP,QAAQO,MAAMA,GAAGC,OAAO,CAACR,KAAK;IACpC,OAAO,OAAOA,UAAU,WAAWA,QAAQ,CAAC;AAC9C,EAAE;AAEF;;CAEC,GACD,OAAO,MAAMY,yCAAyC,CACpDC,cACAC,YACAC;IAEA,MAAMC,cAAc;IACpB,MAAMC,aAAaF,SAAS;IAC5B,OAAQD;QACN,KAAK;YACH,OAAOE;QACT,KAAK;YACH,MAAME,YAAYL,eAAe;YACjC,OAAOK,YAAY,IAAID,aAAaC;QACtC,KAAK;YACH,MAAMC,YAAYN,eAAe;YACjC,OAAOM,YAAYF,aAAa,IAAIE;QACtC,KAAK;YACH,OAAOF;QACT;YACE,wBAAwB,GACxB,OAAO,CAAC;IACZ;AACF,EAAE"}