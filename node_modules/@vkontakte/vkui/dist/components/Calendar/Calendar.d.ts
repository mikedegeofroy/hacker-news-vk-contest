import * as React from 'react';
import { HTMLAttributesWithRootRef } from '../../types';
import { CalendarDaysProps } from '../CalendarDays/CalendarDays';
import { CalendarHeaderProps } from '../CalendarHeader/CalendarHeader';
import { CalendarTimeProps } from '../CalendarTime/CalendarTime';
export interface CalendarProps extends Omit<HTMLAttributesWithRootRef<HTMLDivElement>, 'onChange'>, Pick<CalendarTimeProps, 'changeHoursLabel' | 'changeMinutesLabel'>, Pick<CalendarHeaderProps, 'prevMonthLabel' | 'nextMonthLabel' | 'changeMonthLabel' | 'changeYearLabel' | 'onNextMonth' | 'onPrevMonth' | 'prevMonthIcon' | 'nextMonthIcon' | 'prevMonthProps' | 'nextMonthProps'>, Pick<CalendarDaysProps, 'dayProps' | 'listenDayChangesForUpdate'> {
    value?: Date;
    disablePast?: boolean;
    disableFuture?: boolean;
    enableTime?: boolean;
    disablePickers?: boolean;
    doneButtonText?: string;
    changeDayLabel?: string;
    weekStartsOn?: 0 | 1 | 2 | 3 | 4 | 5 | 6;
    showNeighboringMonth?: boolean;
    size?: 's' | 'm';
    onChange?(value?: Date): void;
    shouldDisableDate?(value: Date): boolean;
    onClose?(): void;
    /**
     * Дата отображаемого месяца.
     * При использовании обновление даты должно происходить вне компонента.
     */
    viewDate?: Date;
    /**
     * Изменение даты в шапке календаря.
     */
    onHeaderChange?(value: Date): void;
    /**
     * Минимальные дата и время, которые можно выбрать
     */
    minDateTime?: Date;
    /**
     * Максимальные дата и время, которые можно выбрать
     */
    maxDateTime?: Date;
}
/**
 * @see https://vkcom.github.io/VKUI/#/Calendar
 */
export declare const Calendar: ({ value, onChange, disablePast, disableFuture, shouldDisableDate, onClose, enableTime, doneButtonText, weekStartsOn, disablePickers, changeHoursLabel, changeMinutesLabel, prevMonthLabel, nextMonthLabel, changeMonthLabel, changeYearLabel, showNeighboringMonth, changeDayLabel, size, viewDate: externalViewDate, onHeaderChange, onNextMonth, onPrevMonth, prevMonthIcon, nextMonthIcon, prevMonthProps, nextMonthProps, dayProps, listenDayChangesForUpdate, minDateTime, maxDateTime, ...props }: CalendarProps) => React.JSX.Element;
//# sourceMappingURL=Calendar.d.ts.map