import * as React from 'react';
import { HasComponent, HasRootRef } from '../../types';
import { RemovableProps } from '../Removable/Removable';
export interface FormItemProps extends React.AllHTMLAttributes<HTMLElement>, HasRootRef<HTMLElement>, HasComponent, RemovableProps {
    top?: React.ReactNode;
    /**
     * Позволяет поменять тег используемый для top
     * Если оставить пустым, то тег top будет span.
     * Если оставить пустым и использовать htmlFor, то тег top будет label.
     */
    topComponent?: React.ElementType;
    bottom?: React.ReactNode;
    /**
     * Передаётся при использовании `bottom`.
     *
     * Должен совпадать с `aria-describedby`, который передаётся в компонент, отвечающий за пользовательский ввод.
     */
    bottomId?: string;
    status?: 'default' | 'error' | 'valid';
    /**
     * Дает возможность удалить `FormItem`. Рекомендуется использовать только для `Input` или `Select`.
     *
     * Режим `indent` предназначен для визуального отступа
     */
    removable?: boolean | 'indent';
    /**
     * Удаляет внешние отступы вокруг компонента
     * @since 5.8.0
     */
    noPadding?: boolean;
}
/**
 * @see https://vkcom.github.io/VKUI/#/FormItem
 */
export declare const FormItem: ({ children, top, topComponent: topComponentProp, bottom, status, removable, onRemove, removePlaceholder, getRootRef, htmlFor, bottomId, noPadding, ...restProps }: FormItemProps) => React.JSX.Element;
//# sourceMappingURL=FormItem.d.ts.map