{"version":3,"sources":["../../../src/components/PullToRefresh/PullToRefresh.tsx"],"sourcesContent":["import * as React from 'react';\nimport { classNames } from '@vkontakte/vkjs';\nimport { clamp } from '../../helpers/math';\nimport { usePlatform } from '../../hooks/usePlatform';\nimport { usePrevious } from '../../hooks/usePrevious';\nimport { DOMProps, useDOM } from '../../lib/dom';\nimport { useIsomorphicLayoutEffect } from '../../lib/useIsomorphicLayoutEffect';\nimport { AnyFunction, HasChildren } from '../../types';\nimport { ScrollContextInterface, useScroll } from '../AppRoot/ScrollContext';\nimport { FixedLayout } from '../FixedLayout/FixedLayout';\nimport { Touch, TouchEvent as TouchEventInternal, TouchProps } from '../Touch/Touch';\nimport TouchRootContext from '../Touch/TouchContext';\nimport { PullToRefreshSpinner } from './PullToRefreshSpinner';\nimport styles from './PullToRefresh.module.css';\n\nconst WAIT_FETCHING_TIMEOUT_MS = 1000;\n\nfunction cancelEvent(event: TouchEventInternal) {\n  /* istanbul ignore if: неясно в какой ситуации `event` из `Touch` может быть не определён */\n  if (!event) {\n    return false;\n  }\n  if ('preventDefault' in event.originalEvent && event.originalEvent.cancelable) {\n    event.originalEvent.preventDefault();\n  }\n  if ('stopPropagation' in event.originalEvent) {\n    event.originalEvent.stopPropagation();\n  }\n  return false;\n}\n\nexport interface PullToRefreshProps extends DOMProps, TouchProps, HasChildren {\n  /**\n   * Будет вызвана для обновления контента (прим.: функция должна быть мемоизированным коллбэком)\n   */\n  onRefresh: AnyFunction;\n  /**\n   * Определяет, выполняется ли обновление. Для скрытия спиннера после получения контента необходимо передать `false`\n   */\n  isFetching?: boolean;\n  /** @ignore */\n  scroll?: ScrollContextInterface;\n}\n\n/**\n * @see https://vkcom.github.io/VKUI/#/PullToRefresh\n */\nexport const PullToRefresh = ({\n  children,\n  isFetching,\n  onRefresh,\n  className,\n  ...restProps\n}: PullToRefreshProps) => {\n  const platform = usePlatform();\n  const scroll = useScroll();\n  const { window, document } = useDOM();\n  const prevIsFetching = usePrevious(isFetching);\n\n  const initParams = React.useMemo(\n    () => ({\n      start: platform === 'ios' ? -10 : -45,\n      max: platform === 'ios' ? 50 : 80,\n      maxY: platform === 'ios' ? 400 : 80,\n      refreshing: platform === 'ios' ? 36 : 50,\n      positionMultiplier: platform === 'ios' ? 0.21 : 1,\n    }),\n    [platform],\n  );\n\n  const [spinnerY, setSpinnerY] = React.useState(initParams.start);\n  const [watching, setWatching] = React.useState(false);\n  const [refreshing, setRefreshing] = React.useState(false);\n  const [canRefresh, setCanRefresh] = React.useState(false);\n  const [touchDown, setTouchDown] = React.useState(false);\n  const prevTouchDown = usePrevious(touchDown);\n\n  const touchY = React.useRef(0);\n  const [contentShift, setContentShift] = React.useState(0);\n  const [spinnerProgress, setSpinnerProgress] = React.useState(0);\n\n  const resetRefreshingState = React.useCallback(() => {\n    setWatching(false);\n    setCanRefresh(false);\n    setRefreshing(false);\n    setSpinnerY(initParams.start);\n    setSpinnerProgress(0);\n    setContentShift(0);\n  }, [initParams]);\n\n  const onRefreshingFinish = React.useCallback(() => {\n    if (!touchDown) {\n      resetRefreshingState();\n    }\n  }, [touchDown, resetRefreshingState]);\n\n  const waitFetchingTimeoutId = React.useRef<NodeJS.Timeout>();\n\n  useIsomorphicLayoutEffect(() => {\n    if (prevIsFetching !== undefined && prevIsFetching && !isFetching) {\n      onRefreshingFinish();\n    }\n  }, [prevIsFetching, isFetching, onRefreshingFinish]);\n\n  useIsomorphicLayoutEffect(() => {\n    if (prevIsFetching !== undefined && !prevIsFetching && isFetching) {\n      clearTimeout(waitFetchingTimeoutId.current);\n    }\n  }, [isFetching, prevIsFetching]);\n\n  const runRefreshing = React.useCallback(() => {\n    if (!refreshing && onRefresh) {\n      // cleanup if the consumer does not start fetching in 1s\n      clearTimeout(waitFetchingTimeoutId.current);\n      waitFetchingTimeoutId.current = setTimeout(onRefreshingFinish, WAIT_FETCHING_TIMEOUT_MS);\n\n      setRefreshing(true);\n      setSpinnerY((prevSpinnerY) => (platform === 'ios' ? prevSpinnerY : initParams.refreshing));\n\n      onRefresh();\n    }\n  }, [refreshing, onRefresh, onRefreshingFinish, platform, initParams.refreshing]);\n\n  useIsomorphicLayoutEffect(() => {\n    if (prevTouchDown !== undefined && prevTouchDown && !touchDown) {\n      if (!refreshing && canRefresh) {\n        runRefreshing();\n      } else if (refreshing && !isFetching) {\n        // only iOS can start refresh before gesture end\n        resetRefreshingState();\n        /* istanbul ignore if: TODO написать тест */\n      } else {\n        // refreshing && isFetching: refresh in progress\n        // OR !refreshing && !canRefresh: pull was not strong enough\n        setSpinnerY(refreshing ? initParams.refreshing : initParams.start);\n        setSpinnerProgress(0);\n        setContentShift(0);\n      }\n    }\n  }, [\n    initParams,\n    prevIsFetching,\n    isFetching,\n    onRefreshingFinish,\n    prevTouchDown,\n    touchDown,\n    refreshing,\n    canRefresh,\n    runRefreshing,\n  ]);\n\n  useIsomorphicLayoutEffect(\n    function toggleBodyOverscrollBehavior() {\n      /* istanbul ignore if: невозможный кейс, т.к. в SSR эффекты не вызываются. Проверка на будущее, если вдруг эффект будет вызываться. */\n      if (!window || !document) {\n        return;\n      }\n\n      /**\n       * ⚠️ В частности, необходимо для iOS 15. Начиная с этой версии в Safari добавили\n       * pull-to-refresh. CSS св-во `overflow-behavior` появился только с iOS 16.\n       *\n       * Во вторую очередь, полезна блокированием скролла, чтобы пользователь дождался обновления\n       * данных.\n       */\n      /* istanbul ignore next: в jest не протестировать */\n      const handleWindowTouchMoveForPreventIOSViewportBounce = (event: TouchEvent) => {\n        event.preventDefault();\n        event.stopPropagation();\n      };\n\n      if (watching || refreshing) {\n        // eslint-disable-next-line no-restricted-properties\n        document.documentElement.classList.add('vkui--disable-overscroll-behavior');\n        /* istanbul ignore next: в jest не протестировать */\n        window.addEventListener('touchmove', handleWindowTouchMoveForPreventIOSViewportBounce, {\n          passive: false,\n        });\n      }\n\n      return () => {\n        // eslint-disable-next-line no-restricted-properties\n        document.documentElement.classList.remove('vkui--disable-overscroll-behavior');\n        /* istanbul ignore next: в jest не протестировать */\n        window.removeEventListener('touchmove', handleWindowTouchMoveForPreventIOSViewportBounce);\n      };\n    },\n    [window, document, watching, refreshing],\n  );\n\n  const startYRef = React.useRef(0);\n\n  const onTouchStart = (event: TouchEventInternal) => {\n    if (refreshing) {\n      cancelEvent(event);\n      return;\n    }\n    setTouchDown(true);\n    startYRef.current = event.startY;\n  };\n\n  const iosRefreshStartedRef = React.useRef(false);\n  const onTouchMove = (event: TouchEventInternal) => {\n    const { isY, shiftY } = event;\n    const { start, max } = initParams;\n    const pageYOffset = scroll?.getScroll().y;\n\n    if (watching && touchDown) {\n      cancelEvent(event);\n\n      const { positionMultiplier, maxY } = initParams;\n\n      const shift = Math.max(0, shiftY - touchY.current);\n\n      const currentY = clamp(start + shift * positionMultiplier, start, maxY);\n      const progress = currentY > -10 ? Math.abs((currentY + 10) / max) * 80 : 0;\n\n      setSpinnerY(currentY);\n      setSpinnerProgress(clamp(progress, 0, 80));\n      setCanRefresh(progress > 80);\n      setContentShift((currentY + 10) * 2.3);\n\n      const iosCanStartRefreshDuringGesture =\n        platform === 'ios' && progress > 85 && !refreshing && !iosRefreshStartedRef.current;\n      if (iosCanStartRefreshDuringGesture) {\n        iosRefreshStartedRef.current = true;\n        runRefreshing();\n      }\n    } else if (isY && pageYOffset === 0 && shiftY > 0 && !refreshing && touchDown) {\n      cancelEvent(event);\n\n      touchY.current = shiftY;\n      setWatching(true);\n      setSpinnerY(start);\n      setSpinnerProgress(0);\n    }\n  };\n\n  const onTouchEnd = () => {\n    setWatching(false);\n    setTouchDown(false);\n    iosRefreshStartedRef.current = false;\n  };\n\n  const spinnerTransform = `translate3d(0, ${spinnerY}px, 0)`;\n  let contentTransform = '';\n\n  if (platform === 'ios' && refreshing && !touchDown) {\n    contentTransform = 'translate3d(0, 100px, 0)';\n  } else if (platform === 'ios' && (contentShift || refreshing)) {\n    contentTransform = `translate3d(0, ${contentShift}px, 0)`;\n  }\n\n  return (\n    <TouchRootContext.Provider value={true}>\n      <Touch\n        aria-live=\"polite\"\n        aria-busy={!!isFetching}\n        {...restProps}\n        onStart={onTouchStart}\n        onMove={onTouchMove}\n        onEnd={onTouchEnd}\n        className={classNames(\n          styles['PullToRefresh'],\n          platform === 'ios' && styles['PullToRefresh--ios'],\n          watching && styles['PullToRefresh--watching'],\n          refreshing && styles['PullToRefresh--refreshing'],\n          className,\n        )}\n      >\n        <FixedLayout className={styles['PullToRefresh__controls']} useParentWidth>\n          <PullToRefreshSpinner\n            style={{\n              transform: spinnerTransform,\n              WebkitTransform: spinnerTransform,\n              opacity: watching || refreshing || canRefresh ? 1 : 0,\n            }}\n            on={refreshing}\n            progress={refreshing ? undefined : spinnerProgress}\n          />\n        </FixedLayout>\n\n        <div\n          className={styles['PullToRefresh__content']}\n          style={{\n            transform: contentTransform,\n            WebkitTransform: contentTransform,\n          }}\n        >\n          {children}\n        </div>\n      </Touch>\n    </TouchRootContext.Provider>\n  );\n};\n"],"names":["React","classNames","clamp","usePlatform","usePrevious","useDOM","useIsomorphicLayoutEffect","useScroll","FixedLayout","Touch","TouchRootContext","PullToRefreshSpinner","WAIT_FETCHING_TIMEOUT_MS","cancelEvent","event","originalEvent","cancelable","preventDefault","stopPropagation","PullToRefresh","children","isFetching","onRefresh","className","restProps","platform","scroll","window","document","prevIsFetching","initParams","useMemo","start","max","maxY","refreshing","positionMultiplier","spinnerY","setSpinnerY","useState","watching","setWatching","setRefreshing","canRefresh","setCanRefresh","touchDown","setTouchDown","prevTouchDown","touchY","useRef","contentShift","setContentShift","spinnerProgress","setSpinnerProgress","resetRefreshingState","useCallback","onRefreshingFinish","waitFetchingTimeoutId","undefined","clearTimeout","current","runRefreshing","setTimeout","prevSpinnerY","toggleBodyOverscrollBehavior","handleWindowTouchMoveForPreventIOSViewportBounce","documentElement","classList","add","addEventListener","passive","remove","removeEventListener","startYRef","onTouchStart","startY","iosRefreshStartedRef","onTouchMove","isY","shiftY","pageYOffset","getScroll","y","shift","Math","currentY","progress","abs","iosCanStartRefreshDuringGesture","onTouchEnd","spinnerTransform","contentTransform","Provider","value","aria-live","aria-busy","onStart","onMove","onEnd","useParentWidth","style","transform","WebkitTransform","opacity","on","div"],"mappings":"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"}