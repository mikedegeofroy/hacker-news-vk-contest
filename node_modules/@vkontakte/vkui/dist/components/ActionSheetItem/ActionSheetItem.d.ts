import * as React from 'react';
export interface ActionSheetItemProps extends React.HTMLAttributes<HTMLElement>, React.AnchorHTMLAttributes<HTMLElement>, Pick<React.InputHTMLAttributes<HTMLInputElement>, 'name' | 'checked' | 'value'> {
    mode?: 'default' | 'destructive' | 'cancel';
    before?: React.ReactNode;
    after?: React.ReactNode;
    meta?: React.ReactNode;
    subtitle?: React.ReactNode;
    /**
     * По умолчанию клик на опцию вызывает переданную в `ActionSheet` функцию `onClose`, данное свойство
     * позволяет отключить такое поведение
     */
    autoCloseDisabled?: boolean;
    selectable?: boolean;
    disabled?: boolean;
    /**
     * Все текстовые элементы при необходимости занимают несколько строк
     */
    multiline?: boolean;
    /**
     * По умолчанию onClick будет вызван после завершения анимации скрытия и после вызова onClose.
     * Из этого следует, что в объекте события значения полей типа `currentTarget` будут не определены.
     * Если вам нужен объект события именно на момент клика, используйте `onImmediateClick`.
     */
    onClick?: React.MouseEventHandler<HTMLElement>;
    onImmediateClick?: React.MouseEventHandler<HTMLElement>;
    /**
     * Иконка для `checked` режима.
     */
    iconChecked?: React.ReactNode;
    /**
     * Позволяет отделить ActionItem от CancelItem для определении того,
     * кто вызвал закрытие ActionSheet. Используется в ActionSheet.onClose()
     */
    isCancelItem?: boolean;
}
/**
 * @see https://vkcom.github.io/VKUI/#/ActionSheetItem
 */
export declare const ActionSheetItem: ({ children, autoCloseDisabled, mode, meta, subtitle, before, after, selectable, value, name, checked, defaultChecked, onChange, onClick, onImmediateClick, multiline, iconChecked, className, isCancelItem, ...restProps }: ActionSheetItemProps) => React.JSX.Element;
//# sourceMappingURL=ActionSheetItem.d.ts.map