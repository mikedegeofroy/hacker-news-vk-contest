{"version":3,"sources":["../../../src/components/View/View.tsx"],"sourcesContent":["import * as React from 'react';\nimport { classNames, noop } from '@vkontakte/vkjs';\nimport { usePlatform } from '../../hooks/usePlatform';\nimport { usePrevious } from '../../hooks/usePrevious';\nimport { useTimeout } from '../../hooks/useTimeout';\nimport { useWaitTransitionFinish } from '../../hooks/useWaitTransitionFinish';\nimport { blurActiveElement, canUseDOM, useDOM } from '../../lib/dom';\nimport { getNavId, NavIdProps } from '../../lib/getNavId';\nimport { animationEvent } from '../../lib/supportEvents';\nimport { useIsomorphicLayoutEffect } from '../../lib/useIsomorphicLayoutEffect';\nimport { warnOnce } from '../../lib/warnOnce';\nimport { HTMLAttributesWithRootRef } from '../../types';\nimport { useScroll } from '../AppRoot/ScrollContext';\nimport { useConfigProvider } from '../ConfigProvider/ConfigProviderContext';\nimport { NavViewIdContext } from '../NavIdContext/NavIdContext';\nimport { NavTransitionProvider } from '../NavTransitionContext/NavTransitionContext';\nimport { NavTransitionDirectionProvider } from '../NavTransitionDirectionContext/NavTransitionDirectionContext';\nimport { useSplitCol } from '../SplitCol/SplitColContext';\nimport { Touch, TouchEvent } from '../Touch/Touch';\nimport {\n  getSwipeBackPredicates,\n  hasHorizontalScrollableElementWithScrolledToLeft,\n  swipeBackExcluded,\n} from './utils';\nimport styles from './View.module.css';\n\ninterface Scrolls {\n  [index: string]: number | undefined;\n}\n\ninterface ViewsScrolls {\n  [index: string]: Scrolls;\n}\n\nexport let scrollsCache: ViewsScrolls = {};\n\nexport interface ViewProps extends HTMLAttributesWithRootRef<HTMLElement>, NavIdProps {\n  activePanel: string;\n  onTransition?(params: { isBack: boolean; from: string; to: string }): void;\n  /**\n   * callback свайпа назад\n   */\n  onSwipeBack?(): void;\n  /**\n   * callback начала анимации свайпа назад.\n   *\n   * Чтобы остановить свайп назад, возвращайте `\"prevent\"`.\n   */\n  onSwipeBackStart?(activePanel: string | null): void | 'prevent';\n  /**\n   * callback завершения анимации отмененного пользователем свайпа\n   */\n  onSwipeBackCancel?(): void;\n  history?: string[];\n\n  children: React.ReactElement | Iterable<React.ReactElement>;\n}\n\nconst warn = warnOnce('View');\n\n/**\n * @see https://vkcom.github.io/VKUI/#/View\n */\nexport const View = ({\n  activePanel: activePanelProp,\n  history,\n  nav,\n  onTransition,\n  onSwipeBack,\n  onSwipeBackStart,\n  onSwipeBackCancel: onSwipeBackCancelProp,\n  children,\n  className,\n  ...restProps\n}: ViewProps) => {\n  const id = getNavId({ nav, id: restProps.id });\n  const scrolls = React.useRef(scrollsCache[id as string] || {});\n  const afterTransition = React.useRef(noop);\n\n  React.useEffect(() => () => {\n    if (id) {\n      scrollsCache[id] = scrolls.current;\n    }\n  });\n\n  const panelNodes = React.useRef<{ [id: string]: HTMLDivElement | null }>({});\n\n  const { window, document } = useDOM();\n  const scroll = useScroll();\n  const configProvider = useConfigProvider();\n  const splitCol = useSplitCol();\n  const platform = usePlatform();\n\n  const [animated, setAnimated] = React.useState(false);\n\n  const [visiblePanels, setVisiblePanels] = React.useState([activePanelProp]);\n  const [activePanel, setActivePanel] = React.useState<string | null>(activePanelProp);\n  const [isBack, setIsBack] = React.useState<boolean | undefined>(undefined);\n  const [prevPanel, setPrevPanel] = React.useState<string | null>(null);\n  const [nextPanel, setNextPanel] = React.useState<string | null>(null);\n\n  const swipeBackPrevented = React.useRef<boolean>(false);\n  const [swipingBack, setSwipingBack] = React.useState<boolean | undefined>(undefined);\n  const [swipeBackStartX, setSwipeBackStartX] = React.useState<number>(0);\n  const [swipeBackShift, setSwipeBackShift] = React.useState<number>(0);\n  const [swipeBackNextPanel, setSwipeBackNextPanel] = React.useState<string | null>(null);\n  const [swipeBackPrevPanel, setSwipeBackPrevPanel] = React.useState<string | null>(null);\n  const [swipeBackResult, setSwipeBackResult] = React.useState<'success' | 'fail' | null>(null);\n\n  const [browserSwipe, setBrowserSwipe] = React.useState(false);\n\n  const prevActivePanel = usePrevious(activePanelProp);\n  const prevSwipingBack = usePrevious(swipingBack);\n  const prevBrowserSwipe = usePrevious(browserSwipe);\n  const prevSwipeBackResult = usePrevious(swipeBackResult);\n  const prevSwipeBackShift = usePrevious(swipeBackShift);\n  const prevSwipeBackPrevPanel = usePrevious(swipeBackPrevPanel);\n  const prevOnTransition = usePrevious(onTransition);\n\n  const panels = (React.Children.toArray(children) as React.ReactElement[]).filter(\n    (panel: React.ReactElement) => {\n      const panelId = getNavId(panel.props, warn);\n\n      return (\n        (panelId !== undefined && visiblePanels.includes(panelId)) ||\n        panelId === swipeBackPrevPanel ||\n        panelId === swipeBackNextPanel\n      );\n    },\n  );\n\n  const disableAnimation =\n    !configProvider.transitionMotionEnabled || !splitCol.animate || platform === 'vkcom';\n  const iOSSwipeBackSimulationEnabled =\n    !disableAnimation && platform === 'ios' && configProvider.isWebView && Boolean(onSwipeBack);\n\n  const pickPanel = (id: string | null) => {\n    if (id === null) {\n      return null;\n    }\n    return panelNodes.current[id];\n  };\n\n  const flushTransition = React.useCallback(\n    (prevPanel: string, isBackTransition: boolean) => {\n      if (isBackTransition) {\n        scrolls.current[prevPanel] = 0;\n      }\n      setPrevPanel(null);\n      setNextPanel(null);\n      setVisiblePanels([activePanelProp]);\n      setActivePanel(activePanelProp);\n      setAnimated(false);\n      setIsBack(isBackTransition);\n\n      afterTransition.current = () => {\n        scroll?.scrollTo(0, isBackTransition ? scrolls.current[activePanelProp] : 0);\n        onTransition &&\n          onTransition({\n            isBack: isBackTransition,\n            from: prevPanel,\n            to: activePanelProp,\n          });\n      };\n    },\n    [activePanelProp, onTransition, scroll],\n  );\n\n  useIsomorphicLayoutEffect(() => {\n    afterTransition.current();\n    afterTransition.current = noop;\n  }, [afterTransition.current]);\n\n  const transitionEndHandler = React.useCallback(\n    (e?: React.AnimationEvent): void => {\n      if (\n        (!e ||\n          [\n            styles['animation-ios-next-forward'],\n            styles['animation-ios-prev-back'],\n            styles['animation-view-next-forward'],\n            styles['animation-view-prev-back'],\n          ].includes(e.animationName)) &&\n        prevPanel !== null\n      ) {\n        flushTransition(prevPanel, Boolean(isBack));\n      }\n    },\n    [flushTransition, isBack, prevPanel],\n  );\n\n  const { waitTransitionFinish } = useWaitTransitionFinish();\n  const animationFinishTimeout = useTimeout(transitionEndHandler, platform === 'ios' ? 600 : 300);\n\n  const onSwipeBackSuccess = React.useCallback(() => {\n    onSwipeBack && onSwipeBack();\n  }, [onSwipeBack]);\n\n  const onSwipeBackCancel = React.useCallback(() => {\n    onSwipeBackCancelProp && onSwipeBackCancelProp();\n    setSwipeBackPrevPanel(null);\n    setSwipeBackNextPanel(null);\n    setSwipingBack(false);\n    setSwipeBackResult(null);\n    setSwipeBackStartX(0);\n    setSwipeBackShift(0);\n  }, [onSwipeBackCancelProp]);\n\n  const swipingBackTransitionEndHandler = React.useCallback(\n    (e?: TransitionEvent): void => {\n      // indexOf because of vendor prefixes in old browsers\n      if (\n        !e ||\n        (e?.propertyName.includes('transform') && e?.target === pickPanel(swipeBackNextPanel))\n      ) {\n        switch (swipeBackResult) {\n          case 'fail':\n            onSwipeBackCancel();\n            break;\n          case 'success':\n            onSwipeBackSuccess();\n        }\n      }\n    },\n    [onSwipeBackCancel, onSwipeBackSuccess, swipeBackNextPanel, swipeBackResult],\n  );\n\n  const handleTouchMoveXForNativeIOSSwipeBackOrSwipeNext = (event: TouchEvent) => {\n    if (browserSwipe) {\n      return;\n    }\n    const { swipeBackTriggered, viewportStartEdgeTouched, viewportEndEdgeTouched } =\n      getSwipeBackPredicates(event.startX, event.shiftX, window!.innerWidth);\n\n    if ((viewportStartEdgeTouched || viewportEndEdgeTouched) && swipeBackTriggered) {\n      setBrowserSwipe(true);\n    }\n  };\n\n  const handleTouchMoveXForIOSSwipeBackSimulation = (event: TouchEvent) => {\n    if (swipeBackPrevented.current || swipeBackExcluded(event)) {\n      return;\n    }\n\n    const { swipedToOpposite, swipeBackTriggered, viewportStartEdgeTouched } =\n      getSwipeBackPredicates(event.startX, event.shiftX, window!.innerWidth);\n\n    if (animated && swipeBackTriggered) {\n      return;\n    }\n\n    if (!swipingBack && history && history.length > 1) {\n      if (swipedToOpposite) {\n        swipeBackPrevented.current = true;\n        return;\n      }\n\n      if (!swipeBackTriggered) {\n        return;\n      }\n\n      if (\n        !viewportStartEdgeTouched &&\n        hasHorizontalScrollableElementWithScrolledToLeft(event.originalEvent.target as HTMLElement)\n      ) {\n        swipeBackPrevented.current = true;\n        return;\n      }\n      // Начался свайп назад\n      if (onSwipeBackStart) {\n        const payload = onSwipeBackStart(activePanel);\n        if (payload === 'prevent') {\n          swipeBackPrevented.current = true;\n          return;\n        }\n      }\n\n      if (activePanel !== null) {\n        // Note: вызываем закрытие клавиатуры. В iOS это нативное поведение при свайпе.\n        blurActiveElement(document);\n        scrolls.current[activePanel] = scroll?.getScroll().y;\n      }\n\n      setSwipingBack(true);\n      setSwipeBackStartX(event.startX);\n      setSwipeBackPrevPanel(activePanel);\n      setSwipeBackNextPanel(history.slice(-2)[0]);\n    }\n\n    if (swipingBack) {\n      if (event.shiftX < 0) {\n        setSwipeBackShift(0);\n      } else if (event.shiftX > window!.innerWidth - swipeBackStartX) {\n        setSwipeBackShift(window!.innerWidth);\n      } else {\n        setSwipeBackShift(event.shiftX);\n      }\n    }\n  };\n\n  const handleTouchEndForIOSSwipeBackSimulation = (event: TouchEvent) => {\n    swipeBackPrevented.current = false;\n\n    if (swipingBack) {\n      const speed = (swipeBackShift / event.duration) * 1000;\n      if (swipeBackShift === 0) {\n        onSwipeBackCancel();\n      } else if (swipeBackShift >= (window!.innerWidth ?? 0)) {\n        onSwipeBackSuccess();\n      } else if (speed > 250 || swipeBackShift >= window!.innerWidth / 2) {\n        setSwipeBackResult('success');\n      } else {\n        setSwipeBackResult('fail');\n      }\n    }\n  };\n\n  const calcPanelSwipeStyles = (panelId: string | undefined): React.CSSProperties => {\n    if (!canUseDOM || !window) {\n      return {};\n    }\n\n    const isPrev = panelId === swipeBackPrevPanel;\n    const isNext = panelId === swipeBackNextPanel;\n\n    if ((!isPrev && !isNext) || swipeBackResult) {\n      return {};\n    }\n\n    let prevPanelTranslate = `${swipeBackShift}px`;\n    let nextPanelTranslate = `${-50 + (swipeBackShift * 100) / window.innerWidth / 2}%`;\n\n    if (isNext) {\n      return {\n        transform: `translate3d(${nextPanelTranslate}, 0, 0)`,\n        WebkitTransform: `translate3d(${nextPanelTranslate}, 0, 0)`,\n      };\n    }\n    if (isPrev) {\n      return {\n        transform: `translate3d(${prevPanelTranslate}, 0, 0)`,\n        WebkitTransform: `translate3d(${prevPanelTranslate}, 0, 0)`,\n      };\n    }\n\n    return {};\n  };\n\n  const calcPanelSwipeBackOverlayStyles = (panelId?: string): React.CSSProperties => {\n    if (!canUseDOM || !window) {\n      return {};\n    }\n\n    const isNext = panelId === swipeBackNextPanel;\n    if (!isNext) {\n      return {};\n    }\n\n    const calculatedOpacity = 1 - swipeBackShift / window.innerWidth;\n    const opacityOnSwipeEnd =\n      swipeBackResult === 'success' ? 0 : swipeBackResult === 'fail' ? 1 : null;\n\n    return {\n      display: 'block',\n      opacity: opacityOnSwipeEnd === null ? calculatedOpacity : opacityOnSwipeEnd,\n    };\n  };\n\n  React.useEffect(() => {\n    // Нужен переход\n    if (\n      prevActivePanel &&\n      prevActivePanel !== activePanelProp &&\n      !prevSwipingBack &&\n      !prevBrowserSwipe\n    ) {\n      const firstLayerId = (React.Children.toArray(children) as React.ReactElement[])\n        .map((panel) => getNavId(panel.props, warn))\n        .find((id) => id === prevActivePanel || id === activePanelProp);\n\n      const isBackTransition = firstLayerId === activePanelProp;\n      scrolls.current[prevActivePanel] = scroll?.getScroll().y;\n\n      if (disableAnimation) {\n        flushTransition(prevActivePanel, isBackTransition);\n      } else {\n        blurActiveElement(document);\n\n        setVisiblePanels([prevActivePanel, activePanelProp]);\n        setPrevPanel(prevActivePanel);\n        setNextPanel(activePanelProp);\n        setActivePanel(null);\n        setAnimated(true);\n        setIsBack(isBackTransition);\n\n        // Фолбек анимации перехода\n        if (!animationEvent.supported) {\n          animationFinishTimeout.set();\n        }\n      }\n    }\n\n    // Закончилась анимация свайпа назад\n    if (prevActivePanel && prevActivePanel !== activePanelProp && prevSwipingBack) {\n      const nextPanel = activePanelProp;\n      const prevPanel = prevActivePanel;\n      if (prevSwipeBackPrevPanel) {\n        scrolls.current[prevSwipeBackPrevPanel] = 0;\n      }\n\n      setSwipeBackPrevPanel(null);\n      setSwipeBackNextPanel(null);\n      setSwipingBack(false);\n      setSwipeBackResult(null);\n      setSwipeBackStartX(0);\n      setSwipeBackShift(0);\n      setActivePanel(nextPanel);\n      setVisiblePanels([nextPanel]);\n      setIsBack(true);\n\n      afterTransition.current = () => {\n        if (nextPanel !== null) {\n          scroll?.scrollTo(0, scrolls.current[nextPanel]);\n        }\n        prevOnTransition &&\n          prevOnTransition({\n            isBack: true,\n            from: prevPanel,\n            to: nextPanel,\n          });\n      };\n    }\n\n    // Началась анимация завершения свайпа назад.\n    if (!prevSwipeBackResult && swipeBackResult) {\n      waitTransitionFinish(\n        pickPanel(swipeBackNextPanel),\n        swipingBackTransitionEndHandler,\n        platform === 'ios' ? 600 : 300,\n      );\n    }\n\n    // Закончился Safari свайп\n    if (prevActivePanel !== activePanelProp && browserSwipe) {\n      setBrowserSwipe(false);\n      setNextPanel(null);\n      setPrevPanel(null);\n      setAnimated(false);\n      setVisiblePanels([activePanelProp]);\n      setActivePanel(activePanelProp);\n    }\n  }, [\n    activePanelProp,\n    activePanel,\n    animationFinishTimeout,\n    browserSwipe,\n    children,\n    disableAnimation,\n    document,\n    flushTransition,\n    platform,\n    prevActivePanel,\n    prevBrowserSwipe,\n    prevOnTransition,\n    prevSwipeBackPrevPanel,\n    prevSwipeBackResult,\n    prevSwipingBack,\n    scroll,\n    swipeBackNextPanel,\n    swipeBackResult,\n    swipingBackTransitionEndHandler,\n    waitTransitionFinish,\n  ]);\n\n  React.useEffect(\n    function restoreScrollPositionWhenSwipeBackIsCancelled() {\n      // Если свайп назад отменился (когда пользователь недостаточно сильно свайпнул)\n      const swipeBackCancelledInTheMiddleOfAction =\n        prevSwipeBackResult === 'fail' && !swipeBackResult;\n      const swipeBackCancelledByMovingPanelBackToInitialPoint =\n        prevSwipingBack && !swipingBack && prevSwipeBackShift === 0;\n\n      if (\n        (swipeBackCancelledInTheMiddleOfAction ||\n          swipeBackCancelledByMovingPanelBackToInitialPoint) &&\n        activePanel !== null\n      ) {\n        scroll?.scrollTo(0, scrolls.current[activePanel]);\n      }\n    },\n    [\n      prevSwipeBackResult,\n      swipeBackResult,\n      prevSwipingBack,\n      swipingBack,\n      prevSwipeBackShift,\n      activePanel,\n      scroll,\n    ],\n  );\n\n  return (\n    <NavViewIdContext.Provider value={id}>\n      <Touch\n        Component=\"section\"\n        {...restProps}\n        className={classNames(\n          styles['View'],\n          platform === 'ios' && classNames(styles['View--ios'], 'vkuiInternalView--ios'),\n          !disableAnimation && animated && styles['View--animated'],\n          !disableAnimation && swipingBack && styles['View--swiping-back'],\n          disableAnimation && styles['View--no-motion'],\n          className,\n        )}\n        onMoveX={\n          iOSSwipeBackSimulationEnabled\n            ? handleTouchMoveXForIOSSwipeBackSimulation\n            : platform === 'ios'\n            ? handleTouchMoveXForNativeIOSSwipeBackOrSwipeNext\n            : undefined\n        }\n        onEnd={iOSSwipeBackSimulationEnabled ? handleTouchEndForIOSSwipeBackSimulation : undefined}\n      >\n        <div className={styles['View__panels']}>\n          {panels.map((panel: React.ReactElement) => {\n            const panelId = getNavId(panel.props, warn);\n            const isPrev = panelId === prevPanel || panelId === swipeBackPrevPanel;\n            const isTransitionTarget = animated && panelId === (isBack ? prevPanel : nextPanel);\n            const compensateScroll =\n              isPrev || panelId === swipeBackNextPanel || (panelId === nextPanel && isBack);\n\n            return (\n              <div\n                className={classNames(\n                  styles['View__panel'],\n                  panelId === activePanel && styles['View__panel--active'],\n                  panelId === prevPanel && styles['View__panel--prev'],\n                  panelId === nextPanel && styles['View__panel--next'],\n                  panelId === swipeBackPrevPanel && styles['View__panel--swipe-back-prev'],\n                  panelId === swipeBackNextPanel && styles['View__panel--swipe-back-next'],\n                  swipeBackResult === 'success' && styles['View__panel--swipe-back-success'],\n                  swipeBackResult === 'fail' && styles['View__panel--swipe-back-failed'],\n                )}\n                onAnimationEnd={isTransitionTarget ? transitionEndHandler : undefined}\n                ref={(el) => panelId !== undefined && (panelNodes.current[panelId] = el)}\n                style={calcPanelSwipeStyles(panelId)}\n                key={panelId}\n              >\n                {platform === 'ios' && (\n                  <div\n                    className={styles['View__panel-overlay']}\n                    style={calcPanelSwipeBackOverlayStyles(panelId)}\n                  />\n                )}\n                <div\n                  className={styles['View__panel-in']}\n                  style={{\n                    marginTop: compensateScroll ? -(scrolls.current[panelId] ?? 0) : undefined,\n                  }}\n                >\n                  <NavTransitionDirectionProvider isBack={swipingBack || isBack}>\n                    <NavTransitionProvider\n                      entering={panelId === nextPanel || panelId === swipeBackNextPanel}\n                    >\n                      {panel}\n                    </NavTransitionProvider>\n                  </NavTransitionDirectionProvider>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      </Touch>\n    </NavViewIdContext.Provider>\n  );\n};\n"],"names":["React","classNames","noop","usePlatform","usePrevious","useTimeout","useWaitTransitionFinish","blurActiveElement","canUseDOM","useDOM","getNavId","animationEvent","useIsomorphicLayoutEffect","warnOnce","useScroll","useConfigProvider","NavViewIdContext","NavTransitionProvider","NavTransitionDirectionProvider","useSplitCol","Touch","getSwipeBackPredicates","hasHorizontalScrollableElementWithScrolledToLeft","swipeBackExcluded","scrollsCache","warn","View","activePanel","activePanelProp","history","nav","onTransition","onSwipeBack","onSwipeBackStart","onSwipeBackCancel","onSwipeBackCancelProp","children","className","restProps","id","scrolls","useRef","afterTransition","useEffect","current","panelNodes","window","document","scroll","configProvider","splitCol","platform","animated","setAnimated","useState","visiblePanels","setVisiblePanels","setActivePanel","isBack","setIsBack","undefined","prevPanel","setPrevPanel","nextPanel","setNextPanel","swipeBackPrevented","swipingBack","setSwipingBack","swipeBackStartX","setSwipeBackStartX","swipeBackShift","setSwipeBackShift","swipeBackNextPanel","setSwipeBackNextPanel","swipeBackPrevPanel","setSwipeBackPrevPanel","swipeBackResult","setSwipeBackResult","browserSwipe","setBrowserSwipe","prevActivePanel","prevSwipingBack","prevBrowserSwipe","prevSwipeBackResult","prevSwipeBackShift","prevSwipeBackPrevPanel","prevOnTransition","panels","Children","toArray","filter","panel","panelId","props","includes","disableAnimation","transitionMotionEnabled","animate","iOSSwipeBackSimulationEnabled","isWebView","Boolean","pickPanel","flushTransition","useCallback","isBackTransition","scrollTo","from","to","transitionEndHandler","e","animationName","waitTransitionFinish","animationFinishTimeout","onSwipeBackSuccess","swipingBackTransitionEndHandler","propertyName","target","handleTouchMoveXForNativeIOSSwipeBackOrSwipeNext","event","swipeBackTriggered","viewportStartEdgeTouched","viewportEndEdgeTouched","startX","shiftX","innerWidth","handleTouchMoveXForIOSSwipeBackSimulation","swipedToOpposite","length","originalEvent","payload","getScroll","y","slice","handleTouchEndForIOSSwipeBackSimulation","speed","duration","calcPanelSwipeStyles","isPrev","isNext","prevPanelTranslate","nextPanelTranslate","transform","WebkitTransform","calcPanelSwipeBackOverlayStyles","calculatedOpacity","opacityOnSwipeEnd","display","opacity","firstLayerId","map","find","supported","set","restoreScrollPositionWhenSwipeBackIsCancelled","swipeBackCancelledInTheMiddleOfAction","swipeBackCancelledByMovingPanelBackToInitialPoint","Provider","value","Component","onMoveX","onEnd","div","isTransitionTarget","compensateScroll","onAnimationEnd","ref","el","style","key","marginTop","entering"],"mappings":"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"}