{"version":3,"sources":["../../../src/components/View/ViewInfinite.tsx"],"sourcesContent":["import * as React from 'react';\nimport { classNames } from '@vkontakte/vkjs';\nimport { withContext } from '../../hoc/withContext';\nimport { withPlatform } from '../../hoc/withPlatform';\nimport { canUseDOM, DOMProps, withDOM } from '../../lib/dom';\nimport { getNavId, NavIdProps } from '../../lib/getNavId';\nimport { animationEvent, transitionEvent } from '../../lib/supportEvents';\nimport { warnOnce } from '../../lib/warnOnce';\nimport { HasPlatform, HTMLAttributesWithRootRef } from '../../types';\nimport { ScrollContext, ScrollContextInterface } from '../AppRoot/ScrollContext';\nimport {\n  ConfigProviderContext,\n  ConfigProviderContextInterface,\n} from '../ConfigProvider/ConfigProviderContext';\nimport { NavViewIdContext } from '../NavIdContext/NavIdContext';\nimport { NavTransitionProvider } from '../NavTransitionContext/NavTransitionContext';\nimport { NavTransitionDirectionProvider } from '../NavTransitionDirectionContext/NavTransitionDirectionContext';\nimport { SplitColContext, SplitColContextProps } from '../SplitCol/SplitColContext';\nimport { Touch, TouchEvent } from '../Touch/Touch';\nimport {\n  getSwipeBackPredicates,\n  hasHorizontalScrollableElementWithScrolledToLeft,\n  swipeBackExcluded,\n} from './utils';\nimport styles from './View.module.css';\n\nconst warn = warnOnce('ViewInfinite');\n\ninterface Scrolls {\n  [index: string]: Array<number | undefined>;\n}\n\ninterface ViewsScrolls {\n  [index: string]: Scrolls;\n}\n\ntype TransitionEventHandler = (e?: TransitionEvent) => void;\n\nexport let scrollsCache: ViewsScrolls = {};\n\nexport type TransitionParams = { from: string | null; to: string | null };\n\nexport interface ViewInfiniteProps\n  extends HTMLAttributesWithRootRef<HTMLElement>,\n    HasPlatform,\n    NavIdProps {\n  activePanel: string;\n  onTransition?(params: TransitionParams & { isBack: boolean }): void;\n  /**\n   * callback свайпа назад\n   */\n  onSwipeBack?(): void;\n  /**\n   * callback начала анимации свайпа назад.\n   */\n  onSwipeBackStart?(activePanel: string | null): void | 'prevent';\n  /**\n   * callback завершения анимации отмененного пользователем свайпа\n   */\n  onSwipeBackCancel?(): void;\n  history?: string[];\n  isBackCheck?(params: TransitionParams): boolean;\n  /**\n   * @ignore\n   */\n  splitCol?: SplitColContextProps;\n  /**\n   * @ignore\n   */\n  configProvider?: ConfigProviderContextInterface;\n  /**\n   * @ignore\n   */\n  scroll?: ScrollContextInterface;\n}\n\nexport interface ViewInfiniteState {\n  animated: boolean;\n\n  visiblePanels: Array<string | null>;\n  activePanel: string | null;\n  isBack?: boolean;\n  prevPanel: string | null;\n  nextPanel: string | null;\n\n  swipingBack?: boolean;\n  swipeBackStartX: number;\n  swipeBackShift: number;\n  swipeBackNextPanel: string | null;\n  swipeBackPrevPanel: string | null;\n  swipeBackResult: 'success' | 'fail' | null;\n\n  browserSwipe: boolean;\n}\n\nclass ViewInfiniteComponent extends React.Component<\n  ViewInfiniteProps & DOMProps,\n  ViewInfiniteState\n> {\n  constructor(props: ViewInfiniteProps) {\n    super(props);\n\n    this.state = {\n      animated: false,\n\n      visiblePanels: [props.activePanel],\n      activePanel: props.activePanel,\n      isBack: undefined,\n      prevPanel: null,\n      nextPanel: null,\n\n      swipingBack: undefined,\n      swipeBackStartX: 0,\n      swipeBackShift: 0,\n      swipeBackNextPanel: null,\n      swipeBackPrevPanel: null,\n      swipeBackResult: null,\n\n      browserSwipe: false,\n    };\n  }\n\n  static defaultProps: Partial<ViewInfiniteProps> = {\n    history: [],\n  };\n\n  private swipeBackPrevented = false;\n  private scrolls = scrollsCache[getNavId(this.props, warn) as string] || {};\n  private transitionFinishTimeout: ReturnType<typeof setTimeout> | undefined = undefined;\n  private animationFinishTimeout: ReturnType<typeof setTimeout> | undefined = undefined;\n\n  get document() {\n    return this.props.document;\n  }\n\n  get window() {\n    return this.props.window;\n  }\n\n  get panels() {\n    return React.Children.toArray(this.props.children) as React.ReactElement[];\n  }\n\n  panelNodes: { [id: string]: HTMLDivElement | null } = {};\n\n  componentWillUnmount() {\n    const id = getNavId(this.props);\n    if (id) {\n      scrollsCache[id] = this.scrolls;\n    }\n    if (this.animationFinishTimeout) {\n      clearTimeout(this.animationFinishTimeout);\n    }\n  }\n\n  componentDidUpdate(prevProps: ViewInfiniteProps, prevState: ViewInfiniteState) {\n    // Нужен переход\n    if (\n      prevProps.activePanel !== this.props.activePanel &&\n      !prevState.swipingBack &&\n      !prevState.browserSwipe\n    ) {\n      let isBack = false;\n\n      if (this.props.isBackCheck) {\n        isBack = this.props.isBackCheck({\n          from: prevProps.activePanel,\n          to: this.props.activePanel,\n        });\n      } else {\n        const firstLayerId = this.panels\n          .map((panel) => getNavId(panel.props, warn))\n          .find((id) => id === prevProps.activePanel || id === this.props.activePanel);\n        isBack = firstLayerId === this.props.activePanel;\n      }\n\n      this.blurActiveElement();\n\n      const prevScrolls = this.scrolls[prevProps.activePanel] || [];\n      const scrolls = {\n        ...this.scrolls,\n        [prevProps.activePanel]: [...prevScrolls, this.props.scroll?.getScroll().y],\n      };\n      this.scrolls = scrolls;\n\n      if (this.shouldDisableTransitionMotion()) {\n        this.flushTransition(prevProps.activePanel, isBack);\n      } else {\n        this.setState({\n          visiblePanels: [prevProps.activePanel, this.props.activePanel],\n          prevPanel: prevProps.activePanel,\n          nextPanel: this.props.activePanel,\n          activePanel: null,\n          animated: true,\n          isBack,\n        });\n\n        // Фолбек анимации перехода\n        if (!animationEvent.supported) {\n          if (this.animationFinishTimeout) {\n            clearTimeout(this.animationFinishTimeout);\n          }\n          this.animationFinishTimeout = setTimeout(\n            this.transitionEndHandler,\n            this.props.platform === 'android' || this.props.platform === 'vkcom' ? 300 : 600,\n          );\n        }\n      }\n    }\n\n    // Закончилась анимация свайпа назад\n    if (prevProps.activePanel !== this.props.activePanel && prevState.swipingBack) {\n      const nextPanel = this.state.swipeBackNextPanel;\n      const prevPanel = this.state.swipeBackPrevPanel;\n      let scrollPosition: undefined | number = undefined;\n\n      this.scrolls = {\n        ...this.scrolls,\n      };\n\n      if (prevPanel !== null) {\n        const prevPanelScrolls = [...(this.scrolls[prevPanel] || [])].slice(0, -1);\n        this.scrolls[prevPanel] = prevPanelScrolls;\n      }\n      if (nextPanel !== null) {\n        const newPanelScrolls = [...(this.scrolls[nextPanel] || [])];\n        scrollPosition = newPanelScrolls.pop();\n        this.scrolls[nextPanel] = newPanelScrolls;\n      }\n\n      this.setState(\n        {\n          swipeBackPrevPanel: null,\n          swipeBackNextPanel: null,\n          swipingBack: false,\n          swipeBackResult: null,\n          swipeBackStartX: 0,\n          swipeBackShift: 0,\n          activePanel: nextPanel,\n          visiblePanels: [nextPanel],\n        },\n        () => {\n          this.props.scroll?.scrollTo(0, scrollPosition);\n          prevProps.onTransition &&\n            prevProps.onTransition({\n              isBack: true,\n              from: prevPanel,\n              to: nextPanel,\n            });\n        },\n      );\n    }\n\n    // Началась анимация завершения свайпа назад.\n    if (!prevState.swipeBackResult && this.state.swipeBackResult) {\n      this.waitTransitionFinish(\n        this.pickPanel(this.state.swipeBackNextPanel),\n        this.swipingBackTransitionEndHandler,\n      );\n    }\n\n    // Если свайп назад отменился (когда пользователь недостаточно сильно свайпнул)\n    if (\n      prevState.swipeBackResult === 'fail' &&\n      !this.state.swipeBackResult &&\n      this.state.activePanel !== null\n    ) {\n      const newPanelScrolls = [...(this.scrolls[this.state.activePanel] || [])];\n      const scrollPosition = newPanelScrolls.pop();\n      this.scrolls = {\n        ...this.scrolls,\n        [this.state.activePanel]: newPanelScrolls,\n      };\n\n      this.props.scroll?.scrollTo(0, scrollPosition);\n    }\n\n    // Закончился Safari свайп\n    if (prevProps.activePanel !== this.props.activePanel && this.state.browserSwipe) {\n      this.setState({\n        browserSwipe: false,\n        nextPanel: null,\n        prevPanel: null,\n        animated: false,\n        visiblePanels: [this.props.activePanel],\n        activePanel: this.props.activePanel,\n      });\n    }\n  }\n\n  shouldDisableTransitionMotion(): boolean {\n    return (\n      this.props.configProvider?.transitionMotionEnabled === false ||\n      !this.props.splitCol?.animate ||\n      this.props.platform === 'vkcom'\n    );\n  }\n\n  waitTransitionFinish(\n    elem: HTMLElement | null | undefined,\n    eventHandler: TransitionEventHandler,\n  ): void {\n    if (transitionEvent.supported && transitionEvent.name && elem) {\n      elem.removeEventListener(\n        transitionEvent.name as keyof HTMLElementEventMap,\n        eventHandler as EventListener,\n      );\n      elem.addEventListener(\n        transitionEvent.name as keyof HTMLElementEventMap,\n        eventHandler as EventListener,\n      );\n    } else {\n      if (this.transitionFinishTimeout) {\n        clearTimeout(this.transitionFinishTimeout);\n      }\n\n      this.transitionFinishTimeout = setTimeout(\n        eventHandler,\n        this.props.platform === 'android' || this.props.platform === 'vkcom' ? 300 : 600,\n      );\n    }\n  }\n\n  blurActiveElement(): void {\n    if (typeof this.window !== 'undefined' && this.document?.activeElement) {\n      (this.document.activeElement as HTMLElement).blur();\n    }\n  }\n\n  pickPanel(id: string | null) {\n    if (id === null) {\n      return undefined;\n    }\n    return this.panelNodes[id];\n  }\n\n  flushTransition(prevPanel: string, isBack: boolean) {\n    const activePanel = this.props.activePanel;\n\n    const prevPanelScrolls = [...(this.scrolls[prevPanel] || [])].slice(0, -1);\n    const newPanelScrolls = [...(this.scrolls[activePanel] || [])];\n    const scrollPosition = isBack ? newPanelScrolls.pop() : 0;\n    if (isBack) {\n      this.scrolls = {\n        ...this.scrolls,\n        [prevPanel]: prevPanelScrolls,\n        [activePanel]: newPanelScrolls,\n      };\n    }\n\n    this.setState(\n      {\n        prevPanel: null,\n        nextPanel: null,\n        visiblePanels: [activePanel],\n        activePanel: activePanel,\n        animated: false,\n        isBack,\n      },\n      () => {\n        this.props.scroll?.scrollTo(0, isBack ? scrollPosition : 0);\n        this.props.onTransition &&\n          this.props.onTransition({ isBack, from: prevPanel, to: activePanel });\n      },\n    );\n  }\n\n  transitionEndHandler = (e?: React.AnimationEvent): void => {\n    if (\n      (!e ||\n        [\n          styles['animation-ios-next-forward'],\n          styles['animation-ios-prev-back'],\n          styles['animation-view-next-forward'],\n          styles['animation-view-prev-back'],\n        ].includes(e.animationName)) &&\n      this.state.prevPanel !== null\n    ) {\n      this.flushTransition(this.state.prevPanel, Boolean(this.state.isBack));\n    }\n  };\n\n  swipingBackTransitionEndHandler = (e?: TransitionEvent): void => {\n    // indexOf because of vendor prefixes in old browsers\n    if (\n      !e ||\n      (e.propertyName.includes('transform') &&\n        e.target === this.pickPanel(this.state.swipeBackNextPanel))\n    ) {\n      switch (this.state.swipeBackResult) {\n        case 'fail':\n          this.onSwipeBackCancel();\n          break;\n        case 'success':\n          this.onSwipeBackSuccess();\n      }\n    }\n  };\n\n  onSwipeBackSuccess(): void {\n    this.props.onSwipeBack && this.props.onSwipeBack();\n  }\n\n  onSwipeBackCancel(): void {\n    this.props.onSwipeBackCancel && this.props.onSwipeBackCancel();\n    this.setState({\n      swipeBackPrevPanel: null,\n      swipeBackNextPanel: null,\n      swipingBack: false,\n      swipeBackResult: null,\n      swipeBackStartX: 0,\n      swipeBackShift: 0,\n    });\n  }\n\n  handleTouchMoveXForNativeIOSSwipeBackOrSwipeNext = (event: TouchEvent) => {\n    if (this.state.browserSwipe) {\n      return;\n    }\n    const { swipeBackTriggered, viewportStartEdgeTouched, viewportEndEdgeTouched } =\n      getSwipeBackPredicates(event.startX, event.shiftX, this.window!.innerWidth);\n\n    if ((viewportStartEdgeTouched || viewportEndEdgeTouched) && swipeBackTriggered) {\n      this.setState({ browserSwipe: true });\n    }\n  };\n\n  handleTouchMoveXForIOSSwipeBackSimulation = (event: TouchEvent) => {\n    if (this.swipeBackPrevented || swipeBackExcluded(event)) {\n      return;\n    }\n\n    const { swipedToOpposite, swipeBackTriggered, viewportStartEdgeTouched } =\n      getSwipeBackPredicates(event.startX, event.shiftX, this.window!.innerWidth);\n\n    if (this.state.animated && swipeBackTriggered) {\n      return;\n    }\n\n    if (!this.state.swipingBack && this.props.history && this.props.history.length > 1) {\n      if (swipedToOpposite) {\n        this.swipeBackPrevented = true;\n        return;\n      }\n\n      if (!swipeBackTriggered) {\n        return;\n      }\n\n      if (\n        !viewportStartEdgeTouched &&\n        hasHorizontalScrollableElementWithScrolledToLeft(event.originalEvent.target as HTMLElement)\n      ) {\n        this.swipeBackPrevented = true;\n        return;\n      }\n      // Начался свайп назад\n      if (this.props.onSwipeBackStart) {\n        const payload = this.props.onSwipeBackStart(this.state.activePanel);\n        if (payload === 'prevent') {\n          this.swipeBackPrevented = true;\n          return;\n        }\n      }\n\n      if (this.state.activePanel !== null) {\n        // Note: вызываем закрытие клавиатуры. В iOS это нативное поведение при свайпе.\n        this.blurActiveElement();\n        const prevScrolls = this.scrolls[this.state.activePanel] || [];\n        this.scrolls = {\n          ...this.scrolls,\n          [this.state.activePanel]: [...prevScrolls, this.props.scroll?.getScroll().y],\n        };\n      }\n\n      this.setState({\n        swipingBack: true,\n        swipeBackStartX: event.startX,\n        swipeBackPrevPanel: this.state.activePanel,\n        swipeBackNextPanel: this.props.history.slice(-2)[0],\n      });\n    }\n\n    if (this.state.swipingBack) {\n      if (event.shiftX < 0) {\n        this.setState({ swipeBackShift: 0 });\n      } else if (event.shiftX > this.window!.innerWidth - this.state.swipeBackStartX) {\n        this.setState({ swipeBackShift: this.window!.innerWidth });\n      } else {\n        this.setState({ swipeBackShift: event.shiftX });\n      }\n    }\n  };\n\n  handleTouchEndForIOSSwipeBackSimulation = (event: TouchEvent) => {\n    this.swipeBackPrevented = false;\n\n    if (this.state.swipingBack && this.window) {\n      const speed = (this.state.swipeBackShift / event.duration) * 1000;\n      if (this.state.swipeBackShift === 0) {\n        this.onSwipeBackCancel();\n      } else if (this.state.swipeBackShift >= this.window.innerWidth) {\n        this.onSwipeBackSuccess();\n      } else if (speed > 250 || this.state.swipeBackShift >= this.window.innerWidth / 2) {\n        this.setState({ swipeBackResult: 'success' });\n      } else {\n        this.setState({ swipeBackResult: 'fail' });\n      }\n    }\n  };\n\n  calcPanelSwipeStyles(panelId: string | undefined): React.CSSProperties {\n    if (!canUseDOM || !this.window) {\n      return {};\n    }\n\n    const isPrev = panelId === this.state.swipeBackPrevPanel;\n    const isNext = panelId === this.state.swipeBackNextPanel;\n\n    if ((!isPrev && !isNext) || this.state.swipeBackResult) {\n      return {};\n    }\n\n    let prevPanelTranslate = `${this.state.swipeBackShift}px`;\n    let nextPanelTranslate = `${\n      -50 + (this.state.swipeBackShift * 100) / this.window.innerWidth / 2\n    }%`;\n    let prevPanelShadow =\n      (0.3 * (this.window.innerWidth - this.state.swipeBackShift)) / this.window.innerWidth;\n\n    if (this.state.swipeBackResult) {\n      return isPrev ? { boxShadow: `-2px 0 12px rgba(0, 0, 0, ${prevPanelShadow})` } : {};\n    }\n\n    if (isNext) {\n      return {\n        transform: `translate3d(${nextPanelTranslate}, 0, 0)`,\n        WebkitTransform: `translate3d(${nextPanelTranslate}, 0, 0)`,\n      };\n    }\n    if (isPrev) {\n      return {\n        transform: `translate3d(${prevPanelTranslate}, 0, 0)`,\n        WebkitTransform: `translate3d(${prevPanelTranslate}, 0, 0)`,\n        boxShadow: `-2px 0 12px rgba(0, 0, 0, ${prevPanelShadow})`,\n      };\n    }\n\n    return {};\n  }\n\n  render() {\n    const {\n      platform,\n      activePanel: _1,\n      splitCol,\n      configProvider,\n      history,\n      id,\n      nav,\n      onTransition,\n      onSwipeBack,\n      onSwipeBackStart,\n      onSwipeBackCancel,\n      window,\n      document,\n      scroll,\n      isBackCheck,\n      className,\n      ...restProps\n    } = this.props;\n    const {\n      prevPanel,\n      nextPanel,\n      activePanel,\n      isBack,\n      animated,\n      swipeBackPrevPanel,\n      swipeBackNextPanel,\n      swipeBackResult,\n      swipingBack,\n    } = this.state;\n\n    const panels = this.panels\n      .filter((panel) => {\n        const panelId = getNavId(panel.props, warn);\n\n        return (\n          (panelId !== undefined && this.state.visiblePanels.includes(panelId)) ||\n          panelId === swipeBackPrevPanel ||\n          panelId === swipeBackNextPanel\n        );\n      })\n      .sort((panel) => {\n        const panelId = getNavId(panel.props, warn);\n        const isPrevPanel = panelId === prevPanel || panelId === swipeBackPrevPanel;\n        const isNextPanel = panelId === nextPanel || panelId === swipeBackNextPanel;\n\n        if (isNextPanel) {\n          return swipingBack || this.state.isBack ? -1 : 1;\n        }\n\n        if (isPrevPanel) {\n          return swipingBack || this.state.isBack ? 1 : -1;\n        }\n\n        return 0;\n      });\n\n    const disableAnimation = this.shouldDisableTransitionMotion();\n    const iOSSwipeBackSimulationEnabled =\n      !disableAnimation && platform === 'ios' && configProvider?.isWebView && Boolean(onSwipeBack);\n\n    return (\n      <NavViewIdContext.Provider value={id || nav}>\n        <Touch\n          Component=\"section\"\n          {...restProps}\n          className={classNames(\n            styles['View'],\n            platform === 'ios' && classNames(styles['View--ios'], 'vkuiInternalView--ios'),\n            !disableAnimation && this.state.animated && styles['View--animated'],\n            !disableAnimation && this.state.swipingBack && styles['View--swiping-back'],\n            disableAnimation && styles['View--no-motion'],\n            className,\n          )}\n          onMoveX={\n            iOSSwipeBackSimulationEnabled\n              ? this.handleTouchMoveXForIOSSwipeBackSimulation\n              : platform === 'ios'\n              ? this.handleTouchMoveXForNativeIOSSwipeBackOrSwipeNext\n              : undefined\n          }\n          onEnd={\n            iOSSwipeBackSimulationEnabled ? this.handleTouchEndForIOSSwipeBackSimulation : undefined\n          }\n        >\n          <div className={styles['View__panels']}>\n            {panels.map((panel: React.ReactElement) => {\n              const panelId = getNavId(panel.props, warn);\n              const isPrev = panelId === prevPanel || panelId === swipeBackPrevPanel;\n              const compensateScroll =\n                isPrev || panelId === swipeBackNextPanel || (panelId === nextPanel && isBack);\n              const isTransitionTarget = animated && panelId === (isBack ? prevPanel : nextPanel);\n              const scrollList = (panelId && this.scrolls[panelId]) || [];\n              const scroll = scrollList[scrollList.length - 1] || 0;\n\n              return (\n                <div\n                  className={classNames(\n                    styles['View__panel'],\n                    panelId === activePanel && styles['View__panel--active'],\n                    panelId === prevPanel && styles['View__panel--prev'],\n                    panelId === nextPanel && styles['View__panel--next'],\n                    panelId === swipeBackPrevPanel && styles['View__panel--swipe-back-prev'],\n                    panelId === swipeBackNextPanel && styles['View__panel--swipe-back-next'],\n                    swipeBackResult === 'success' && styles['View__panel--swipe-back-success'],\n                    swipeBackResult === 'fail' && styles['View__panel--swipe-back-failed'],\n                  )}\n                  onAnimationEnd={isTransitionTarget ? this.transitionEndHandler : undefined}\n                  ref={(el) => panelId !== undefined && (this.panelNodes[panelId] = el)}\n                  style={this.calcPanelSwipeStyles(panelId)}\n                  key={panelId}\n                >\n                  <div\n                    className={styles['View__panel-in']}\n                    style={{ marginTop: compensateScroll ? -scroll : undefined }}\n                  >\n                    <NavTransitionDirectionProvider isBack={swipingBack || isBack}>\n                      <NavTransitionProvider\n                        entering={panelId === nextPanel || panelId === swipeBackNextPanel}\n                      >\n                        {panel}\n                      </NavTransitionProvider>\n                    </NavTransitionDirectionProvider>\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        </Touch>\n      </NavViewIdContext.Provider>\n    );\n  }\n}\n\nexport const ViewInfinite = withContext(\n  withContext(\n    withContext(\n      withPlatform(withDOM<ViewInfiniteProps>(ViewInfiniteComponent)),\n      SplitColContext,\n      'splitCol',\n    ),\n    ConfigProviderContext,\n    'configProvider',\n  ),\n  ScrollContext,\n  'scroll',\n);\n"],"names":["React","classNames","withContext","withPlatform","canUseDOM","withDOM","getNavId","animationEvent","transitionEvent","warnOnce","ScrollContext","ConfigProviderContext","NavViewIdContext","NavTransitionProvider","NavTransitionDirectionProvider","SplitColContext","Touch","getSwipeBackPredicates","hasHorizontalScrollableElementWithScrolledToLeft","swipeBackExcluded","warn","scrollsCache","ViewInfiniteComponent","Component","document","props","window","panels","Children","toArray","children","componentWillUnmount","id","scrolls","animationFinishTimeout","clearTimeout","componentDidUpdate","prevProps","prevState","activePanel","swipingBack","browserSwipe","isBack","isBackCheck","from","to","firstLayerId","map","panel","find","blurActiveElement","prevScrolls","scroll","getScroll","y","shouldDisableTransitionMotion","flushTransition","setState","visiblePanels","prevPanel","nextPanel","animated","supported","setTimeout","transitionEndHandler","platform","state","swipeBackNextPanel","swipeBackPrevPanel","scrollPosition","undefined","prevPanelScrolls","slice","newPanelScrolls","pop","swipeBackResult","swipeBackStartX","swipeBackShift","scrollTo","onTransition","waitTransitionFinish","pickPanel","swipingBackTransitionEndHandler","configProvider","transitionMotionEnabled","splitCol","animate","elem","eventHandler","name","removeEventListener","addEventListener","transitionFinishTimeout","activeElement","blur","panelNodes","onSwipeBackSuccess","onSwipeBack","onSwipeBackCancel","calcPanelSwipeStyles","panelId","isPrev","isNext","prevPanelTranslate","nextPanelTranslate","innerWidth","prevPanelShadow","boxShadow","transform","WebkitTransform","render","_1","history","nav","onSwipeBackStart","className","restProps","filter","includes","sort","isPrevPanel","isNextPanel","disableAnimation","iOSSwipeBackSimulationEnabled","isWebView","Boolean","Provider","value","onMoveX","handleTouchMoveXForIOSSwipeBackSimulation","handleTouchMoveXForNativeIOSSwipeBackOrSwipeNext","onEnd","handleTouchEndForIOSSwipeBackSimulation","div","compensateScroll","isTransitionTarget","scrollList","length","onAnimationEnd","ref","el","style","key","marginTop","entering","constructor","swipeBackPrevented","e","animationName","propertyName","target","event","swipeBackTriggered","viewportStartEdgeTouched","viewportEndEdgeTouched","startX","shiftX","swipedToOpposite","originalEvent","payload","speed","duration","defaultProps","ViewInfinite"],"mappings":"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"}