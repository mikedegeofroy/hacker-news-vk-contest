{"version":3,"sources":["../../../../src/lib/tokens/useTokenClassName.ts"],"sourcesContent":["import * as React from 'react';\nimport { ConfigProviderContext } from '../../components/ConfigProvider/ConfigProviderContext';\nimport { type AppearanceType, DEFAULT_APPEARANCE } from '../appearance';\nimport { Platform, type PlatformType } from '../platform';\nimport { DEFAULT_TOKENS_CLASS_NAMES } from './constants';\nimport type {\n  TokensClassNames,\n  TokensClassNamesByAppearances,\n  TokensClassNamesByPlatforms,\n} from './types';\n\nconst isTokensClassNamesForPlatforms = (\n  tokensClassNames: TokensClassNames,\n): tokensClassNames is TokensClassNamesByPlatforms =>\n  Platform.ANDROID in tokensClassNames ||\n  Platform.IOS in tokensClassNames ||\n  Platform.VKCOM in tokensClassNames;\n\nconst getTokenClassNameByAppearance = (\n  appearance: AppearanceType,\n  tokensClassNames?: TokensClassNamesByAppearances,\n) => (tokensClassNames ? tokensClassNames[appearance] : undefined);\n\nconst getAppearanceTokenClassNameByPlatform = (\n  platform: PlatformType,\n  tokensClassNames?: TokensClassNamesByPlatforms,\n) => (tokensClassNames ? tokensClassNames[platform] : undefined);\n\n/**\n * @private\n */\nexport const useTokensClassName = () => {\n  const {\n    platform,\n    appearance = DEFAULT_APPEARANCE,\n    tokensClassNames,\n  } = React.useContext(ConfigProviderContext);\n\n  const appearanceSchemeClassName = isTokensClassNamesForPlatforms(tokensClassNames)\n    ? getAppearanceTokenClassNameByPlatform(platform, tokensClassNames)\n    : tokensClassNames;\n\n  const tokensClassName = getTokenClassNameByAppearance(appearance, appearanceSchemeClassName);\n\n  return tokensClassName ? tokensClassName : DEFAULT_TOKENS_CLASS_NAMES[platform][appearance];\n};\n"],"names":["useTokensClassName","isTokensClassNamesForPlatforms","tokensClassNames","Platform","ANDROID","IOS","VKCOM","getTokenClassNameByAppearance","appearance","undefined","getAppearanceTokenClassNameByPlatform","platform","DEFAULT_APPEARANCE","React","useContext","ConfigProviderContext","appearanceSchemeClassName","tokensClassName","DEFAULT_TOKENS_CLASS_NAMES"],"mappings":";;;;+BA+BaA;;;eAAAA;;;;iEA/BU;uCACe;4BACkB;0BACZ;2BACD;AAO3C,MAAMC,iCAAiC,CACrCC,mBAEAC,kBAAQ,CAACC,OAAO,IAAIF,oBACpBC,kBAAQ,CAACE,GAAG,IAAIH,oBAChBC,kBAAQ,CAACG,KAAK,IAAIJ;AAEpB,MAAMK,gCAAgC,CACpCC,YACAN,mBACIA,mBAAmBA,gBAAgB,CAACM,WAAW,GAAGC;AAExD,MAAMC,wCAAwC,CAC5CC,UACAT,mBACIA,mBAAmBA,gBAAgB,CAACS,SAAS,GAAGF;AAK/C,MAAMT,qBAAqB;IAChC,MAAM,EACJW,QAAQ,EACRH,aAAaI,8BAAkB,EAC/BV,gBAAgB,EACjB,GAAGW,OAAMC,UAAU,CAACC,4CAAqB;IAE1C,MAAMC,4BAA4Bf,+BAA+BC,oBAC7DQ,sCAAsCC,UAAUT,oBAChDA;IAEJ,MAAMe,kBAAkBV,8BAA8BC,YAAYQ;IAElE,OAAOC,kBAAkBA,kBAAkBC,qCAA0B,CAACP,SAAS,CAACH,WAAW;AAC7F"}