{"version":3,"sources":["../../../../src/lib/floating/adapters.ts"],"sourcesContent":["import {\n  autoUpdate as autoUpdateLib,\n  type AutoUpdateOptions,\n  type FloatingElement,\n  type ReferenceType,\n} from '@vkontakte/vkui-floating-ui/react-dom';\nimport { isHTMLElement } from '../dom';\nimport { CustomResizeObserver } from './customResizeObserver';\n\nexport {\n  useFloating,\n  offset as offsetMiddleware,\n  flip as flipMiddleware,\n  shift as shiftMiddleware,\n  autoPlacement as autoPlacementMiddleware,\n  arrow as arrowMiddleware,\n  size as sizeMiddleware,\n  hide as hideMiddleware,\n  getOverflowAncestors,\n} from '@vkontakte/vkui-floating-ui/react-dom';\n\nconst defaultOptions = {\n  ancestorScroll: true,\n  ancestorResize: true,\n  // По умолчанию отключаем, т.к. навешивать `CustomResizeObserver` может быть дорого.\n  // В `autoUpdateLib` по умолчанию опция включена. Там используется ResizeObserver, но и он не менее дорогостоящий.\n  // https://github.com/floating-ui/floating-ui/blob/0a34fe9cc2c7483976785a71bd0777cd7c3f2a6a/packages/dom/src/autoUpdate.ts#L6-L33\n  elementResize: false,\n  animationFrame: false,\n};\n\nexport function autoUpdateFloatingElement(\n  reference: ReferenceType,\n  floating: FloatingElement,\n  update: () => void,\n  options: Partial<AutoUpdateOptions> = defaultOptions,\n): ReturnType<typeof autoUpdateLib> {\n  const { elementResize = false, ...restOptions } = options;\n\n  // eslint-disable-next-line no-restricted-globals, compat/compat\n  const canUseResizeObserver = window.ResizeObserver !== undefined;\n  const autoUpdateLibDisposer = autoUpdateLib(reference, floating, update, {\n    ...restOptions,\n    elementResize: elementResize && canUseResizeObserver,\n  });\n\n  // В случае если `ResizeObserver` будет полифилиться или он будет покрываться нашим `browserlist`, то надо удалить\n  // код с `CustomResizeObserver`.\n  let observer: CustomResizeObserver | null = null;\n  if (elementResize && !canUseResizeObserver) {\n    observer = new CustomResizeObserver(update);\n\n    if (isHTMLElement(reference)) {\n      observer.observe(reference);\n    }\n\n    observer.observe(floating);\n\n    observer.appendToTheDOM();\n  }\n\n  return () => {\n    if (observer) {\n      observer.disconnect();\n      observer = null;\n    }\n    autoUpdateLibDisposer();\n  };\n}\n"],"names":["arrowMiddleware","arrow","autoPlacementMiddleware","autoPlacement","autoUpdateFloatingElement","flipMiddleware","flip","getOverflowAncestors","hideMiddleware","hide","offsetMiddleware","offset","shiftMiddleware","shift","sizeMiddleware","size","useFloating","defaultOptions","ancestorScroll","ancestorResize","elementResize","animationFrame","reference","floating","update","options","restOptions","canUseResizeObserver","window","ResizeObserver","undefined","autoUpdateLibDisposer","autoUpdateLib","observer","CustomResizeObserver","isHTMLElement","observe","appendToTheDOM","disconnect"],"mappings":";;;;;;;;;;;IAeWA,eAAe;eAAxBC,eAAK;;IADYC,uBAAuB;eAAxCC,uBAAa;;IAiBCC,yBAAyB;eAAzBA;;IAnBNC,cAAc;eAAtBC,cAAI;;IAMJC,oBAAoB;eAApBA,8BAAoB;;IADZC,cAAc;eAAtBC,cAAI;;IANMC,gBAAgB;eAA1BC,gBAAM;;IAEGC,eAAe;eAAxBC,eAAK;;IAGGC,cAAc;eAAtBC,cAAI;;IANJC,WAAW;eAAXA,qBAAW;;;;;;0BALN;qBACuB;sCACO;AAcrC,MAAMC,iBAAiB;IACrBC,gBAAgB;IAChBC,gBAAgB;IAChB,oFAAoF;IACpF,kHAAkH;IAClH,iIAAiI;IACjIC,eAAe;IACfC,gBAAgB;AAClB;AAEO,SAASjB,0BACdkB,SAAwB,EACxBC,QAAyB,EACzBC,MAAkB,EAClBC,UAAsCR,cAAc;IAEpD,MAAM,EAAEG,gBAAgB,KAAK,EAAkB,GAAGK,SAAhBC,2CAAgBD;QAA1CL;;IAER,gEAAgE;IAChE,MAAMO,uBAAuBC,OAAOC,cAAc,KAAKC;IACvD,MAAMC,wBAAwBC,IAAAA,oBAAa,EAACV,WAAWC,UAAUC,QAAQ,4CACpEE;QACHN,eAAeA,iBAAiBO;;IAGlC,kHAAkH;IAClH,gCAAgC;IAChC,IAAIM,WAAwC;IAC5C,IAAIb,iBAAiB,CAACO,sBAAsB;QAC1CM,WAAW,IAAIC,0CAAoB,CAACV;QAEpC,IAAIW,IAAAA,kBAAa,EAACb,YAAY;YAC5BW,SAASG,OAAO,CAACd;QACnB;QAEAW,SAASG,OAAO,CAACb;QAEjBU,SAASI,cAAc;IACzB;IAEA,OAAO;QACL,IAAIJ,UAAU;YACZA,SAASK,UAAU;YACnBL,WAAW;QACb;QACAF;IACF;AACF"}