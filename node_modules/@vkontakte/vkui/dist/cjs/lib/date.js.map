{"version":3,"sources":["../../../src/lib/date.ts"],"sourcesContent":["import dayjs from 'dayjs';\n\n// Using date-fns-like type for migration\ntype DirtyDate = Date | number;\n\nexport function startOfDay(date: DirtyDate) {\n  return dayjs(date).startOf('day').toDate();\n}\n\nexport function endOfDay(date: DirtyDate) {\n  return dayjs(date).endOf('day').toDate();\n}\n\nexport function startOfWeek(date: DirtyDate, weekStart = 0) {\n  weekStart = weekStart % 7;\n\n  const day = dayjs(date);\n  const weekDay = day.day();\n  const diff = (weekDay < weekStart ? 7 : 0) + weekDay - weekStart;\n\n  return day.date(day.date() - diff).toDate();\n}\n\nexport function endOfWeek(date: DirtyDate, weekStart = 0) {\n  const day = dayjs(startOfWeek(date, weekStart));\n\n  return day.date(day.date() + 6).toDate();\n}\n\nexport function startOfMonth(date: DirtyDate) {\n  return dayjs(date).startOf('month').toDate();\n}\n\nexport function endOfMonth(date: DirtyDate) {\n  return dayjs(date).endOf('month').toDate();\n}\n\nexport function isFirstDayOfMonth(date: DirtyDate) {\n  return dayjs(date).date() === 1;\n}\n\nexport function isLastDayOfMonth(date: DirtyDate) {\n  // isSameDay -- shorter, but not exact with date-fns behavior\n  // return isSameDay(date, dayjs(date).endOf(\"month\"));\n  return dayjs(date).endOf('day').isSame(dayjs(date).endOf('month'));\n}\n\nexport function format(date: DirtyDate, format: string) {\n  return dayjs(date).format(format);\n}\n\nexport function isBefore(date1: DirtyDate, date2: DirtyDate) {\n  // Exactly as date-fns does\n  // dayjs().isBefore() for slightly different approach\n  return dayjs(date1) < dayjs(date2);\n}\n\nexport function isAfter(date1: DirtyDate, date2: DirtyDate) {\n  return dayjs(date1) > dayjs(date2);\n}\n\nexport function isSameDay(date1: DirtyDate, date2: DirtyDate) {\n  return dayjs(date1).isSame(date2, 'day');\n}\n\nexport function isSameMonth(date1: DirtyDate, date2: DirtyDate) {\n  return dayjs(date1).isSame(date2, 'month');\n}\n\nexport function isWithinInterval(date: DirtyDate, start: DirtyDate, end: DirtyDate) {\n  const day = dayjs(date);\n  return day >= dayjs(start) && day <= dayjs(end);\n}\n\nexport function setMinutes(date: DirtyDate, minute: number) {\n  return dayjs(date).set('minute', minute).toDate();\n}\n\nexport function setHours(date: DirtyDate, hour: number) {\n  return dayjs(date).set('hour', hour).toDate();\n}\n\nexport function setMonth(date: DirtyDate, month: number) {\n  return dayjs(date).set('month', month).toDate();\n}\n\nexport function setYear(date: DirtyDate, year: number) {\n  return dayjs(date).set('year', year).toDate();\n}\n\nexport function addDays(date: DirtyDate, day: number) {\n  return dayjs(date).add(day, 'day').toDate();\n}\n\nexport function subDays(date: DirtyDate, day: number) {\n  return dayjs(date).subtract(day, 'day').toDate();\n}\n\nexport function addWeeks(date: DirtyDate, week: number) {\n  return dayjs(date).add(week, 'week').toDate();\n}\n\nexport function subWeeks(date: DirtyDate, week: number) {\n  return dayjs(date).subtract(week, 'week').toDate();\n}\n\nexport function addMonths(date: DirtyDate, month: number) {\n  return dayjs(date).add(month, 'month').toDate();\n}\n\nexport function subMonths(date: DirtyDate, month: number) {\n  return dayjs(date).subtract(month, 'month').toDate();\n}\n\n// Rip off date-fns\nexport function eachDayOfInterval(start: DirtyDate, end: DirtyDate) {\n  const dates: Date[] = [];\n  const startDate = dayjs(start).toDate();\n  const endDate = dayjs(end).toDate();\n\n  const endTime = endDate.getTime();\n  const currentDate = startDate;\n  currentDate.setHours(0, 0, 0, 0);\n\n  while (currentDate.getTime() <= endTime) {\n    dates.push(new Date(currentDate.getTime()));\n    currentDate.setDate(currentDate.getDate() + 1);\n    currentDate.setHours(0, 0, 0, 0);\n  }\n\n  return dates;\n}\n\nexport function parse(input: string, format: string, referenceDate: Date = new Date()) {\n  const match2 = /^\\d\\d/; // 00 - 99\n  const match4 = /^\\d{4}/; // 0000 - 9999\n\n  const entries: Array<[string, RegExp, (val: string) => [string, number, boolean]]> = [\n    ['YYYY', match4, (val) => ['Y', +val, true]],\n    [\n      'MM',\n      match2,\n      (val) => {\n        const numVal = +val;\n        const okay = numVal > 0 && numVal <= 12;\n\n        return ['M', numVal - 1, okay];\n      },\n    ],\n    ['DD', match2, (val) => ['D', +val, true]],\n    [\n      'HH',\n      match2,\n      (val) => {\n        const numVal = parseInt(val, 10);\n        const okay = numVal >= 0 && numVal < 24;\n\n        return ['h', numVal, okay];\n      },\n    ],\n    [\n      'mm',\n      match2,\n      (val) => {\n        const numVal = parseInt(val, 10);\n        const okay = numVal >= 0 && numVal < 60;\n\n        return ['m', numVal, okay];\n      },\n    ],\n  ];\n\n  const superRegExp = new RegExp(entries.map((item) => item[0]).join('|'), 'g');\n\n  const store: {\n    [key: string]: number;\n  } = {\n    Y: referenceDate.getFullYear(),\n    M: referenceDate.getMonth(),\n    D: referenceDate.getDate(),\n    h: referenceDate.getHours(),\n    m: referenceDate.getMinutes(),\n    s: referenceDate.getSeconds(),\n    ms: referenceDate.getMilliseconds(),\n  };\n\n  let prevInputIndex = 0;\n  let lastNonFormatting = '';\n  let lastFormatIndex = 0;\n  let found = false;\n\n  while (true) {\n    const match = superRegExp.exec(format);\n\n    if (!match) {\n      break;\n    }\n\n    const length = match[0].length;\n    const atIndex = superRegExp.lastIndex - length;\n\n    const item = entries.find((item) => item[0] === match[0])!;\n\n    lastNonFormatting = format.slice(lastFormatIndex, atIndex);\n    lastFormatIndex = superRegExp.lastIndex;\n\n    if (\n      input.slice(prevInputIndex, prevInputIndex + lastNonFormatting.length) !== lastNonFormatting\n    ) {\n      return new Date('');\n    }\n\n    const value = input.slice(prevInputIndex + lastNonFormatting.length).match(item[1]);\n\n    if (!value) {\n      return new Date('');\n    }\n\n    prevInputIndex = prevInputIndex + lastNonFormatting.length + value[0].length;\n\n    const [key, newValue, okay] = item[2](value[0]);\n\n    if (!okay) {\n      return new Date('');\n    }\n\n    store[key] = newValue;\n    found = true;\n  }\n\n  if (!found) {\n    return new Date('');\n  }\n\n  const date = new Date(store.Y, store.M, store.D, store.h, store.m, store.s, store.ms);\n\n  // Since days of months are dynamic, they can't be validated in entries,\n  // so we check it here, in the finalized date\n  if (date.getMonth() !== store.M || date.getDate() !== store.D) {\n    return new Date('');\n  }\n\n  return date;\n}\n\nexport function isMatch(input: string, format: string) {\n  return !isNaN(+parse(input, format));\n}\n\nexport function getMillisecondsToTomorrow(date: DirtyDate) {\n  return dayjs(endOfDay(date)).diff(dayjs(date), 'ms');\n}\n"],"names":["addDays","addMonths","addWeeks","eachDayOfInterval","endOfDay","endOfMonth","endOfWeek","format","getMillisecondsToTomorrow","isAfter","isBefore","isFirstDayOfMonth","isLastDayOfMonth","isMatch","isSameDay","isSameMonth","isWithinInterval","parse","setHours","setMinutes","setMonth","setYear","startOfDay","startOfMonth","startOfWeek","subDays","subMonths","subWeeks","date","dayjs","startOf","toDate","endOf","weekStart","day","weekDay","diff","isSame","date1","date2","start","end","minute","set","hour","month","year","add","subtract","week","dates","startDate","endDate","endTime","getTime","currentDate","push","Date","setDate","getDate","input","referenceDate","match2","match4","entries","val","numVal","okay","parseInt","superRegExp","RegExp","map","item","join","store","Y","getFullYear","M","getMonth","D","h","getHours","m","getMinutes","s","getSeconds","ms","getMilliseconds","prevInputIndex","lastNonFormatting","lastFormatIndex","found","match","exec","length","atIndex","lastIndex","find","slice","value","key","newValue","isNaN"],"mappings":"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"}