{"version":3,"sources":["../../../src/lib/animate.ts"],"sourcesContent":["import { canUseDOM } from './dom';\n\n/**\n * Функция для js анимации\n * @param {number} duration\n * @param {function} timing тайминг функция анимации\n * @param {function} draw коллбэк, в который прокидывается прогресс [0, 1]\n * @returns {void}\n */\nexport type TimingInterface = (timeFraction: number) => number;\n\nexport type DrawInterface = (progress: number) => void;\n\nexport interface AnimateArgumentsInterface {\n  duration: number;\n  timing: TimingInterface;\n  draw: DrawInterface;\n  animationQueue: VoidFunction[];\n}\n\nexport function animate({\n  duration,\n  timing,\n  draw,\n  animationQueue = [],\n}: AnimateArgumentsInterface): void {\n  if (!canUseDOM) {\n    return;\n  }\n\n  let start: number;\n\n  requestAnimationFrame(function animate(time: number): void {\n    if (!start) {\n      start = time;\n    }\n    let timeFraction = Math.min((time - start) / duration, 1);\n\n    const progress = timing(timeFraction);\n\n    draw(progress);\n\n    if (timeFraction < 1) {\n      requestAnimationFrame(animate);\n      return;\n    }\n    animationQueue.shift();\n    if (animationQueue.length > 0) {\n      animationQueue[0]();\n    }\n  });\n}\n"],"names":["animate","duration","timing","draw","animationQueue","canUseDOM","start","requestAnimationFrame","time","timeFraction","Math","min","progress","shift","length"],"mappings":";;;;+BAoBgBA;;;eAAAA;;;qBApBU;AAoBnB,SAASA,QAAQ,EACtBC,QAAQ,EACRC,MAAM,EACNC,IAAI,EACJC,iBAAiB,EAAE,EACO;IAC1B,IAAI,CAACC,cAAS,EAAE;QACd;IACF;IAEA,IAAIC;IAEJC,sBAAsB,SAASP,QAAQQ,IAAY;QACjD,IAAI,CAACF,OAAO;YACVA,QAAQE;QACV;QACA,IAAIC,eAAeC,KAAKC,GAAG,CAAC,AAACH,CAAAA,OAAOF,KAAI,IAAKL,UAAU;QAEvD,MAAMW,WAAWV,OAAOO;QAExBN,KAAKS;QAEL,IAAIH,eAAe,GAAG;YACpBF,sBAAsBP;YACtB;QACF;QACAI,eAAeS,KAAK;QACpB,IAAIT,eAAeU,MAAM,GAAG,GAAG;YAC7BV,cAAc,CAAC,EAAE;QACnB;IACF;AACF"}