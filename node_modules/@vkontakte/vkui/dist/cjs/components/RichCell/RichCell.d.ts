import * as React from 'react';
import { TappableProps } from '../Tappable/Tappable';
export interface RichCellProps extends TappableProps {
    /**
     * Контейнер для текста над `children`.
     */
    subhead?: React.ReactNode;
    /**
     * Контейнер для текста под `children`.
     */
    text?: React.ReactNode;
    /**
     * Контейнер для текста под `text`.
     */
    caption?: React.ReactNode;
    /**
     * Контейнер для контента под `caption`. Например `<UsersStack size="m" />`.
     */
    bottom?: React.ReactNode;
    /**
     * Кнопки-действия. Принимает [`Button`](https://vkcom.github.io/VKUI/#/Button) с параметрами:
     *
     * - `mode="primary" size="s"`
     * - `mode="secondary" size="s"`
     *
     * Для набора кнопок используйте [`ButtonGroup`](https://vkcom.github.io/VKUI/#/ButtonGroup) с параметрами:
     *
     * - `mode="horizontal" gap="s" stretched`
     */
    actions?: React.ReactNode;
    /**
     * `<Avatar size={40|48|72} />`.
     */
    before?: React.ReactNode;
    /**
     * Иконка 28 или текст.
     */
    after?: React.ReactNode;
    /**
     * Текст под `after`.
     */
    afterCaption?: React.ReactNode;
    /**
     * Убирает анимацию нажатия.
     */
    disabled?: boolean;
    /**
     * Включает многострочный режим для `subhead`, `children`, `text` и `caption`.
     */
    multiline?: boolean;
}
/**
 * @see https://vkcom.github.io/VKUI/#/RichCell
 */
export declare const RichCell: {
    ({ subhead, children, text, caption, before, after, afterCaption, bottom, actions, multiline, className, ...restProps }: RichCellProps): React.JSX.Element;
    Icon: (props: import("./RichCellIcon/RichCellIcon").RichCellIconProps) => React.JSX.Element;
};
//# sourceMappingURL=RichCell.d.ts.map