{"version":3,"sources":["../../../../src/components/TabsItem/TabsItem.tsx"],"sourcesContent":["import * as React from 'react';\nimport { classNames, hasReactNode } from '@vkontakte/vkjs';\nimport { useAdaptivity } from '../../hooks/useAdaptivity';\nimport { useExternRef } from '../../hooks/useExternRef';\nimport { usePrevious } from '../../hooks/usePrevious';\nimport { useDOM } from '../../lib/dom';\nimport { warnOnce } from '../../lib/warnOnce';\nimport { HTMLAttributesWithRootRef } from '../../types';\nimport { TabsContextProps, TabsModeContext } from '../Tabs/Tabs';\nimport { Tappable } from '../Tappable/Tappable';\nimport { Headline } from '../Typography/Headline/Headline';\nimport { Subhead } from '../Typography/Subhead/Subhead';\nimport { VisuallyHidden } from '../VisuallyHidden/VisuallyHidden';\nimport styles from './TabsItem.module.css';\n\nconst sizeYClassNames = {\n  none: styles['TabsItem--sizeY-none'],\n  ['compact']: styles['TabsItem--sizeY-compact'],\n};\n\nconst stylesMode = {\n  default: styles['TabsItem--mode-default'],\n  accent: styles['TabsItem--mode-accent'],\n  secondary: styles['TabsItem--mode-secondary'],\n};\n\nconst fillModeClassNames = {\n  stretched: styles['TabsItem--stretched'],\n  shrinked: styles['TabsItem--shrinked'],\n};\n\nexport interface TabsItemProps extends HTMLAttributesWithRootRef<HTMLElement> {\n  /**\n   * Добавляет иконку слева.\n   *\n   * - Для `mode=\"default\"` используйте иконки размером 24.\n   * - Для всех остальных `mode` используйте иконки размером 20.\n   */\n  before?: React.ReactNode;\n  /**\n   * Добавляет элемент слева от `after`.\n   *\n   * - `React.ReactElement` – либо [`Badge`](https://vkcom.github.io/VKUI/#/Badge) с параметром `mode=\"prominent\"`.\n   *   либо [`Counter`](https://vkcom.github.io/VKUI/#/Counter) с параметрами `mode=\"prominent\" size=\"s\"`.\n   * - `number` – для показа текстового блока с переданным числом.\n   */\n  status?: React.ReactElement | number;\n  /**\n   * Добавляет иконку справа.\n   *\n   * Например, `<Icon16Dropdown />`\n   */\n  after?: React.ReactNode;\n  selected?: boolean;\n  disabled?: boolean;\n}\n\nconst warn = warnOnce('TabsItem');\n\n/**\n * @see https://vkcom.github.io/VKUI/#/TabsItem\n */\nexport const TabsItem = ({\n  before,\n  children,\n  status,\n  after,\n  selected = false,\n  className,\n  role = 'tab',\n  tabIndex: tabIndexProp,\n  getRootRef,\n  ...restProps\n}: TabsItemProps) => {\n  const { sizeY = 'none' } = useAdaptivity();\n  const {\n    mode,\n    withGaps,\n    layoutFillMode,\n    scrollBehaviorToSelectedTab,\n    withScrollToSelectedTab,\n  }: TabsContextProps = React.useContext(TabsModeContext);\n  let statusComponent = null;\n\n  const isTabFlow = role === 'tab';\n\n  if (hasReactNode(status)) {\n    statusComponent =\n      typeof status === 'number' ? (\n        <Subhead\n          Component=\"span\"\n          className={classNames(styles['TabsItem__status'], styles['TabsItem__status--count'])}\n          weight=\"2\"\n        >\n          <VisuallyHidden>&nbsp;</VisuallyHidden>\n          {status}\n        </Subhead>\n      ) : (\n        <span className={styles['TabsItem__status']}>\n          <VisuallyHidden>&nbsp;</VisuallyHidden>\n          {status}\n        </span>\n      );\n  }\n\n  if (process.env.NODE_ENV === 'development' && isTabFlow) {\n    if (!restProps['aria-controls']) {\n      warn(`Передайте в \"aria-controls\" id контролируемого блока`, 'warn');\n    } else if (!restProps['id']) {\n      warn(\n        `Передайте \"id\" компоненту для использования в \"aria-labelledby\" контролируемого блока`,\n        'warn',\n      );\n    }\n  }\n\n  let tabIndex = tabIndexProp;\n  if (isTabFlow && tabIndex === undefined) {\n    tabIndex = selected ? 0 : -1;\n  }\n\n  const rootRef = useExternRef(getRootRef);\n\n  const prevSelected = usePrevious(selected);\n  const isInitialRender = prevSelected === undefined;\n  const shouldScrollToSelected =\n    withScrollToSelectedTab && !isInitialRender && prevSelected !== selected && selected;\n\n  const { document } = useDOM();\n  React.useEffect(\n    function scrollToSelectedItem() {\n      if (!shouldScrollToSelected || !rootRef.current || !document) {\n        return;\n      }\n\n      const tabDOMRect = rootRef.current.getBoundingClientRect();\n      const isTabVerticallyOutsideOfViewport =\n        tabDOMRect.top < 0 || tabDOMRect.bottom > document.documentElement.clientHeight;\n\n      /* проверяем, возможен ли вертикальный скролл, а он возможен для scrollIntoView если\n       * элемент вертикально вне зоны видимости */\n      if (isTabVerticallyOutsideOfViewport) {\n        return;\n      }\n\n      /* Не все браузеры поддерживают используемые нами опции. */\n      try {\n        rootRef.current.scrollIntoView({\n          inline: scrollBehaviorToSelectedTab,\n          block: 'nearest',\n          behavior: 'smooth',\n        });\n      } catch {\n        /* Вызывать scrollIntoView с булевым аргументом не следует, потому что это повлечёт\n         * вертикальный скролл.\n         **/\n      }\n    },\n    [rootRef, document, shouldScrollToSelected, scrollBehaviorToSelectedTab],\n  );\n\n  return (\n    <Tappable\n      {...restProps}\n      getRootRef={rootRef}\n      className={classNames(\n        styles['TabsItem'],\n        mode && stylesMode[mode],\n        selected && styles['TabsItem--selected'],\n        sizeY !== 'regular' && sizeYClassNames[sizeY],\n        withGaps && styles['TabsItem--withGaps'],\n        layoutFillMode !== 'auto' && fillModeClassNames[layoutFillMode],\n        className,\n      )}\n      hoverMode={styles['TabsItem--hover']}\n      activeMode=\"\"\n      focusVisibleMode=\"inside\"\n      hasActive={false}\n      role={role}\n      aria-selected={selected}\n      tabIndex={tabIndex}\n    >\n      {before && <div className={styles['TabsItem__before']}>{before}</div>}\n      <Headline\n        Component=\"span\"\n        className={styles['TabsItem__label']}\n        level={mode === 'default' ? '1' : '2'}\n        weight=\"2\"\n      >\n        {children}\n      </Headline>\n      {statusComponent}\n      {after && <div className={styles['TabsItem__after']}>{after}</div>}\n      {mode === 'default' && (\n        <div className={styles['TabsItem__underline']} aria-hidden data-selected={selected} />\n      )}\n    </Tappable>\n  );\n};\n"],"names":["TabsItem","sizeYClassNames","none","stylesMode","default","accent","secondary","fillModeClassNames","stretched","shrinked","warn","warnOnce","before","children","status","after","selected","className","role","tabIndex","tabIndexProp","getRootRef","restProps","sizeY","useAdaptivity","mode","withGaps","layoutFillMode","scrollBehaviorToSelectedTab","withScrollToSelectedTab","React","useContext","TabsModeContext","statusComponent","isTabFlow","hasReactNode","Subhead","Component","classNames","weight","VisuallyHidden","span","process","env","NODE_ENV","undefined","rootRef","useExternRef","prevSelected","usePrevious","isInitialRender","shouldScrollToSelected","document","useDOM","useEffect","scrollToSelectedItem","current","tabDOMRect","getBoundingClientRect","isTabVerticallyOutsideOfViewport","top","bottom","documentElement","clientHeight","scrollIntoView","inline","block","behavior","Tappable","hoverMode","activeMode","focusVisibleMode","hasActive","aria-selected","div","Headline","level","aria-hidden","data-selected"],"mappings":"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"}