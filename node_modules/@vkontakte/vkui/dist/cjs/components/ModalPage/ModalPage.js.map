{"version":3,"sources":["../../../../src/components/ModalPage/ModalPage.tsx"],"sourcesContent":["import * as React from 'react';\nimport { classNames } from '@vkontakte/vkjs';\nimport { useAdaptivityWithJSMediaQueries } from '../../hooks/useAdaptivityWithJSMediaQueries';\nimport { useExternRef } from '../../hooks/useExternRef';\nimport { useOrientationChange } from '../../hooks/useOrientationChange';\nimport { usePlatform } from '../../hooks/usePlatform';\nimport { getNavId, NavIdProps } from '../../lib/getNavId';\nimport { multiRef } from '../../lib/utils';\nimport { warnOnce } from '../../lib/warnOnce';\nimport { HTMLAttributesWithRootRef } from '../../types';\nimport { ModalDismissButton } from '../ModalDismissButton/ModalDismissButton';\nimport { ModalRootContext, useModalRegistry } from '../ModalRoot/ModalRootContext';\nimport { RootComponent } from '../RootComponent/RootComponent';\nimport { ModalPageContext } from './ModalPageContext';\nimport styles from './ModalPage.module.css';\n\nconst sizeClassName = {\n  s: styles['ModalPage--size-s'],\n  m: styles['ModalPage--size-m'],\n  l: styles['ModalPage--size-l'],\n};\n\nexport interface ModalPageProps extends HTMLAttributesWithRootRef<HTMLDivElement>, NavIdProps {\n  /**\n   * Шапка модальной страницы, `<ModalPageHeader />`\n   */\n  header?: React.ReactNode;\n  /**\n   * Задаёт контенту максимальную ширину для десктопной версии.\n   */\n  size?: 's' | 'm' | 'l' | number;\n  /**\n   * Задаёт модальному окну фиксированную высоту.\n   * Можно передать числовое значение в пикселях, а можно строкой, в том числе и в процентах \"50%\".\n   * В мобильной версии 'settlingHeight' будет считаться относительно заданного height.\n   */\n  height?: string | number;\n  /**\n   * Будет вызвано при начале открытия модалки.\n   */\n  onOpen?: VoidFunction;\n  /**\n   * Будет вызвано при окончательном открытии модалки.\n   */\n  onOpened?: VoidFunction;\n  /**\n   * Будет вызвано при начале закрытия модалки.\n   */\n  onClose?: VoidFunction;\n  /**\n   * Будет вызвано при окончательном закрытии модалки.\n   */\n  onClosed?: VoidFunction;\n  /**\n   * Процент, на который изначально будет открыта модальная страница. При `settlingHeight={100}` модальная страница раскрывается на всю высоту.\n   */\n  settlingHeight?: number;\n  /**\n   * Если высота контента в модальной странице может поменяться, нужно установить это свойство\n   */\n  dynamicContentHeight?: boolean;\n  getModalContentRef?: React.Ref<HTMLDivElement>;\n  /**\n   * Скрывает кнопку закрытия (актуально для iOS, т.к. можно отрисовать кнопку закрытия внутри модалки)\n   */\n  hideCloseButton?: boolean;\n  modalContentTestId?: string;\n  /**\n   * `data-testid` для кнопки закрытия\n   */\n  modalDismissButtonTestId?: string;\n}\n\nconst warn = warnOnce('ModalPage');\n\n/**\n * @see https://vkcom.github.io/VKUI/#/ModalPage\n */\nexport const ModalPage = ({\n  children,\n  header,\n  size: sizeProp = 's',\n  onOpen,\n  onOpened,\n  onClose,\n  onClosed,\n  settlingHeight, // 75\n  dynamicContentHeight,\n  getModalContentRef,\n  nav,\n  id: idProp,\n  hideCloseButton = false,\n  height,\n  modalContentTestId,\n  modalDismissButtonTestId,\n  getRootRef,\n  ...restProps\n}: ModalPageProps) => {\n  const generatingId = React.useId();\n  const id = idProp || generatingId;\n\n  const { updateModalHeight } = React.useContext(ModalRootContext);\n\n  const platform = usePlatform();\n  const orientation = useOrientationChange();\n  const { sizeX, isDesktop } = useAdaptivityWithJSMediaQueries();\n\n  React.useEffect(() => {\n    if (dynamicContentHeight) {\n      updateModalHeight();\n    }\n  }, [children, dynamicContentHeight, orientation, updateModalHeight]);\n\n  const isCloseButtonShown = !hideCloseButton && isDesktop;\n  const size = isDesktop ? sizeProp : 's';\n\n  const modalContext = React.useContext(ModalRootContext);\n  const { refs } = useModalRegistry(getNavId({ nav, id }, warn), 'page');\n  const rootRef = useExternRef(getRootRef, refs.modalElement);\n\n  const contextValue = React.useMemo(() => ({ labelId: `${id}-label` }), [id]);\n\n  return (\n    <ModalPageContext.Provider value={contextValue}>\n      <RootComponent\n        {...restProps}\n        getRootRef={rootRef}\n        tabIndex={-1}\n        role=\"dialog\"\n        aria-modal=\"true\"\n        aria-labelledby={contextValue.labelId}\n        id={id}\n        baseClassName={classNames(\n          styles['ModalPage'],\n          platform === 'ios' && styles['ModalPage--ios'],\n          isDesktop && styles['ModalPage--desktop'],\n          sizeX === 'regular' && 'vkuiInternalModalPage--sizeX-regular',\n          typeof size === 'string' && sizeClassName[size],\n        )}\n      >\n        <div\n          className={styles['ModalPage__in-wrap']}\n          style={{\n            maxWidth: typeof size === 'number' ? size : undefined,\n            height,\n          }}\n          ref={refs.innerElement}\n        >\n          <div className={styles['ModalPage__in']}>\n            <div className={styles['ModalPage__header']} ref={refs.headerElement}>\n              {header}\n            </div>\n\n            <div className={styles['ModalPage__content-wrap']}>\n              <div\n                className={styles['ModalPage__content']}\n                ref={multiRef<HTMLDivElement>(refs.contentElement, getModalContentRef)}\n                {...(modalContentTestId && { 'data-testid': modalContentTestId })}\n              >\n                <div className={styles['ModalPage__content-in']}>{children}</div>\n              </div>\n              <div ref={refs.bottomInset} className={styles['ModalPage__bottom-inset']} />\n            </div>\n            {isCloseButtonShown && (\n              <ModalDismissButton\n                data-testid={modalDismissButtonTestId}\n                onClick={onClose || modalContext.onClose}\n              />\n            )}\n          </div>\n        </div>\n      </RootComponent>\n    </ModalPageContext.Provider>\n  );\n};\n"],"names":["ModalPage","sizeClassName","s","m","l","warn","warnOnce","children","header","size","sizeProp","onOpen","onOpened","onClose","onClosed","settlingHeight","dynamicContentHeight","getModalContentRef","nav","id","idProp","hideCloseButton","height","modalContentTestId","modalDismissButtonTestId","getRootRef","restProps","generatingId","React","useId","updateModalHeight","useContext","ModalRootContext","platform","usePlatform","orientation","useOrientationChange","sizeX","isDesktop","useAdaptivityWithJSMediaQueries","useEffect","isCloseButtonShown","modalContext","refs","useModalRegistry","getNavId","rootRef","useExternRef","modalElement","contextValue","useMemo","labelId","ModalPageContext","Provider","value","RootComponent","tabIndex","role","aria-modal","aria-labelledby","baseClassName","classNames","div","className","style","maxWidth","undefined","ref","innerElement","headerElement","multiRef","contentElement","bottomInset","ModalDismissButton","data-testid","onClick"],"mappings":"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"}