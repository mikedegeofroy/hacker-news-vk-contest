{"version":3,"sources":["../../../../src/components/Removable/Removable.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Icon24Cancel } from '@vkontakte/icons';\nimport { classNames, noop } from '@vkontakte/vkjs';\nimport { useGlobalEventListener } from '../../hooks/useGlobalEventListener';\nimport { usePlatform } from '../../hooks/usePlatform';\nimport { getTextFromChildren } from '../../lib/children';\nimport { useDOM } from '../../lib/dom';\nimport { HTMLAttributesWithRootRef } from '../../types';\nimport { IconButton } from '../IconButton/IconButton';\nimport { RootComponent } from '../RootComponent/RootComponent';\nimport { Tappable } from '../Tappable/Tappable';\nimport { VisuallyHidden } from '../VisuallyHidden/VisuallyHidden';\nimport styles from './Removable.module.css';\n\nexport interface RemovableProps {\n  /**\n   * Текст кнопки удаления ячейки. Визуально скрыт везде, кроме iOS. На iOS появляется в выезжающей кнопке для удаления ячейки.\n   */\n  removePlaceholder?: React.ReactNode;\n  /**\n   * Коллбэк срабатывает при клике на контрол удаления.\n   */\n  onRemove?: (e: React.MouseEvent, rootEl?: HTMLElement | null) => void;\n  /**\n   * (test) iOS only. testId кнопки, которая активирует кнопку удаления\n   */\n  toggleButtonTestId?: string;\n  /**\n   * (test) testId кнопки удаления\n   */\n  removeButtonTestId?: string;\n}\n\ninterface RemovableIosOwnProps extends RemovableProps {\n  removePlaceholderString?: string;\n  children?: React.ReactNode | ((renderProps: RemovableIosRenderProps) => React.ReactNode);\n}\n\n/**\n * @see https://vkcom.github.io/VKUI/#/RemovableIos\n */\nconst RemovableIos = ({\n  onRemove,\n  removePlaceholder,\n  removePlaceholderString,\n  children: childrenProp,\n  toggleButtonTestId,\n  removeButtonTestId,\n}: RemovableIosOwnProps) => {\n  const { window } = useDOM();\n\n  const removeButtonRef = React.useRef<HTMLElement>(null);\n  const disabledRef = React.useRef(true);\n  const [removeOffset, updateRemoveOffset] = React.useState(0);\n\n  useGlobalEventListener(\n    window,\n    'click',\n    () => {\n      if (removeOffset > 0) {\n        updateRemoveOffset(0);\n      }\n    },\n    { capture: true },\n  );\n\n  const onRemoveTransitionEnd = () => {\n    if (removeOffset > 0) {\n      removeButtonRef?.current?.focus();\n    } else {\n      disabledRef.current = true;\n    }\n  };\n\n  const onRemoveActivateClick = (e: React.MouseEvent) => {\n    e.stopPropagation();\n    if (!removeButtonRef.current) {\n      return;\n    }\n    const { offsetWidth } = removeButtonRef.current;\n    disabledRef.current = false;\n    updateRemoveOffset(offsetWidth);\n  };\n\n  return (\n    <div\n      className={classNames(styles['Removable__content'], 'vkuiInternalRemovable__content')}\n      style={{ transform: `translateX(-${removeOffset ?? 0}px)` }}\n      onTransitionEnd={onRemoveTransitionEnd}\n    >\n      <IconButton\n        hasActive={false}\n        hasHover={false}\n        className={classNames(\n          styles['Removable__action'],\n          styles['Removable__toggle'],\n          'vkuiInternalRemovable__action',\n        )}\n        onClick={onRemoveActivateClick}\n        disabled={removeOffset > 0}\n        data-testid={toggleButtonTestId}\n      >\n        <VisuallyHidden>{removePlaceholderString}</VisuallyHidden>\n        <i className={styles['Removable__toggle-in']} role=\"presentation\" />\n      </IconButton>\n      {typeof childrenProp === 'function'\n        ? childrenProp({ isRemoving: removeOffset > 0 })\n        : childrenProp}\n\n      <span className={styles['Removable__offset']} aria-hidden />\n\n      <Tappable\n        Component=\"button\"\n        hasActive={false}\n        hasHover={false}\n        disabled={disabledRef.current}\n        getRootRef={removeButtonRef}\n        className={styles['Removable__remove']}\n        onClick={onRemove}\n        data-testid={removeButtonTestId}\n      >\n        <span className={styles['Removable__remove-in']}>{removePlaceholder}</span>\n      </Tappable>\n    </div>\n  );\n};\n\ninterface RemovableIosRenderProps {\n  /**\n   * Показывает состояние Removable на платформе iOS при клике на иконку удаления.\n   * Для имитации поведения на iOS при клике на иконку удаления самого удаление не происходит,\n   * контент сдвигается влево и справа выезжает настоящая кнопка \"Удалить\".\n   * Когда контент сдвинут `isRemoving = true`.\n   */\n  isRemoving: boolean;\n}\n\ninterface RemovableOwnProps\n  extends Omit<HTMLAttributesWithRootRef<HTMLDivElement>, 'children'>,\n    RemovableProps {\n  /**\n   * Расположение кнопки удаления.\n   */\n  align?: 'start' | 'center';\n  /**\n   * Скрывает кнопку, но оставляет отступ.\n   * @since 5.4.0\n   */\n  indent?: boolean;\n  children?: React.ReactNode | ((renderProps: RemovableIosRenderProps) => React.ReactNode);\n}\n\n/**\n * @see https://vkcom.github.io/VKUI/#/Removable\n */\nexport const Removable = ({\n  children,\n  onRemove = noop,\n  removePlaceholder = 'Удалить',\n  align = 'center',\n  indent = false,\n  toggleButtonTestId,\n  removeButtonTestId,\n  ...restProps\n}: RemovableOwnProps) => {\n  const platform = usePlatform();\n\n  const onRemoveClick = (e: React.MouseEvent) => {\n    e.preventDefault();\n    onRemove(e);\n  };\n\n  const removePlaceholderString: string = getTextFromChildren(removePlaceholder);\n\n  return (\n    <RootComponent\n      {...restProps}\n      baseClassName={classNames(\n        platform === 'ios' && styles['Removable--ios'],\n        align === 'start' && styles['Removable--align-start'],\n        indent && styles['Removable--indent'],\n      )}\n    >\n      {platform !== 'ios' && (\n        <div className={classNames(styles['Removable__content'], 'vkuiInternalRemovable__content')}>\n          {typeof children === 'function' ? children({ isRemoving: false }) : children}\n\n          <IconButton\n            activeMode=\"opacity\"\n            hoverMode=\"opacity\"\n            className={classNames(styles['Removable__action'], 'vkuiInternalRemovable__action')}\n            onClick={onRemoveClick}\n            label={removePlaceholderString}\n            data-testid={removeButtonTestId}\n          >\n            <Icon24Cancel role=\"presentation\" />\n          </IconButton>\n\n          <span className={styles['Removable__offset']} aria-hidden />\n        </div>\n      )}\n\n      {platform === 'ios' && (\n        <RemovableIos\n          onRemove={onRemoveClick}\n          removePlaceholder={removePlaceholder}\n          removePlaceholderString={removePlaceholderString}\n          toggleButtonTestId={toggleButtonTestId}\n          removeButtonTestId={removeButtonTestId}\n        >\n          {children}\n        </RemovableIos>\n      )}\n    </RootComponent>\n  );\n};\n"],"names":["Removable","RemovableIos","onRemove","removePlaceholder","removePlaceholderString","children","childrenProp","toggleButtonTestId","removeButtonTestId","window","useDOM","removeButtonRef","React","useRef","disabledRef","removeOffset","updateRemoveOffset","useState","useGlobalEventListener","capture","onRemoveTransitionEnd","current","focus","onRemoveActivateClick","e","stopPropagation","offsetWidth","div","className","classNames","style","transform","onTransitionEnd","IconButton","hasActive","hasHover","onClick","disabled","data-testid","VisuallyHidden","i","role","isRemoving","span","aria-hidden","Tappable","Component","getRootRef","noop","align","indent","restProps","platform","usePlatform","onRemoveClick","preventDefault","getTextFromChildren","RootComponent","baseClassName","activeMode","hoverMode","label","Icon24Cancel"],"mappings":"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"}