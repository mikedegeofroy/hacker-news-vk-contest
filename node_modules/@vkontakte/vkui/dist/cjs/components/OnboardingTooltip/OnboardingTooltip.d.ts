import * as React from 'react';
import { type FloatingComponentProps } from '../../lib/floating';
import { FloatingArrowProps } from '../FloatingArrow/FloatingArrow';
import { type TooltipBaseProps } from '../TooltipBase/TooltipBase';
type AllowedFloatingComponentProps = Pick<FloatingComponentProps, 'arrowHeight' | 'arrowPadding' | 'arrowRef' | 'placement' | 'offsetByMainAxis' | 'offsetByCrossAxis' | 'shown' | 'children' | 'onPlacementChange'>;
type AllowedTooltipBaseProps = Omit<TooltipBaseProps, 'arrowProps'>;
type AllowedFloatingArrowProps = {
    /**
     * Сдвиг стрелки относительно текущих координат.
     */
    arrowOffset?: FloatingArrowProps['offset'];
    /**
     * Включает абсолютное смещение по `arrowOffset`.
     */
    isStaticArrowOffset?: FloatingArrowProps['isStaticOffset'];
};
export interface OnboardingTooltipProps extends AllowedFloatingComponentProps, AllowedTooltipBaseProps, AllowedFloatingArrowProps {
    /**
     * Скрывает стрелку, указывающую на якорный элемент.
     */
    disableArrow?: boolean;
    /**
     * Callback, который вызывается при клике по любому месту в пределах экрана.
     */
    onClose?(this: void): void;
}
/**
 * @see https://vkcom.github.io/VKUI/#/Tooltip
 */
export declare const OnboardingTooltip: ({ id: idProp, children, shown: shownProp, arrowPadding, arrowHeight, offsetByMainAxis, offsetByCrossAxis, arrowOffset, isStaticArrowOffset, onClose, placement: placementProp, maxWidth, style: styleProp, getRootRef, disableArrow, onPlacementChange, ...restProps }: OnboardingTooltipProps) => React.JSX.Element;
export {};
//# sourceMappingURL=OnboardingTooltip.d.ts.map