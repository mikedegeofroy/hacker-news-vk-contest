{"version":3,"sources":["../../../../src/components/Textarea/Textarea.tsx"],"sourcesContent":["import * as React from 'react';\nimport { classNames } from '@vkontakte/vkjs';\nimport { useAdaptivity } from '../../hooks/useAdaptivity';\nimport { useExternRef } from '../../hooks/useExternRef';\nimport { callMultiple } from '../../lib/callMultiple';\nimport { HasRef, HasRootRef } from '../../types';\nimport { FormField, FormFieldProps } from '../FormField/FormField';\nimport { Text } from '../Typography/Text/Text';\nimport styles from './Textarea.module.css';\n\nconst sizeYClassNames = {\n  none: styles['Textarea--sizeY-none'],\n  ['compact']: styles['Textarea--sizeY-compact'],\n};\n\nexport interface TextareaProps\n  extends Omit<React.TextareaHTMLAttributes<HTMLTextAreaElement>, 'onResize'>,\n    HasRef<HTMLTextAreaElement>,\n    HasRootRef<HTMLElement>,\n    Pick<React.CSSProperties, 'maxHeight'>,\n    Pick<FormFieldProps, 'status'> {\n  grow?: boolean;\n  onResize?(el: HTMLTextAreaElement): void;\n  defaultValue?: string;\n}\n\n/**\n * @see https://vkcom.github.io/VKUI/#/Textarea\n */\nexport const Textarea = ({\n  grow = true,\n  style,\n  onResize,\n  className,\n  getRootRef,\n  getRef,\n  rows = 2,\n  maxHeight,\n  status,\n  onChange,\n  ...restProps\n}: TextareaProps) => {\n  const currentScrollHeight = React.useRef<number>();\n  const elementRef = useExternRef(getRef);\n  const { sizeY = 'none' } = useAdaptivity();\n\n  const autosizeInput = () => {\n    const el = elementRef.current;\n\n    if (grow && el?.offsetParent) {\n      el.style.height = '';\n      el.style.height = `${el.scrollHeight}px`;\n\n      if (el.scrollHeight !== currentScrollHeight.current && onResize) {\n        onResize(el);\n        currentScrollHeight.current = el.scrollHeight;\n      }\n    }\n  };\n\n  React.useEffect(autosizeInput, [grow, sizeY, elementRef, onResize]);\n\n  return (\n    <FormField\n      className={classNames(\n        styles['Textarea'],\n        sizeY !== 'regular' && sizeYClassNames[sizeY],\n        className,\n      )}\n      style={style}\n      getRootRef={getRootRef}\n      disabled={restProps.disabled}\n      status={status}\n    >\n      <Text\n        {...restProps}\n        Component=\"textarea\"\n        normalize={false}\n        style={{ maxHeight }}\n        rows={rows}\n        className={styles['Textarea__el']}\n        onChange={callMultiple(onChange, autosizeInput)}\n        getRootRef={elementRef}\n      />\n    </FormField>\n  );\n};\n"],"names":["Textarea","sizeYClassNames","none","grow","style","onResize","className","getRootRef","getRef","rows","maxHeight","status","onChange","restProps","currentScrollHeight","React","useRef","elementRef","useExternRef","sizeY","useAdaptivity","autosizeInput","el","current","offsetParent","height","scrollHeight","useEffect","FormField","classNames","disabled","Text","Component","normalize","callMultiple"],"mappings":";;;;+BA6BaA;;;eAAAA;;;;;;;iEA7BU;sBACI;+BACG;8BACD;8BACA;2BAEa;sBACrB;AAGrB,MAAMC,kBAAkB;IACtBC,IAAI;IACJ,CAAC,UAAU;AACb;AAgBO,MAAMF,WAAW;QAAC,EACvBG,OAAO,IAAI,EACXC,KAAK,EACLC,QAAQ,EACRC,SAAS,EACTC,UAAU,EACVC,MAAM,EACNC,OAAO,CAAC,EACRC,SAAS,EACTC,MAAM,EACNC,QAAQ,EAEM,WADXC;QAVHV;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;;IAGA,MAAME,sBAAsBC,OAAMC,MAAM;IACxC,MAAMC,aAAaC,IAAAA,0BAAY,EAACV;IAChC,MAAM,EAAEW,QAAQ,MAAM,EAAE,GAAGC,IAAAA,4BAAa;IAExC,MAAMC,gBAAgB;QACpB,MAAMC,KAAKL,WAAWM,OAAO;QAE7B,IAAIpB,SAAQmB,eAAAA,yBAAAA,GAAIE,YAAY,GAAE;YAC5BF,GAAGlB,KAAK,CAACqB,MAAM,GAAG;YAClBH,GAAGlB,KAAK,CAACqB,MAAM,GAAG,CAAC,EAAEH,GAAGI,YAAY,CAAC,EAAE,CAAC;YAExC,IAAIJ,GAAGI,YAAY,KAAKZ,oBAAoBS,OAAO,IAAIlB,UAAU;gBAC/DA,SAASiB;gBACTR,oBAAoBS,OAAO,GAAGD,GAAGI,YAAY;YAC/C;QACF;IACF;IAEAX,OAAMY,SAAS,CAACN,eAAe;QAAClB;QAAMgB;QAAOF;QAAYZ;KAAS;IAElE,qBACE,qBAACuB,oBAAS;QACRtB,WAAWuB,IAAAA,gBAAU,kBAEnBV,UAAU,aAAalB,eAAe,CAACkB,MAAM,EAC7Cb;QAEFF,OAAOA;QACPG,YAAYA;QACZuB,UAAUjB,UAAUiB,QAAQ;QAC5BnB,QAAQA;qBAER,qBAACoB,UAAI,8CACClB;QACJmB,WAAU;QACVC,WAAW;QACX7B,OAAO;YAAEM;QAAU;QACnBD,MAAMA;QACNH,SAAS;QACTM,UAAUsB,IAAAA,0BAAY,EAACtB,UAAUS;QACjCd,YAAYU;;AAIpB"}