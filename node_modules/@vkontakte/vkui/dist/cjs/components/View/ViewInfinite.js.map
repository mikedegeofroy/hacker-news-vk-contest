{"version":3,"sources":["../../../../src/components/View/ViewInfinite.tsx"],"sourcesContent":["import * as React from 'react';\nimport { classNames } from '@vkontakte/vkjs';\nimport { withContext } from '../../hoc/withContext';\nimport { withPlatform } from '../../hoc/withPlatform';\nimport { canUseDOM, DOMProps, withDOM } from '../../lib/dom';\nimport { getNavId, NavIdProps } from '../../lib/getNavId';\nimport { animationEvent, transitionEvent } from '../../lib/supportEvents';\nimport { warnOnce } from '../../lib/warnOnce';\nimport { HasPlatform, HTMLAttributesWithRootRef } from '../../types';\nimport { ScrollContext, ScrollContextInterface } from '../AppRoot/ScrollContext';\nimport {\n  ConfigProviderContext,\n  ConfigProviderContextInterface,\n} from '../ConfigProvider/ConfigProviderContext';\nimport { NavViewIdContext } from '../NavIdContext/NavIdContext';\nimport { NavTransitionProvider } from '../NavTransitionContext/NavTransitionContext';\nimport { NavTransitionDirectionProvider } from '../NavTransitionDirectionContext/NavTransitionDirectionContext';\nimport { SplitColContext, SplitColContextProps } from '../SplitCol/SplitColContext';\nimport { Touch, TouchEvent } from '../Touch/Touch';\nimport {\n  getSwipeBackPredicates,\n  hasHorizontalScrollableElementWithScrolledToLeft,\n  swipeBackExcluded,\n} from './utils';\nimport styles from './View.module.css';\n\nconst warn = warnOnce('ViewInfinite');\n\ninterface Scrolls {\n  [index: string]: Array<number | undefined>;\n}\n\ninterface ViewsScrolls {\n  [index: string]: Scrolls;\n}\n\ntype TransitionEventHandler = (e?: TransitionEvent) => void;\n\nexport let scrollsCache: ViewsScrolls = {};\n\nexport type TransitionParams = { from: string | null; to: string | null };\n\nexport interface ViewInfiniteProps\n  extends HTMLAttributesWithRootRef<HTMLElement>,\n    HasPlatform,\n    NavIdProps {\n  activePanel: string;\n  onTransition?(params: TransitionParams & { isBack: boolean }): void;\n  /**\n   * callback свайпа назад\n   */\n  onSwipeBack?(): void;\n  /**\n   * callback начала анимации свайпа назад.\n   */\n  onSwipeBackStart?(activePanel: string | null): void | 'prevent';\n  /**\n   * callback завершения анимации отмененного пользователем свайпа\n   */\n  onSwipeBackCancel?(): void;\n  history?: string[];\n  isBackCheck?(params: TransitionParams): boolean;\n  /**\n   * @ignore\n   */\n  splitCol?: SplitColContextProps;\n  /**\n   * @ignore\n   */\n  configProvider?: ConfigProviderContextInterface;\n  /**\n   * @ignore\n   */\n  scroll?: ScrollContextInterface;\n}\n\nexport interface ViewInfiniteState {\n  animated: boolean;\n\n  visiblePanels: Array<string | null>;\n  activePanel: string | null;\n  isBack?: boolean;\n  prevPanel: string | null;\n  nextPanel: string | null;\n\n  swipingBack?: boolean;\n  swipeBackStartX: number;\n  swipeBackShift: number;\n  swipeBackNextPanel: string | null;\n  swipeBackPrevPanel: string | null;\n  swipeBackResult: 'success' | 'fail' | null;\n\n  browserSwipe: boolean;\n}\n\nclass ViewInfiniteComponent extends React.Component<\n  ViewInfiniteProps & DOMProps,\n  ViewInfiniteState\n> {\n  constructor(props: ViewInfiniteProps) {\n    super(props);\n\n    this.state = {\n      animated: false,\n\n      visiblePanels: [props.activePanel],\n      activePanel: props.activePanel,\n      isBack: undefined,\n      prevPanel: null,\n      nextPanel: null,\n\n      swipingBack: undefined,\n      swipeBackStartX: 0,\n      swipeBackShift: 0,\n      swipeBackNextPanel: null,\n      swipeBackPrevPanel: null,\n      swipeBackResult: null,\n\n      browserSwipe: false,\n    };\n  }\n\n  static defaultProps: Partial<ViewInfiniteProps> = {\n    history: [],\n  };\n\n  private swipeBackPrevented = false;\n  private scrolls = scrollsCache[getNavId(this.props, warn) as string] || {};\n  private transitionFinishTimeout: ReturnType<typeof setTimeout> | undefined = undefined;\n  private animationFinishTimeout: ReturnType<typeof setTimeout> | undefined = undefined;\n\n  get document() {\n    return this.props.document;\n  }\n\n  get window() {\n    return this.props.window;\n  }\n\n  get panels() {\n    return React.Children.toArray(this.props.children) as React.ReactElement[];\n  }\n\n  panelNodes: { [id: string]: HTMLDivElement | null } = {};\n\n  componentWillUnmount() {\n    const id = getNavId(this.props);\n    if (id) {\n      scrollsCache[id] = this.scrolls;\n    }\n    if (this.animationFinishTimeout) {\n      clearTimeout(this.animationFinishTimeout);\n    }\n  }\n\n  componentDidUpdate(prevProps: ViewInfiniteProps, prevState: ViewInfiniteState) {\n    // Нужен переход\n    if (\n      prevProps.activePanel !== this.props.activePanel &&\n      !prevState.swipingBack &&\n      !prevState.browserSwipe\n    ) {\n      let isBack = false;\n\n      if (this.props.isBackCheck) {\n        isBack = this.props.isBackCheck({\n          from: prevProps.activePanel,\n          to: this.props.activePanel,\n        });\n      } else {\n        const firstLayerId = this.panels\n          .map((panel) => getNavId(panel.props, warn))\n          .find((id) => id === prevProps.activePanel || id === this.props.activePanel);\n        isBack = firstLayerId === this.props.activePanel;\n      }\n\n      this.blurActiveElement();\n\n      const prevScrolls = this.scrolls[prevProps.activePanel] || [];\n      const scrolls = {\n        ...this.scrolls,\n        [prevProps.activePanel]: [...prevScrolls, this.props.scroll?.getScroll().y],\n      };\n      this.scrolls = scrolls;\n\n      if (this.shouldDisableTransitionMotion()) {\n        this.flushTransition(prevProps.activePanel, isBack);\n      } else {\n        this.setState({\n          visiblePanels: [prevProps.activePanel, this.props.activePanel],\n          prevPanel: prevProps.activePanel,\n          nextPanel: this.props.activePanel,\n          activePanel: null,\n          animated: true,\n          isBack,\n        });\n\n        // Фолбек анимации перехода\n        if (!animationEvent.supported) {\n          if (this.animationFinishTimeout) {\n            clearTimeout(this.animationFinishTimeout);\n          }\n          this.animationFinishTimeout = setTimeout(\n            this.transitionEndHandler,\n            this.props.platform === 'android' || this.props.platform === 'vkcom' ? 300 : 600,\n          );\n        }\n      }\n    }\n\n    // Закончилась анимация свайпа назад\n    if (prevProps.activePanel !== this.props.activePanel && prevState.swipingBack) {\n      const nextPanel = this.state.swipeBackNextPanel;\n      const prevPanel = this.state.swipeBackPrevPanel;\n      let scrollPosition: undefined | number = undefined;\n\n      this.scrolls = {\n        ...this.scrolls,\n      };\n\n      if (prevPanel !== null) {\n        const prevPanelScrolls = [...(this.scrolls[prevPanel] || [])].slice(0, -1);\n        this.scrolls[prevPanel] = prevPanelScrolls;\n      }\n      if (nextPanel !== null) {\n        const newPanelScrolls = [...(this.scrolls[nextPanel] || [])];\n        scrollPosition = newPanelScrolls.pop();\n        this.scrolls[nextPanel] = newPanelScrolls;\n      }\n\n      this.setState(\n        {\n          swipeBackPrevPanel: null,\n          swipeBackNextPanel: null,\n          swipingBack: false,\n          swipeBackResult: null,\n          swipeBackStartX: 0,\n          swipeBackShift: 0,\n          activePanel: nextPanel,\n          visiblePanels: [nextPanel],\n        },\n        () => {\n          this.props.scroll?.scrollTo(0, scrollPosition);\n          prevProps.onTransition &&\n            prevProps.onTransition({\n              isBack: true,\n              from: prevPanel,\n              to: nextPanel,\n            });\n        },\n      );\n    }\n\n    // Началась анимация завершения свайпа назад.\n    if (!prevState.swipeBackResult && this.state.swipeBackResult) {\n      this.waitTransitionFinish(\n        this.pickPanel(this.state.swipeBackNextPanel),\n        this.swipingBackTransitionEndHandler,\n      );\n    }\n\n    // Если свайп назад отменился (когда пользователь недостаточно сильно свайпнул)\n    if (\n      prevState.swipeBackResult === 'fail' &&\n      !this.state.swipeBackResult &&\n      this.state.activePanel !== null\n    ) {\n      const newPanelScrolls = [...(this.scrolls[this.state.activePanel] || [])];\n      const scrollPosition = newPanelScrolls.pop();\n      this.scrolls = {\n        ...this.scrolls,\n        [this.state.activePanel]: newPanelScrolls,\n      };\n\n      this.props.scroll?.scrollTo(0, scrollPosition);\n    }\n\n    // Закончился Safari свайп\n    if (prevProps.activePanel !== this.props.activePanel && this.state.browserSwipe) {\n      this.setState({\n        browserSwipe: false,\n        nextPanel: null,\n        prevPanel: null,\n        animated: false,\n        visiblePanels: [this.props.activePanel],\n        activePanel: this.props.activePanel,\n      });\n    }\n  }\n\n  shouldDisableTransitionMotion(): boolean {\n    return (\n      this.props.configProvider?.transitionMotionEnabled === false ||\n      !this.props.splitCol?.animate ||\n      this.props.platform === 'vkcom'\n    );\n  }\n\n  waitTransitionFinish(\n    elem: HTMLElement | null | undefined,\n    eventHandler: TransitionEventHandler,\n  ): void {\n    if (transitionEvent.supported && transitionEvent.name && elem) {\n      elem.removeEventListener(\n        transitionEvent.name as keyof HTMLElementEventMap,\n        eventHandler as EventListener,\n      );\n      elem.addEventListener(\n        transitionEvent.name as keyof HTMLElementEventMap,\n        eventHandler as EventListener,\n      );\n    } else {\n      if (this.transitionFinishTimeout) {\n        clearTimeout(this.transitionFinishTimeout);\n      }\n\n      this.transitionFinishTimeout = setTimeout(\n        eventHandler,\n        this.props.platform === 'android' || this.props.platform === 'vkcom' ? 300 : 600,\n      );\n    }\n  }\n\n  blurActiveElement(): void {\n    if (typeof this.window !== 'undefined' && this.document?.activeElement) {\n      (this.document.activeElement as HTMLElement).blur();\n    }\n  }\n\n  pickPanel(id: string | null) {\n    if (id === null) {\n      return undefined;\n    }\n    return this.panelNodes[id];\n  }\n\n  flushTransition(prevPanel: string, isBack: boolean) {\n    const activePanel = this.props.activePanel;\n\n    const prevPanelScrolls = [...(this.scrolls[prevPanel] || [])].slice(0, -1);\n    const newPanelScrolls = [...(this.scrolls[activePanel] || [])];\n    const scrollPosition = isBack ? newPanelScrolls.pop() : 0;\n    if (isBack) {\n      this.scrolls = {\n        ...this.scrolls,\n        [prevPanel]: prevPanelScrolls,\n        [activePanel]: newPanelScrolls,\n      };\n    }\n\n    this.setState(\n      {\n        prevPanel: null,\n        nextPanel: null,\n        visiblePanels: [activePanel],\n        activePanel: activePanel,\n        animated: false,\n        isBack,\n      },\n      () => {\n        this.props.scroll?.scrollTo(0, isBack ? scrollPosition : 0);\n        this.props.onTransition &&\n          this.props.onTransition({ isBack, from: prevPanel, to: activePanel });\n      },\n    );\n  }\n\n  transitionEndHandler = (e?: React.AnimationEvent): void => {\n    if (\n      (!e ||\n        [\n          styles['animation-ios-next-forward'],\n          styles['animation-ios-prev-back'],\n          styles['animation-view-next-forward'],\n          styles['animation-view-prev-back'],\n        ].includes(e.animationName)) &&\n      this.state.prevPanel !== null\n    ) {\n      this.flushTransition(this.state.prevPanel, Boolean(this.state.isBack));\n    }\n  };\n\n  swipingBackTransitionEndHandler = (e?: TransitionEvent): void => {\n    // indexOf because of vendor prefixes in old browsers\n    if (\n      !e ||\n      (e.propertyName.includes('transform') &&\n        e.target === this.pickPanel(this.state.swipeBackNextPanel))\n    ) {\n      switch (this.state.swipeBackResult) {\n        case 'fail':\n          this.onSwipeBackCancel();\n          break;\n        case 'success':\n          this.onSwipeBackSuccess();\n      }\n    }\n  };\n\n  onSwipeBackSuccess(): void {\n    this.props.onSwipeBack && this.props.onSwipeBack();\n  }\n\n  onSwipeBackCancel(): void {\n    this.props.onSwipeBackCancel && this.props.onSwipeBackCancel();\n    this.setState({\n      swipeBackPrevPanel: null,\n      swipeBackNextPanel: null,\n      swipingBack: false,\n      swipeBackResult: null,\n      swipeBackStartX: 0,\n      swipeBackShift: 0,\n    });\n  }\n\n  handleTouchMoveXForNativeIOSSwipeBackOrSwipeNext = (event: TouchEvent) => {\n    if (this.state.browserSwipe) {\n      return;\n    }\n    const { swipeBackTriggered, viewportStartEdgeTouched, viewportEndEdgeTouched } =\n      getSwipeBackPredicates(event.startX, event.shiftX, this.window!.innerWidth);\n\n    if ((viewportStartEdgeTouched || viewportEndEdgeTouched) && swipeBackTriggered) {\n      this.setState({ browserSwipe: true });\n    }\n  };\n\n  handleTouchMoveXForIOSSwipeBackSimulation = (event: TouchEvent) => {\n    if (this.swipeBackPrevented || swipeBackExcluded(event)) {\n      return;\n    }\n\n    const { swipedToOpposite, swipeBackTriggered, viewportStartEdgeTouched } =\n      getSwipeBackPredicates(event.startX, event.shiftX, this.window!.innerWidth);\n\n    if (this.state.animated && swipeBackTriggered) {\n      return;\n    }\n\n    if (!this.state.swipingBack && this.props.history && this.props.history.length > 1) {\n      if (swipedToOpposite) {\n        this.swipeBackPrevented = true;\n        return;\n      }\n\n      if (!swipeBackTriggered) {\n        return;\n      }\n\n      if (\n        !viewportStartEdgeTouched &&\n        hasHorizontalScrollableElementWithScrolledToLeft(event.originalEvent.target as HTMLElement)\n      ) {\n        this.swipeBackPrevented = true;\n        return;\n      }\n      // Начался свайп назад\n      if (this.props.onSwipeBackStart) {\n        const payload = this.props.onSwipeBackStart(this.state.activePanel);\n        if (payload === 'prevent') {\n          this.swipeBackPrevented = true;\n          return;\n        }\n      }\n\n      if (this.state.activePanel !== null) {\n        // Note: вызываем закрытие клавиатуры. В iOS это нативное поведение при свайпе.\n        this.blurActiveElement();\n        const prevScrolls = this.scrolls[this.state.activePanel] || [];\n        this.scrolls = {\n          ...this.scrolls,\n          [this.state.activePanel]: [...prevScrolls, this.props.scroll?.getScroll().y],\n        };\n      }\n\n      this.setState({\n        swipingBack: true,\n        swipeBackStartX: event.startX,\n        swipeBackPrevPanel: this.state.activePanel,\n        swipeBackNextPanel: this.props.history.slice(-2)[0],\n      });\n    }\n\n    if (this.state.swipingBack) {\n      if (event.shiftX < 0) {\n        this.setState({ swipeBackShift: 0 });\n      } else if (event.shiftX > this.window!.innerWidth - this.state.swipeBackStartX) {\n        this.setState({ swipeBackShift: this.window!.innerWidth });\n      } else {\n        this.setState({ swipeBackShift: event.shiftX });\n      }\n    }\n  };\n\n  handleTouchEndForIOSSwipeBackSimulation = (event: TouchEvent) => {\n    this.swipeBackPrevented = false;\n\n    if (this.state.swipingBack && this.window) {\n      const speed = (this.state.swipeBackShift / event.duration) * 1000;\n      if (this.state.swipeBackShift === 0) {\n        this.onSwipeBackCancel();\n      } else if (this.state.swipeBackShift >= this.window.innerWidth) {\n        this.onSwipeBackSuccess();\n      } else if (speed > 250 || this.state.swipeBackShift >= this.window.innerWidth / 2) {\n        this.setState({ swipeBackResult: 'success' });\n      } else {\n        this.setState({ swipeBackResult: 'fail' });\n      }\n    }\n  };\n\n  calcPanelSwipeStyles(panelId: string | undefined): React.CSSProperties {\n    if (!canUseDOM || !this.window) {\n      return {};\n    }\n\n    const isPrev = panelId === this.state.swipeBackPrevPanel;\n    const isNext = panelId === this.state.swipeBackNextPanel;\n\n    if ((!isPrev && !isNext) || this.state.swipeBackResult) {\n      return {};\n    }\n\n    let prevPanelTranslate = `${this.state.swipeBackShift}px`;\n    let nextPanelTranslate = `${\n      -50 + (this.state.swipeBackShift * 100) / this.window.innerWidth / 2\n    }%`;\n    let prevPanelShadow =\n      (0.3 * (this.window.innerWidth - this.state.swipeBackShift)) / this.window.innerWidth;\n\n    if (this.state.swipeBackResult) {\n      return isPrev ? { boxShadow: `-2px 0 12px rgba(0, 0, 0, ${prevPanelShadow})` } : {};\n    }\n\n    if (isNext) {\n      return {\n        transform: `translate3d(${nextPanelTranslate}, 0, 0)`,\n        WebkitTransform: `translate3d(${nextPanelTranslate}, 0, 0)`,\n      };\n    }\n    if (isPrev) {\n      return {\n        transform: `translate3d(${prevPanelTranslate}, 0, 0)`,\n        WebkitTransform: `translate3d(${prevPanelTranslate}, 0, 0)`,\n        boxShadow: `-2px 0 12px rgba(0, 0, 0, ${prevPanelShadow})`,\n      };\n    }\n\n    return {};\n  }\n\n  render() {\n    const {\n      platform,\n      activePanel: _1,\n      splitCol,\n      configProvider,\n      history,\n      id,\n      nav,\n      onTransition,\n      onSwipeBack,\n      onSwipeBackStart,\n      onSwipeBackCancel,\n      window,\n      document,\n      scroll,\n      isBackCheck,\n      className,\n      ...restProps\n    } = this.props;\n    const {\n      prevPanel,\n      nextPanel,\n      activePanel,\n      isBack,\n      animated,\n      swipeBackPrevPanel,\n      swipeBackNextPanel,\n      swipeBackResult,\n      swipingBack,\n    } = this.state;\n\n    const panels = this.panels\n      .filter((panel) => {\n        const panelId = getNavId(panel.props, warn);\n\n        return (\n          (panelId !== undefined && this.state.visiblePanels.includes(panelId)) ||\n          panelId === swipeBackPrevPanel ||\n          panelId === swipeBackNextPanel\n        );\n      })\n      .sort((panel) => {\n        const panelId = getNavId(panel.props, warn);\n        const isPrevPanel = panelId === prevPanel || panelId === swipeBackPrevPanel;\n        const isNextPanel = panelId === nextPanel || panelId === swipeBackNextPanel;\n\n        if (isNextPanel) {\n          return swipingBack || this.state.isBack ? -1 : 1;\n        }\n\n        if (isPrevPanel) {\n          return swipingBack || this.state.isBack ? 1 : -1;\n        }\n\n        return 0;\n      });\n\n    const disableAnimation = this.shouldDisableTransitionMotion();\n    const iOSSwipeBackSimulationEnabled =\n      !disableAnimation && platform === 'ios' && configProvider?.isWebView && Boolean(onSwipeBack);\n\n    return (\n      <NavViewIdContext.Provider value={id || nav}>\n        <Touch\n          Component=\"section\"\n          {...restProps}\n          className={classNames(\n            styles['View'],\n            platform === 'ios' && classNames(styles['View--ios'], 'vkuiInternalView--ios'),\n            !disableAnimation && this.state.animated && styles['View--animated'],\n            !disableAnimation && this.state.swipingBack && styles['View--swiping-back'],\n            disableAnimation && styles['View--no-motion'],\n            className,\n          )}\n          onMoveX={\n            iOSSwipeBackSimulationEnabled\n              ? this.handleTouchMoveXForIOSSwipeBackSimulation\n              : platform === 'ios'\n              ? this.handleTouchMoveXForNativeIOSSwipeBackOrSwipeNext\n              : undefined\n          }\n          onEnd={\n            iOSSwipeBackSimulationEnabled ? this.handleTouchEndForIOSSwipeBackSimulation : undefined\n          }\n        >\n          <div className={styles['View__panels']}>\n            {panels.map((panel: React.ReactElement) => {\n              const panelId = getNavId(panel.props, warn);\n              const isPrev = panelId === prevPanel || panelId === swipeBackPrevPanel;\n              const compensateScroll =\n                isPrev || panelId === swipeBackNextPanel || (panelId === nextPanel && isBack);\n              const isTransitionTarget = animated && panelId === (isBack ? prevPanel : nextPanel);\n              const scrollList = (panelId && this.scrolls[panelId]) || [];\n              const scroll = scrollList[scrollList.length - 1] || 0;\n\n              return (\n                <div\n                  className={classNames(\n                    styles['View__panel'],\n                    panelId === activePanel && styles['View__panel--active'],\n                    panelId === prevPanel && styles['View__panel--prev'],\n                    panelId === nextPanel && styles['View__panel--next'],\n                    panelId === swipeBackPrevPanel && styles['View__panel--swipe-back-prev'],\n                    panelId === swipeBackNextPanel && styles['View__panel--swipe-back-next'],\n                    swipeBackResult === 'success' && styles['View__panel--swipe-back-success'],\n                    swipeBackResult === 'fail' && styles['View__panel--swipe-back-failed'],\n                  )}\n                  onAnimationEnd={isTransitionTarget ? this.transitionEndHandler : undefined}\n                  ref={(el) => panelId !== undefined && (this.panelNodes[panelId] = el)}\n                  style={this.calcPanelSwipeStyles(panelId)}\n                  key={panelId}\n                >\n                  <div\n                    className={styles['View__panel-in']}\n                    style={{ marginTop: compensateScroll ? -scroll : undefined }}\n                  >\n                    <NavTransitionDirectionProvider isBack={swipingBack || isBack}>\n                      <NavTransitionProvider\n                        entering={panelId === nextPanel || panelId === swipeBackNextPanel}\n                      >\n                        {panel}\n                      </NavTransitionProvider>\n                    </NavTransitionDirectionProvider>\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        </Touch>\n      </NavViewIdContext.Provider>\n    );\n  }\n}\n\nexport const ViewInfinite = withContext(\n  withContext(\n    withContext(\n      withPlatform(withDOM<ViewInfiniteProps>(ViewInfiniteComponent)),\n      SplitColContext,\n      'splitCol',\n    ),\n    ConfigProviderContext,\n    'configProvider',\n  ),\n  ScrollContext,\n  'scroll',\n);\n"],"names":["ViewInfinite","scrollsCache","warn","warnOnce","React","ViewInfiniteComponent","Component","document","props","window","panels","Children","toArray","children","componentWillUnmount","id","getNavId","scrolls","animationFinishTimeout","clearTimeout","componentDidUpdate","prevProps","prevState","activePanel","swipingBack","browserSwipe","isBack","isBackCheck","from","to","firstLayerId","map","panel","find","blurActiveElement","prevScrolls","scroll","getScroll","y","shouldDisableTransitionMotion","flushTransition","setState","visiblePanels","prevPanel","nextPanel","animated","animationEvent","supported","setTimeout","transitionEndHandler","platform","state","swipeBackNextPanel","swipeBackPrevPanel","scrollPosition","undefined","prevPanelScrolls","slice","newPanelScrolls","pop","swipeBackResult","swipeBackStartX","swipeBackShift","scrollTo","onTransition","waitTransitionFinish","pickPanel","swipingBackTransitionEndHandler","configProvider","transitionMotionEnabled","splitCol","animate","elem","eventHandler","transitionEvent","name","removeEventListener","addEventListener","transitionFinishTimeout","activeElement","blur","panelNodes","onSwipeBackSuccess","onSwipeBack","onSwipeBackCancel","calcPanelSwipeStyles","panelId","canUseDOM","isPrev","isNext","prevPanelTranslate","nextPanelTranslate","innerWidth","prevPanelShadow","boxShadow","transform","WebkitTransform","render","_1","history","nav","onSwipeBackStart","className","restProps","filter","includes","sort","isPrevPanel","isNextPanel","disableAnimation","iOSSwipeBackSimulationEnabled","isWebView","Boolean","NavViewIdContext","Provider","value","Touch","classNames","onMoveX","handleTouchMoveXForIOSSwipeBackSimulation","handleTouchMoveXForNativeIOSSwipeBackOrSwipeNext","onEnd","handleTouchEndForIOSSwipeBackSimulation","div","compensateScroll","isTransitionTarget","scrollList","length","onAnimationEnd","ref","el","style","key","marginTop","NavTransitionDirectionProvider","NavTransitionProvider","entering","constructor","swipeBackPrevented","e","animationName","propertyName","target","event","swipeBackTriggered","viewportStartEdgeTouched","viewportEndEdgeTouched","getSwipeBackPredicates","startX","shiftX","swipeBackExcluded","swipedToOpposite","hasHorizontalScrollableElementWithScrolledToLeft","originalEvent","payload","speed","duration","defaultProps","withContext","withPlatform","withDOM","SplitColContext","ConfigProviderContext","ScrollContext"],"mappings":"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"}