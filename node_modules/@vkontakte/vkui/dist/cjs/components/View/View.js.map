{"version":3,"sources":["../../../../src/components/View/View.tsx"],"sourcesContent":["import * as React from 'react';\nimport { classNames, noop } from '@vkontakte/vkjs';\nimport { usePlatform } from '../../hooks/usePlatform';\nimport { usePrevious } from '../../hooks/usePrevious';\nimport { useTimeout } from '../../hooks/useTimeout';\nimport { useWaitTransitionFinish } from '../../hooks/useWaitTransitionFinish';\nimport { blurActiveElement, canUseDOM, useDOM } from '../../lib/dom';\nimport { getNavId, NavIdProps } from '../../lib/getNavId';\nimport { animationEvent } from '../../lib/supportEvents';\nimport { useIsomorphicLayoutEffect } from '../../lib/useIsomorphicLayoutEffect';\nimport { warnOnce } from '../../lib/warnOnce';\nimport { HTMLAttributesWithRootRef } from '../../types';\nimport { useScroll } from '../AppRoot/ScrollContext';\nimport { useConfigProvider } from '../ConfigProvider/ConfigProviderContext';\nimport { NavViewIdContext } from '../NavIdContext/NavIdContext';\nimport { NavTransitionProvider } from '../NavTransitionContext/NavTransitionContext';\nimport { NavTransitionDirectionProvider } from '../NavTransitionDirectionContext/NavTransitionDirectionContext';\nimport { useSplitCol } from '../SplitCol/SplitColContext';\nimport { Touch, TouchEvent } from '../Touch/Touch';\nimport {\n  getSwipeBackPredicates,\n  hasHorizontalScrollableElementWithScrolledToLeft,\n  swipeBackExcluded,\n} from './utils';\nimport styles from './View.module.css';\n\ninterface Scrolls {\n  [index: string]: number | undefined;\n}\n\ninterface ViewsScrolls {\n  [index: string]: Scrolls;\n}\n\nexport let scrollsCache: ViewsScrolls = {};\n\nexport interface ViewProps extends HTMLAttributesWithRootRef<HTMLElement>, NavIdProps {\n  activePanel: string;\n  onTransition?(params: { isBack: boolean; from: string; to: string }): void;\n  /**\n   * callback свайпа назад\n   */\n  onSwipeBack?(): void;\n  /**\n   * callback начала анимации свайпа назад.\n   *\n   * Чтобы остановить свайп назад, возвращайте `\"prevent\"`.\n   */\n  onSwipeBackStart?(activePanel: string | null): void | 'prevent';\n  /**\n   * callback завершения анимации отмененного пользователем свайпа\n   */\n  onSwipeBackCancel?(): void;\n  history?: string[];\n\n  children: React.ReactElement | Iterable<React.ReactElement>;\n}\n\nconst warn = warnOnce('View');\n\n/**\n * @see https://vkcom.github.io/VKUI/#/View\n */\nexport const View = ({\n  activePanel: activePanelProp,\n  history,\n  nav,\n  onTransition,\n  onSwipeBack,\n  onSwipeBackStart,\n  onSwipeBackCancel: onSwipeBackCancelProp,\n  children,\n  className,\n  ...restProps\n}: ViewProps) => {\n  const id = getNavId({ nav, id: restProps.id });\n  const scrolls = React.useRef(scrollsCache[id as string] || {});\n  const afterTransition = React.useRef(noop);\n\n  React.useEffect(() => () => {\n    if (id) {\n      scrollsCache[id] = scrolls.current;\n    }\n  });\n\n  const panelNodes = React.useRef<{ [id: string]: HTMLDivElement | null }>({});\n\n  const { window, document } = useDOM();\n  const scroll = useScroll();\n  const configProvider = useConfigProvider();\n  const splitCol = useSplitCol();\n  const platform = usePlatform();\n\n  const [animated, setAnimated] = React.useState(false);\n\n  const [visiblePanels, setVisiblePanels] = React.useState([activePanelProp]);\n  const [activePanel, setActivePanel] = React.useState<string | null>(activePanelProp);\n  const [isBack, setIsBack] = React.useState<boolean | undefined>(undefined);\n  const [prevPanel, setPrevPanel] = React.useState<string | null>(null);\n  const [nextPanel, setNextPanel] = React.useState<string | null>(null);\n\n  const swipeBackPrevented = React.useRef<boolean>(false);\n  const [swipingBack, setSwipingBack] = React.useState<boolean | undefined>(undefined);\n  const [swipeBackStartX, setSwipeBackStartX] = React.useState<number>(0);\n  const [swipeBackShift, setSwipeBackShift] = React.useState<number>(0);\n  const [swipeBackNextPanel, setSwipeBackNextPanel] = React.useState<string | null>(null);\n  const [swipeBackPrevPanel, setSwipeBackPrevPanel] = React.useState<string | null>(null);\n  const [swipeBackResult, setSwipeBackResult] = React.useState<'success' | 'fail' | null>(null);\n\n  const [browserSwipe, setBrowserSwipe] = React.useState(false);\n\n  const prevActivePanel = usePrevious(activePanelProp);\n  const prevSwipingBack = usePrevious(swipingBack);\n  const prevBrowserSwipe = usePrevious(browserSwipe);\n  const prevSwipeBackResult = usePrevious(swipeBackResult);\n  const prevSwipeBackShift = usePrevious(swipeBackShift);\n  const prevSwipeBackPrevPanel = usePrevious(swipeBackPrevPanel);\n  const prevOnTransition = usePrevious(onTransition);\n\n  const panels = (React.Children.toArray(children) as React.ReactElement[]).filter(\n    (panel: React.ReactElement) => {\n      const panelId = getNavId(panel.props, warn);\n\n      return (\n        (panelId !== undefined && visiblePanels.includes(panelId)) ||\n        panelId === swipeBackPrevPanel ||\n        panelId === swipeBackNextPanel\n      );\n    },\n  );\n\n  const disableAnimation =\n    !configProvider.transitionMotionEnabled || !splitCol.animate || platform === 'vkcom';\n  const iOSSwipeBackSimulationEnabled =\n    !disableAnimation && platform === 'ios' && configProvider.isWebView && Boolean(onSwipeBack);\n\n  const pickPanel = (id: string | null) => {\n    if (id === null) {\n      return null;\n    }\n    return panelNodes.current[id];\n  };\n\n  const flushTransition = React.useCallback(\n    (prevPanel: string, isBackTransition: boolean) => {\n      if (isBackTransition) {\n        scrolls.current[prevPanel] = 0;\n      }\n      setPrevPanel(null);\n      setNextPanel(null);\n      setVisiblePanels([activePanelProp]);\n      setActivePanel(activePanelProp);\n      setAnimated(false);\n      setIsBack(isBackTransition);\n\n      afterTransition.current = () => {\n        scroll?.scrollTo(0, isBackTransition ? scrolls.current[activePanelProp] : 0);\n        onTransition &&\n          onTransition({\n            isBack: isBackTransition,\n            from: prevPanel,\n            to: activePanelProp,\n          });\n      };\n    },\n    [activePanelProp, onTransition, scroll],\n  );\n\n  useIsomorphicLayoutEffect(() => {\n    afterTransition.current();\n    afterTransition.current = noop;\n  }, [afterTransition.current]);\n\n  const transitionEndHandler = React.useCallback(\n    (e?: React.AnimationEvent): void => {\n      if (\n        (!e ||\n          [\n            styles['animation-ios-next-forward'],\n            styles['animation-ios-prev-back'],\n            styles['animation-view-next-forward'],\n            styles['animation-view-prev-back'],\n          ].includes(e.animationName)) &&\n        prevPanel !== null\n      ) {\n        flushTransition(prevPanel, Boolean(isBack));\n      }\n    },\n    [flushTransition, isBack, prevPanel],\n  );\n\n  const { waitTransitionFinish } = useWaitTransitionFinish();\n  const animationFinishTimeout = useTimeout(transitionEndHandler, platform === 'ios' ? 600 : 300);\n\n  const onSwipeBackSuccess = React.useCallback(() => {\n    onSwipeBack && onSwipeBack();\n  }, [onSwipeBack]);\n\n  const onSwipeBackCancel = React.useCallback(() => {\n    onSwipeBackCancelProp && onSwipeBackCancelProp();\n    setSwipeBackPrevPanel(null);\n    setSwipeBackNextPanel(null);\n    setSwipingBack(false);\n    setSwipeBackResult(null);\n    setSwipeBackStartX(0);\n    setSwipeBackShift(0);\n  }, [onSwipeBackCancelProp]);\n\n  const swipingBackTransitionEndHandler = React.useCallback(\n    (e?: TransitionEvent): void => {\n      // indexOf because of vendor prefixes in old browsers\n      if (\n        !e ||\n        (e?.propertyName.includes('transform') && e?.target === pickPanel(swipeBackNextPanel))\n      ) {\n        switch (swipeBackResult) {\n          case 'fail':\n            onSwipeBackCancel();\n            break;\n          case 'success':\n            onSwipeBackSuccess();\n        }\n      }\n    },\n    [onSwipeBackCancel, onSwipeBackSuccess, swipeBackNextPanel, swipeBackResult],\n  );\n\n  const handleTouchMoveXForNativeIOSSwipeBackOrSwipeNext = (event: TouchEvent) => {\n    if (browserSwipe) {\n      return;\n    }\n    const { swipeBackTriggered, viewportStartEdgeTouched, viewportEndEdgeTouched } =\n      getSwipeBackPredicates(event.startX, event.shiftX, window!.innerWidth);\n\n    if ((viewportStartEdgeTouched || viewportEndEdgeTouched) && swipeBackTriggered) {\n      setBrowserSwipe(true);\n    }\n  };\n\n  const handleTouchMoveXForIOSSwipeBackSimulation = (event: TouchEvent) => {\n    if (swipeBackPrevented.current || swipeBackExcluded(event)) {\n      return;\n    }\n\n    const { swipedToOpposite, swipeBackTriggered, viewportStartEdgeTouched } =\n      getSwipeBackPredicates(event.startX, event.shiftX, window!.innerWidth);\n\n    if (animated && swipeBackTriggered) {\n      return;\n    }\n\n    if (!swipingBack && history && history.length > 1) {\n      if (swipedToOpposite) {\n        swipeBackPrevented.current = true;\n        return;\n      }\n\n      if (!swipeBackTriggered) {\n        return;\n      }\n\n      if (\n        !viewportStartEdgeTouched &&\n        hasHorizontalScrollableElementWithScrolledToLeft(event.originalEvent.target as HTMLElement)\n      ) {\n        swipeBackPrevented.current = true;\n        return;\n      }\n      // Начался свайп назад\n      if (onSwipeBackStart) {\n        const payload = onSwipeBackStart(activePanel);\n        if (payload === 'prevent') {\n          swipeBackPrevented.current = true;\n          return;\n        }\n      }\n\n      if (activePanel !== null) {\n        // Note: вызываем закрытие клавиатуры. В iOS это нативное поведение при свайпе.\n        blurActiveElement(document);\n        scrolls.current[activePanel] = scroll?.getScroll().y;\n      }\n\n      setSwipingBack(true);\n      setSwipeBackStartX(event.startX);\n      setSwipeBackPrevPanel(activePanel);\n      setSwipeBackNextPanel(history.slice(-2)[0]);\n    }\n\n    if (swipingBack) {\n      if (event.shiftX < 0) {\n        setSwipeBackShift(0);\n      } else if (event.shiftX > window!.innerWidth - swipeBackStartX) {\n        setSwipeBackShift(window!.innerWidth);\n      } else {\n        setSwipeBackShift(event.shiftX);\n      }\n    }\n  };\n\n  const handleTouchEndForIOSSwipeBackSimulation = (event: TouchEvent) => {\n    swipeBackPrevented.current = false;\n\n    if (swipingBack) {\n      const speed = (swipeBackShift / event.duration) * 1000;\n      if (swipeBackShift === 0) {\n        onSwipeBackCancel();\n      } else if (swipeBackShift >= (window!.innerWidth ?? 0)) {\n        onSwipeBackSuccess();\n      } else if (speed > 250 || swipeBackShift >= window!.innerWidth / 2) {\n        setSwipeBackResult('success');\n      } else {\n        setSwipeBackResult('fail');\n      }\n    }\n  };\n\n  const calcPanelSwipeStyles = (panelId: string | undefined): React.CSSProperties => {\n    if (!canUseDOM || !window) {\n      return {};\n    }\n\n    const isPrev = panelId === swipeBackPrevPanel;\n    const isNext = panelId === swipeBackNextPanel;\n\n    if ((!isPrev && !isNext) || swipeBackResult) {\n      return {};\n    }\n\n    let prevPanelTranslate = `${swipeBackShift}px`;\n    let nextPanelTranslate = `${-50 + (swipeBackShift * 100) / window.innerWidth / 2}%`;\n\n    if (isNext) {\n      return {\n        transform: `translate3d(${nextPanelTranslate}, 0, 0)`,\n        WebkitTransform: `translate3d(${nextPanelTranslate}, 0, 0)`,\n      };\n    }\n    if (isPrev) {\n      return {\n        transform: `translate3d(${prevPanelTranslate}, 0, 0)`,\n        WebkitTransform: `translate3d(${prevPanelTranslate}, 0, 0)`,\n      };\n    }\n\n    return {};\n  };\n\n  const calcPanelSwipeBackOverlayStyles = (panelId?: string): React.CSSProperties => {\n    if (!canUseDOM || !window) {\n      return {};\n    }\n\n    const isNext = panelId === swipeBackNextPanel;\n    if (!isNext) {\n      return {};\n    }\n\n    const calculatedOpacity = 1 - swipeBackShift / window.innerWidth;\n    const opacityOnSwipeEnd =\n      swipeBackResult === 'success' ? 0 : swipeBackResult === 'fail' ? 1 : null;\n\n    return {\n      display: 'block',\n      opacity: opacityOnSwipeEnd === null ? calculatedOpacity : opacityOnSwipeEnd,\n    };\n  };\n\n  React.useEffect(() => {\n    // Нужен переход\n    if (\n      prevActivePanel &&\n      prevActivePanel !== activePanelProp &&\n      !prevSwipingBack &&\n      !prevBrowserSwipe\n    ) {\n      const firstLayerId = (React.Children.toArray(children) as React.ReactElement[])\n        .map((panel) => getNavId(panel.props, warn))\n        .find((id) => id === prevActivePanel || id === activePanelProp);\n\n      const isBackTransition = firstLayerId === activePanelProp;\n      scrolls.current[prevActivePanel] = scroll?.getScroll().y;\n\n      if (disableAnimation) {\n        flushTransition(prevActivePanel, isBackTransition);\n      } else {\n        blurActiveElement(document);\n\n        setVisiblePanels([prevActivePanel, activePanelProp]);\n        setPrevPanel(prevActivePanel);\n        setNextPanel(activePanelProp);\n        setActivePanel(null);\n        setAnimated(true);\n        setIsBack(isBackTransition);\n\n        // Фолбек анимации перехода\n        if (!animationEvent.supported) {\n          animationFinishTimeout.set();\n        }\n      }\n    }\n\n    // Закончилась анимация свайпа назад\n    if (prevActivePanel && prevActivePanel !== activePanelProp && prevSwipingBack) {\n      const nextPanel = activePanelProp;\n      const prevPanel = prevActivePanel;\n      if (prevSwipeBackPrevPanel) {\n        scrolls.current[prevSwipeBackPrevPanel] = 0;\n      }\n\n      setSwipeBackPrevPanel(null);\n      setSwipeBackNextPanel(null);\n      setSwipingBack(false);\n      setSwipeBackResult(null);\n      setSwipeBackStartX(0);\n      setSwipeBackShift(0);\n      setActivePanel(nextPanel);\n      setVisiblePanels([nextPanel]);\n      setIsBack(true);\n\n      afterTransition.current = () => {\n        if (nextPanel !== null) {\n          scroll?.scrollTo(0, scrolls.current[nextPanel]);\n        }\n        prevOnTransition &&\n          prevOnTransition({\n            isBack: true,\n            from: prevPanel,\n            to: nextPanel,\n          });\n      };\n    }\n\n    // Началась анимация завершения свайпа назад.\n    if (!prevSwipeBackResult && swipeBackResult) {\n      waitTransitionFinish(\n        pickPanel(swipeBackNextPanel),\n        swipingBackTransitionEndHandler,\n        platform === 'ios' ? 600 : 300,\n      );\n    }\n\n    // Закончился Safari свайп\n    if (prevActivePanel !== activePanelProp && browserSwipe) {\n      setBrowserSwipe(false);\n      setNextPanel(null);\n      setPrevPanel(null);\n      setAnimated(false);\n      setVisiblePanels([activePanelProp]);\n      setActivePanel(activePanelProp);\n    }\n  }, [\n    activePanelProp,\n    activePanel,\n    animationFinishTimeout,\n    browserSwipe,\n    children,\n    disableAnimation,\n    document,\n    flushTransition,\n    platform,\n    prevActivePanel,\n    prevBrowserSwipe,\n    prevOnTransition,\n    prevSwipeBackPrevPanel,\n    prevSwipeBackResult,\n    prevSwipingBack,\n    scroll,\n    swipeBackNextPanel,\n    swipeBackResult,\n    swipingBackTransitionEndHandler,\n    waitTransitionFinish,\n  ]);\n\n  React.useEffect(\n    function restoreScrollPositionWhenSwipeBackIsCancelled() {\n      // Если свайп назад отменился (когда пользователь недостаточно сильно свайпнул)\n      const swipeBackCancelledInTheMiddleOfAction =\n        prevSwipeBackResult === 'fail' && !swipeBackResult;\n      const swipeBackCancelledByMovingPanelBackToInitialPoint =\n        prevSwipingBack && !swipingBack && prevSwipeBackShift === 0;\n\n      if (\n        (swipeBackCancelledInTheMiddleOfAction ||\n          swipeBackCancelledByMovingPanelBackToInitialPoint) &&\n        activePanel !== null\n      ) {\n        scroll?.scrollTo(0, scrolls.current[activePanel]);\n      }\n    },\n    [\n      prevSwipeBackResult,\n      swipeBackResult,\n      prevSwipingBack,\n      swipingBack,\n      prevSwipeBackShift,\n      activePanel,\n      scroll,\n    ],\n  );\n\n  return (\n    <NavViewIdContext.Provider value={id}>\n      <Touch\n        Component=\"section\"\n        {...restProps}\n        className={classNames(\n          styles['View'],\n          platform === 'ios' && classNames(styles['View--ios'], 'vkuiInternalView--ios'),\n          !disableAnimation && animated && styles['View--animated'],\n          !disableAnimation && swipingBack && styles['View--swiping-back'],\n          disableAnimation && styles['View--no-motion'],\n          className,\n        )}\n        onMoveX={\n          iOSSwipeBackSimulationEnabled\n            ? handleTouchMoveXForIOSSwipeBackSimulation\n            : platform === 'ios'\n            ? handleTouchMoveXForNativeIOSSwipeBackOrSwipeNext\n            : undefined\n        }\n        onEnd={iOSSwipeBackSimulationEnabled ? handleTouchEndForIOSSwipeBackSimulation : undefined}\n      >\n        <div className={styles['View__panels']}>\n          {panels.map((panel: React.ReactElement) => {\n            const panelId = getNavId(panel.props, warn);\n            const isPrev = panelId === prevPanel || panelId === swipeBackPrevPanel;\n            const isTransitionTarget = animated && panelId === (isBack ? prevPanel : nextPanel);\n            const compensateScroll =\n              isPrev || panelId === swipeBackNextPanel || (panelId === nextPanel && isBack);\n\n            return (\n              <div\n                className={classNames(\n                  styles['View__panel'],\n                  panelId === activePanel && styles['View__panel--active'],\n                  panelId === prevPanel && styles['View__panel--prev'],\n                  panelId === nextPanel && styles['View__panel--next'],\n                  panelId === swipeBackPrevPanel && styles['View__panel--swipe-back-prev'],\n                  panelId === swipeBackNextPanel && styles['View__panel--swipe-back-next'],\n                  swipeBackResult === 'success' && styles['View__panel--swipe-back-success'],\n                  swipeBackResult === 'fail' && styles['View__panel--swipe-back-failed'],\n                )}\n                onAnimationEnd={isTransitionTarget ? transitionEndHandler : undefined}\n                ref={(el) => panelId !== undefined && (panelNodes.current[panelId] = el)}\n                style={calcPanelSwipeStyles(panelId)}\n                key={panelId}\n              >\n                {platform === 'ios' && (\n                  <div\n                    className={styles['View__panel-overlay']}\n                    style={calcPanelSwipeBackOverlayStyles(panelId)}\n                  />\n                )}\n                <div\n                  className={styles['View__panel-in']}\n                  style={{\n                    marginTop: compensateScroll ? -(scrolls.current[panelId] ?? 0) : undefined,\n                  }}\n                >\n                  <NavTransitionDirectionProvider isBack={swipingBack || isBack}>\n                    <NavTransitionProvider\n                      entering={panelId === nextPanel || panelId === swipeBackNextPanel}\n                    >\n                      {panel}\n                    </NavTransitionProvider>\n                  </NavTransitionDirectionProvider>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      </Touch>\n    </NavViewIdContext.Provider>\n  );\n};\n"],"names":["View","scrollsCache","warn","warnOnce","activePanel","activePanelProp","history","nav","onTransition","onSwipeBack","onSwipeBackStart","onSwipeBackCancel","onSwipeBackCancelProp","children","className","restProps","id","getNavId","scrolls","React","useRef","afterTransition","noop","useEffect","current","panelNodes","window","document","useDOM","scroll","useScroll","configProvider","useConfigProvider","splitCol","useSplitCol","platform","usePlatform","animated","setAnimated","useState","visiblePanels","setVisiblePanels","setActivePanel","isBack","setIsBack","undefined","prevPanel","setPrevPanel","nextPanel","setNextPanel","swipeBackPrevented","swipingBack","setSwipingBack","swipeBackStartX","setSwipeBackStartX","swipeBackShift","setSwipeBackShift","swipeBackNextPanel","setSwipeBackNextPanel","swipeBackPrevPanel","setSwipeBackPrevPanel","swipeBackResult","setSwipeBackResult","browserSwipe","setBrowserSwipe","prevActivePanel","usePrevious","prevSwipingBack","prevBrowserSwipe","prevSwipeBackResult","prevSwipeBackShift","prevSwipeBackPrevPanel","prevOnTransition","panels","Children","toArray","filter","panel","panelId","props","includes","disableAnimation","transitionMotionEnabled","animate","iOSSwipeBackSimulationEnabled","isWebView","Boolean","pickPanel","flushTransition","useCallback","isBackTransition","scrollTo","from","to","useIsomorphicLayoutEffect","transitionEndHandler","e","animationName","waitTransitionFinish","useWaitTransitionFinish","animationFinishTimeout","useTimeout","onSwipeBackSuccess","swipingBackTransitionEndHandler","propertyName","target","handleTouchMoveXForNativeIOSSwipeBackOrSwipeNext","event","swipeBackTriggered","viewportStartEdgeTouched","viewportEndEdgeTouched","getSwipeBackPredicates","startX","shiftX","innerWidth","handleTouchMoveXForIOSSwipeBackSimulation","swipeBackExcluded","swipedToOpposite","length","hasHorizontalScrollableElementWithScrolledToLeft","originalEvent","payload","blurActiveElement","getScroll","y","slice","handleTouchEndForIOSSwipeBackSimulation","speed","duration","calcPanelSwipeStyles","canUseDOM","isPrev","isNext","prevPanelTranslate","nextPanelTranslate","transform","WebkitTransform","calcPanelSwipeBackOverlayStyles","calculatedOpacity","opacityOnSwipeEnd","display","opacity","firstLayerId","map","find","animationEvent","supported","set","restoreScrollPositionWhenSwipeBackIsCancelled","swipeBackCancelledInTheMiddleOfAction","swipeBackCancelledByMovingPanelBackToInitialPoint","NavViewIdContext","Provider","value","Touch","Component","classNames","onMoveX","onEnd","div","isTransitionTarget","compensateScroll","onAnimationEnd","ref","el","style","key","marginTop","NavTransitionDirectionProvider","NavTransitionProvider","entering"],"mappings":"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"}