import * as React from 'react';
import { HasComponent, HasRootRef } from '../../types';
export interface FormFieldProps {
    status?: 'default' | 'error' | 'valid';
    /**
     * Добавляет иконку слева.
     *
     * Рекомендации:
     *
     * - Используйте следующие размеры иконок `12` | `16` | `20` | `24` | `28`.
     * - Используйте [IconButton](https://vkcom.github.io/VKUI/#/IconButton), если вам нужна кликабельная иконка.
     */
    before?: React.ReactNode;
    /**
     * Добавляет иконку справа.
     *
     * Рекомендации:
     *
     * - Используйте следующие размеры иконок `12` | `16` | `20` | `24` | `28`.
     * - Используйте [IconButton](https://vkcom.github.io/VKUI/#/IconButton), если вам нужна кликабельная иконка.
     */
    after?: React.ReactNode;
    mode?: 'default' | 'plain';
}
interface FormFieldOwnProps extends React.AllHTMLAttributes<HTMLElement>, HasRootRef<HTMLElement>, HasComponent, FormFieldProps {
    disabled?: boolean;
}
/**
 * @see https://vkcom.github.io/VKUI/#/FormField
 */
export declare const FormField: ({ Component, status, children, getRootRef, before, after, disabled, mode, className, ...restProps }: FormFieldOwnProps) => React.JSX.Element;
export {};
//# sourceMappingURL=FormField.d.ts.map