{"version":3,"sources":["../../../../src/components/HorizontalCell/HorizontalCell.tsx"],"sourcesContent":["import * as React from 'react';\nimport { classNames, hasReactNode } from '@vkontakte/vkjs';\nimport { HasRef, HasRootRef, HTMLAttributesWithRootRef } from '../../types';\nimport { Avatar } from '../Avatar/Avatar';\nimport { Tappable, type TappableProps } from '../Tappable/Tappable';\nimport { Caption } from '../Typography/Caption/Caption';\nimport { Footnote } from '../Typography/Footnote/Footnote';\nimport { Subhead } from '../Typography/Subhead/Subhead';\nimport styles from './HorizontalCell.module.css';\n\nconst stylesSize = {\n  s: styles['HorizontalCell--size-s'],\n  m: styles['HorizontalCell--size-m'],\n  l: styles['HorizontalCell--size-l'],\n};\n\ninterface CellTypographyProps extends HTMLAttributesWithRootRef<HTMLDivElement> {\n  size: HorizontalCellProps['size'];\n}\n\nconst CellTypography = ({ size, children, ...restProps }: CellTypographyProps) => {\n  return size === 's' ? (\n    <Caption {...restProps}>{children}</Caption>\n  ) : (\n    <Subhead {...restProps}>{children}</Subhead>\n  );\n};\n\nexport interface HorizontalCellProps\n  extends Omit<TappableProps, 'size' | 'getRootRef'>,\n    HasRootRef<HTMLDivElement>,\n    HasRef<HTMLDivElement> {\n  size?: 's' | 'm' | 'l';\n  /**\n   * Заголовок\n   */\n  header?: React.ReactNode;\n  /**\n   * Дополнительная строка текста под `children`.\n   */\n  subtitle?: React.ReactNode;\n  /**\n   * Дополнительная строка текста под `children` и `subtitle`.\n   */\n  extraSubtitle?: React.ReactNode;\n}\n\n/**\n * @see https://vkcom.github.io/VKUI/#/HorizontalCell\n */\nexport const HorizontalCell = ({\n  className,\n  header,\n  style,\n  subtitle,\n  size = 's',\n  children = <Avatar size={56} />,\n  getRootRef,\n  getRef,\n  extraSubtitle,\n  ...restProps\n}: HorizontalCellProps) => {\n  return (\n    <div\n      ref={getRootRef}\n      style={style}\n      className={classNames(styles['HorizontalCell'], stylesSize[size], className)}\n    >\n      <Tappable className={styles['HorizontalCell__body']} getRootRef={getRef} {...restProps}>\n        {hasReactNode(children) && (\n          <div className={styles['HorizontalCell__image']}>{children}</div>\n        )}\n        {(header || subtitle || extraSubtitle) && (\n          <div className={styles['HorizontalCell__content']}>\n            {hasReactNode(header) && <CellTypography size={size}>{header}</CellTypography>}\n            {hasReactNode(subtitle) && (\n              <Footnote className={styles['HorizontalCell__subtitle']}>{subtitle}</Footnote>\n            )}\n            {hasReactNode(extraSubtitle) && (\n              <Footnote className={styles['HorizontalCell__subtitle']}>{extraSubtitle}</Footnote>\n            )}\n          </div>\n        )}\n      </Tappable>\n    </div>\n  );\n};\n"],"names":["HorizontalCell","stylesSize","s","m","l","CellTypography","size","children","restProps","Caption","Subhead","className","header","style","subtitle","Avatar","getRootRef","getRef","extraSubtitle","div","ref","classNames","Tappable","hasReactNode","Footnote"],"mappings":";;;;+BAkDaA;;;eAAAA;;;;;;iEAlDU;sBACkB;wBAElB;0BACsB;yBACrB;0BACC;yBACD;AAGxB,MAAMC,aAAa;IACjBC,CAAC;IACDC,CAAC;IACDC,CAAC;AACH;AAMA,MAAMC,iBAAiB;QAAC,EAAEC,IAAI,EAAEC,QAAQ,EAAqC,WAAhCC;QAAnBF;QAAMC;;IAC9B,OAAOD,SAAS,oBACd,qBAACG,gBAAO,EAAKD,WAAYD,0BAEzB,qBAACG,gBAAO,EAAKF,WAAYD;AAE7B;AAwBO,MAAMP,iBAAiB;QAAC,EAC7BW,SAAS,EACTC,MAAM,EACNC,KAAK,EACLC,QAAQ,EACRR,OAAO,GAAG,EACVC,yBAAW,qBAACQ,cAAM;QAACT,MAAM;MAAM,EAC/BU,UAAU,EACVC,MAAM,EACNC,aAAa,EAEO,WADjBV;QATHG;QACAC;QACAC;QACAC;QACAR;QACAC;QACAS;QACAC;QACAC;;IAGA,qBACE,qBAACC;QACCC,KAAKJ;QACLH,OAAOA;QACPF,WAAWU,IAAAA,gBAAU,wBAA2BpB,UAAU,CAACK,KAAK,EAAEK;qBAElE,qBAACW,kBAAQ;QAACX,SAAS;QAAkCK,YAAYC;OAAYT,YAC1Ee,IAAAA,kBAAY,EAAChB,2BACZ,qBAACY;QAAIR,SAAS;OAAoCJ,WAEnD,AAACK,CAAAA,UAAUE,YAAYI,aAAY,mBAClC,qBAACC;QAAIR,SAAS;OACXY,IAAAA,kBAAY,EAACX,yBAAW,qBAACP;QAAeC,MAAMA;OAAOM,SACrDW,IAAAA,kBAAY,EAACT,2BACZ,qBAACU,kBAAQ;QAACb,SAAS;OAAuCG,WAE3DS,IAAAA,kBAAY,EAACL,gCACZ,qBAACM,kBAAQ;QAACb,SAAS;OAAuCO;AAOxE"}