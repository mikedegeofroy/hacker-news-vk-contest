{"version":3,"sources":["../../../../src/components/ChipsInputBase/helpers.ts"],"sourcesContent":["import { DEFAULT_INPUT_VALUE } from './constants';\nimport type { ChipOption, ChipOptionValue, NavigateTo } from './types';\n\n/**\n * @private\n */\nexport const isValueLikeChipOptionObject = <O extends ChipOption>(v: O | ChipOptionValue): v is O =>\n  typeof v === 'object' && 'value' in v;\n\n/**\n * @private\n */\nexport const isInputValueEmpty = (input: HTMLInputElement | null) =>\n  input ? input.value === DEFAULT_INPUT_VALUE : true;\n\n/**\n * @private\n */\nexport const getChipOptionIndexByValueProp = <O extends ChipOption>(\n  optionProp: O | ChipOptionValue,\n  valueProp: O[],\n) => {\n  const value = isValueLikeChipOptionObject(optionProp) ? optionProp.value : optionProp;\n  return valueProp.findIndex((option) => option.value === value);\n};\n\n/**\n * @private\n */\nexport const getChipOptionIndexByHTMLElement = (el: HTMLElement | null) => {\n  const value = el && el.dataset.index;\n  return typeof value === 'string' ? Number(value) : -1;\n};\n\n/**\n * @private\n */\nexport const getChipOptionValueByHTMLElement = (el: HTMLElement | null) => {\n  const value = el && el.dataset.value;\n  return typeof value === 'string' ? value : -1;\n};\n\n/**\n * @private\n */\nexport const getNextChipOptionIndexByNavigateToProp = (\n  currentIndex: number,\n  navigateTo: NavigateTo,\n  length: number,\n) => {\n  const FIRST_INDEX = 0;\n  const LAST_INDEX = length - 1;\n  switch (navigateTo) {\n    case 'first':\n      return FIRST_INDEX;\n    case 'prev':\n      const prevIndex = currentIndex - 1;\n      return prevIndex < 0 ? LAST_INDEX : prevIndex;\n    case 'next':\n      const nextIndex = currentIndex + 1;\n      return nextIndex > LAST_INDEX ? 0 : nextIndex;\n    case 'last':\n      return LAST_INDEX;\n    default:\n      /* istanbul ignore next */\n      return -1;\n  }\n};\n"],"names":["getChipOptionIndexByHTMLElement","getChipOptionIndexByValueProp","getChipOptionValueByHTMLElement","getNextChipOptionIndexByNavigateToProp","isInputValueEmpty","isValueLikeChipOptionObject","v","input","value","DEFAULT_INPUT_VALUE","optionProp","valueProp","findIndex","option","el","dataset","index","Number","currentIndex","navigateTo","length","FIRST_INDEX","LAST_INDEX","prevIndex","nextIndex"],"mappings":";;;;;;;;;;;IA6BaA,+BAA+B;eAA/BA;;IAXAC,6BAA6B;eAA7BA;;IAmBAC,+BAA+B;eAA/BA;;IAQAC,sCAAsC;eAAtCA;;IAjCAC,iBAAiB;eAAjBA;;IANAC,2BAA2B;eAA3BA;;;2BANuB;AAM7B,MAAMA,8BAA8B,CAAuBC,IAChE,OAAOA,MAAM,YAAY,WAAWA;AAK/B,MAAMF,oBAAoB,CAACG,QAChCA,QAAQA,MAAMC,KAAK,KAAKC,8BAAmB,GAAG;AAKzC,MAAMR,gCAAgC,CAC3CS,YACAC;IAEA,MAAMH,QAAQH,4BAA4BK,cAAcA,WAAWF,KAAK,GAAGE;IAC3E,OAAOC,UAAUC,SAAS,CAAC,CAACC,SAAWA,OAAOL,KAAK,KAAKA;AAC1D;AAKO,MAAMR,kCAAkC,CAACc;IAC9C,MAAMN,QAAQM,MAAMA,GAAGC,OAAO,CAACC,KAAK;IACpC,OAAO,OAAOR,UAAU,WAAWS,OAAOT,SAAS,CAAC;AACtD;AAKO,MAAMN,kCAAkC,CAACY;IAC9C,MAAMN,QAAQM,MAAMA,GAAGC,OAAO,CAACP,KAAK;IACpC,OAAO,OAAOA,UAAU,WAAWA,QAAQ,CAAC;AAC9C;AAKO,MAAML,yCAAyC,CACpDe,cACAC,YACAC;IAEA,MAAMC,cAAc;IACpB,MAAMC,aAAaF,SAAS;IAC5B,OAAQD;QACN,KAAK;YACH,OAAOE;QACT,KAAK;YACH,MAAME,YAAYL,eAAe;YACjC,OAAOK,YAAY,IAAID,aAAaC;QACtC,KAAK;YACH,MAAMC,YAAYN,eAAe;YACjC,OAAOM,YAAYF,aAAa,IAAIE;QACtC,KAAK;YACH,OAAOF;QACT;YACE,wBAAwB,GACxB,OAAO,CAAC;IACZ;AACF"}