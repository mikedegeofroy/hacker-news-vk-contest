import * as React from 'react';
import type { Placement } from '../../lib/floating';
import { HTMLAttributesWithRootRef } from '../../types';
import { TrackerOptionsProps } from '../CustomScrollView/useTrackerVisibility';
export interface CustomSelectDropdownProps extends HTMLAttributesWithRootRef<HTMLDivElement>, TrackerOptionsProps {
    targetRef: React.RefObject<HTMLElement>;
    placement?: Placement;
    scrollBoxRef?: React.Ref<HTMLDivElement>;
    fetching?: boolean;
    offsetDistance?: number;
    /**
     * Ширина раскрывающегося списка зависит от контента
     */
    autoWidth?: boolean;
    forcePortal?: boolean;
    onPlacementChange?(placement: Placement): void;
    /**
     * Отключает максимальную высоту по умолчанию
     */
    noMaxHeight?: boolean;
}
export declare const CustomSelectDropdown: ({ children, targetRef, scrollBoxRef, placement, fetching, onPlacementChange: parentOnPlacementChange, offsetDistance, autoWidth, forcePortal, autoHideScrollbar, autoHideScrollbarDelay, className, noMaxHeight, ...restProps }: CustomSelectDropdownProps) => React.JSX.Element;
//# sourceMappingURL=CustomSelectDropdown.d.ts.map