{"version":3,"sources":["../../../../src/components/MiniInfoCell/MiniInfoCell.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Icon16Chevron } from '@vkontakte/icons';\nimport { classNames, hasReactNode } from '@vkontakte/vkjs';\nimport { HTMLAttributesWithRootRef } from '../../types';\nimport { RootComponent } from '../RootComponent/RootComponent';\nimport { Tappable } from '../Tappable/Tappable';\nimport { Paragraph } from '../Typography/Paragraph/Paragraph';\nimport styles from './MiniInfoCell.module.css';\n\nconst stylesMode = {\n  add: styles['MiniInfoCell--mode-add'],\n  accent: styles['MiniInfoCell--mode-accent'],\n  more: styles['MiniInfoCell--mode-more'],\n};\n\nconst stylesTextWrap = {\n  nowrap: styles['MiniInfoCell--textWrap-nowrap'],\n  full: styles['MiniInfoCell--textWrap-full'],\n  short: styles['MiniInfoCell--textWrap-short'],\n};\n\nexport interface MiniInfoCellProps extends HTMLAttributesWithRootRef<HTMLDivElement> {\n  /**\n   * Иконка слева.<br />\n   * Рекомендуется использовать иконки размера 20.\n   */\n  before?: React.ReactNode;\n\n  /**\n   * Содержимое справа.<br />\n   * `<UsersStack size=\"s\" />` или `<Avatar size={24} />`\n   */\n  after?: React.ReactNode;\n\n  /**\n   * Тип ячейки:\n   *\n   * - `base` – базовая ячейка с серой иконкой и серым текстом.<br />\n   * В компонент можно передать `Link`, чтобы визуально сделать часть текста ссылкой.\n   * - `add` – тип ячейки, который показывает, что взаимодействие с ней должно вызывать действие добавления чего-то.\n   * - `more` – взаимодействие с такой ячейкой должно открывать какую-то подробную информацию.\n   */\n  mode?: 'base' | 'accent' | 'add' | 'more';\n\n  /**\n   * Тип отображения текста:\n   *\n   * - `nowrap` – в одну строку, текст не переносится и обрезается.\n   * - `short` – максимально отображается 3 строки, остальное обрезается.\n   * - `full` – текст отображается полностью.\n   */\n  textWrap?: 'nowrap' | 'short' | 'full';\n\n  /**\n   * Передавать `true`, если предполагается переход при клике по ячейке.\n   */\n  expandable?: boolean;\n}\n\n/**\n * @see https://vkcom.github.io/VKUI/#/MiniInfoCell\n */\nexport const MiniInfoCell = ({\n  before,\n  after,\n  children,\n  mode = 'base',\n  textWrap = 'nowrap',\n  expandable = false,\n  className,\n  ...restProps\n}: MiniInfoCellProps) => {\n  const cellClasses = classNames(\n    styles['MiniInfoCell'],\n    stylesTextWrap[textWrap],\n    mode !== 'base' && stylesMode[mode],\n    className,\n  );\n\n  const cellContent = (\n    <React.Fragment>\n      {hasReactNode(before) && <span className={styles['MiniInfoCell__before']}>{before}</span>}\n      <div className={styles['MiniInfoCell__middle']}>\n        <Paragraph\n          className={styles['MiniInfoCell__content']}\n          weight={mode === 'more' ? '2' : undefined}\n        >\n          {children}\n        </Paragraph>\n        {expandable && <Icon16Chevron />}\n      </div>\n      {hasReactNode(after) && <span className={styles['MiniInfoCell__after']}>{after}</span>}\n    </React.Fragment>\n  );\n\n  return restProps.onClick ? (\n    <Tappable Component=\"div\" role=\"button\" {...restProps} className={cellClasses}>\n      {cellContent}\n    </Tappable>\n  ) : (\n    <RootComponent {...restProps} baseClassName={cellClasses}>\n      {cellContent}\n    </RootComponent>\n  );\n};\n"],"names":["MiniInfoCell","stylesMode","add","accent","more","stylesTextWrap","nowrap","full","short","before","after","children","mode","textWrap","expandable","className","restProps","cellClasses","classNames","cellContent","React","Fragment","hasReactNode","span","div","Paragraph","weight","undefined","Icon16Chevron","onClick","Tappable","Component","role","RootComponent","baseClassName"],"mappings":";;;;+BA8DaA;;;eAAAA;;;;;;;iEA9DU;uBACO;sBACW;+BAEX;0BACL;2BACC;AAG1B,MAAMC,aAAa;IACjBC,GAAG;IACHC,MAAM;IACNC,IAAI;AACN;AAEA,MAAMC,iBAAiB;IACrBC,MAAM;IACNC,IAAI;IACJC,KAAK;AACP;AA2CO,MAAMR,eAAe;QAAC,EAC3BS,MAAM,EACNC,KAAK,EACLC,QAAQ,EACRC,OAAO,MAAM,EACbC,WAAW,QAAQ,EACnBC,aAAa,KAAK,EAClBC,SAAS,EAES,WADfC;QAPHP;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;;IAGA,MAAME,cAAcC,IAAAA,gBAAU,sBAE5Bb,cAAc,CAACQ,SAAS,EACxBD,SAAS,UAAUX,UAAU,CAACW,KAAK,EACnCG;IAGF,MAAMI,4BACJ,qBAACC,OAAMC,QAAQ,QACZC,IAAAA,kBAAY,EAACb,yBAAW,qBAACc;QAAKR,SAAS;OAAmCN,uBAC3E,qBAACe;QAAIT,SAAS;qBACZ,qBAACU,oBAAS;QACRV,SAAS;QACTW,QAAQd,SAAS,SAAS,MAAMe;OAE/BhB,WAEFG,4BAAc,qBAACc,oBAAa,UAE9BN,IAAAA,kBAAY,EAACZ,wBAAU,qBAACa;QAAKR,SAAS;OAAkCL;IAI7E,OAAOM,UAAUa,OAAO,iBACtB,qBAACC,kBAAQ;QAACC,WAAU;QAAMC,MAAK;OAAahB;QAAWD,WAAWE;QAC/DE,6BAGH,qBAACc,4BAAa,8CAAKjB;QAAWkB,eAAejB;QAC1CE;AAGP"}