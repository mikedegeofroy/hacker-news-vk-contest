import * as React from 'react';
import type { HasComponent, HTMLAttributesWithRootRef } from '../../types';
export interface PaginationProps extends Omit<HTMLAttributesWithRootRef<HTMLElement>, 'onChange'> {
    /**
     * Текущая страница.
     */
    currentPage?: number;
    /**
     * Кол-во всегда видимых страниц по краям текущей страницы.
     */
    siblingCount?: number;
    /**
     * Кол-во всегда видимых страниц в начале и в конце.
     */
    boundaryCount?: number;
    /**
     * Общее кол-во страниц.
     */
    totalPages?: number;
    /**
     * Блокировка всех кнопок.
     */
    disabled?: boolean;
    /**
     * Переопределение текста для обозначения блока навигации.
     * По умолчанию используется текст на "ru_RU".
     */
    navigationLabel?: string;
    navigationLabelComponent?: HasComponent['Component'];
    /**
     * Переопределение текста для кнопки навигации назад.
     * По умолчанию используется текст на "ru_RU".
     */
    prevButtonLabel?: string;
    /**
     * Переопределение текста для кнопки навигации вперёд.
     * По умолчанию используется текст на "ru_RU".
     */
    nextButtonLabel?: string;
    /**
     * Функция для переопределения и/или локализации текста кнопки страницы.
     * По умолчанию используется текст на "ru_RU".
     */
    getPageLabel?(isCurrent: boolean): string;
    onChange?(page: number): void;
}
/**
 * @see https://vkcom.github.io/VKUI/#/Pagination
 */
export declare const Pagination: ({ currentPage, siblingCount, boundaryCount, totalPages, disabled, getPageLabel, navigationLabel, navigationLabelComponent, prevButtonLabel, nextButtonLabel, onChange, ...resetProps }: PaginationProps) => React.JSX.Element;
//# sourceMappingURL=Pagination.d.ts.map