import * as React from 'react';
import { HasComponent, HasDataAttribute, HasRef, HTMLAttributesWithRootRef } from '../../types';
export interface PanelHeaderProps extends HTMLAttributesWithRootRef<HTMLDivElement>, HasRef<HTMLDivElement> {
    before?: React.ReactNode;
    /**
     * Добавляет элемент справа.
     *
     * При передаче нескольких элементов, расставляет отступы между ними.
     */
    after?: React.ReactNode;
    /**
     * Тип разделителя под шапкой.
     *
     * - `"none"` означает, что разделитель не нужен
     * - `"separator"` включает сепаратор при условии, что это:
     *      - либо платформа `vkcom`
     *      - либо платформа `android`/`ios` при `<AdaptivityProvider sizeX="compact" />`
     * - `"spacing"` включает отступ, если это платформа `android`/`ios` при `<AdaptivityProvider sizeX="regular" />`
     * - `"auto"` автоматически подбирает либо `"separator"`, либо `"spacing"` по их условиям
     */
    delimiter?: 'auto' | 'none' | 'separator' | 'spacing';
    transparent?: boolean;
    shadow?: boolean;
    /**
     * Высота шапки будет игнорироваться контентом панели
     */
    float?: boolean;
    /**
     * Если `false`, то шапка будет в потоке. По умолчанию `true`, но если платформа vkcom, то по умолчанию `false`.
     */
    fixed?: boolean;
    /**
     * По умолчанию как `Component` используется `span`.
     */
    typographyProps?: HasComponent & React.HTMLAttributes<HTMLElement> & HasDataAttribute;
}
/**
 * @see https://vkcom.github.io/VKUI/#/PanelHeader
 */
export declare const PanelHeader: ({ before, children, after, float, transparent, delimiter, shadow, getRef, getRootRef, fixed, typographyProps, ...restProps }: PanelHeaderProps) => React.JSX.Element;
//# sourceMappingURL=PanelHeader.d.ts.map