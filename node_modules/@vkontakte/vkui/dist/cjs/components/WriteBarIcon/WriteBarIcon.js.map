{"version":3,"sources":["../../../../src/components/WriteBarIcon/WriteBarIcon.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Icon24Attach,\n  Icon24CheckCircleOutline,\n  Icon24Send,\n  Icon28AddCircleOutline,\n  Icon28AttachOutline,\n  Icon28CheckCircleOutline,\n  Icon28Send,\n  Icon48WritebarDone,\n  Icon48WritebarSend,\n} from '@vkontakte/icons';\nimport { classNames, hasReactNode } from '@vkontakte/vkjs';\nimport { usePlatform } from '../../hooks/usePlatform';\nimport { hasAccessibleName } from '../../lib/accessibility';\nimport { COMMON_WARNINGS, warnOnce } from '../../lib/warnOnce';\nimport { AdaptiveIconRenderer } from '../AdaptiveIconRenderer/AdaptiveIconRenderer';\nimport { Counter } from '../Counter/Counter';\nimport { Tappable } from '../Tappable/Tappable';\nimport { VisuallyHidden } from '../VisuallyHidden/VisuallyHidden';\nimport styles from './WriteBarIcon.module.css';\n\nconst predefinedLabel = {\n  attach: 'Прикрепить файл',\n  send: 'Отправить',\n  done: 'Готово',\n};\n\nexport interface WriteBarIconProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  /**\n   * Предустановленные типы кнопок в WriteBar для отрисовки иконки и установки текста кнопки в зависимости от платформы.\n   * Если передать валидное значение для этого свойства, `children` игнорируются, а для `label` по умолчанию используется текст на \"ru_RU\".\n   *\n   * Валидные значения:\n   * - `attach` – иконка прикрепления, текст по умолчанию — \"Прикрепить файл\";\n   * - `send` – иконка отправки, текст по умолчанию — \"Отправить\";\n   * - `done` – иконка отправки в режиме редактирования, текст по умолчанию — \"Готово\";\n   */\n  mode?: 'attach' | 'send' | 'done';\n  /**\n   * Значение счётчика для кнопки. Например, для количества прикреплённых файлов.\n   */\n  count?: number;\n  /**\n   * Текст кнопки. Необходим для ассистивных технологий.\n   */\n  label?: string;\n}\n\nconst warn = warnOnce('WriteBarIcon');\n\n/**\n * @see https://vkcom.github.io/VKUI/#/WriteBarIcon\n */\nexport const WriteBarIcon = ({\n  mode,\n  children,\n  count,\n  className,\n  label: labelProp,\n  ...restProps\n}: WriteBarIconProps) => {\n  const platform = usePlatform();\n\n  let predefinedIcons;\n\n  switch (mode) {\n    case 'attach':\n      predefinedIcons = {\n        IconCompact: platform === 'ios' ? Icon28AddCircleOutline : Icon24Attach,\n        IconRegular: platform === 'ios' ? Icon28AddCircleOutline : Icon28AttachOutline,\n      };\n      break;\n\n    case 'send':\n      predefinedIcons = {\n        IconCompact: platform === 'ios' ? Icon48WritebarSend : Icon24Send,\n        IconRegular: platform === 'ios' ? Icon48WritebarSend : Icon28Send,\n      };\n      break;\n\n    case 'done':\n      predefinedIcons = {\n        IconCompact: platform === 'ios' ? Icon48WritebarDone : Icon24CheckCircleOutline,\n        IconRegular: platform === 'ios' ? Icon48WritebarDone : Icon28CheckCircleOutline,\n      };\n      break;\n\n    default:\n      break;\n  }\n\n  const label = labelProp ?? (mode && predefinedLabel[mode]);\n\n  if (process.env.NODE_ENV === 'development') {\n    /* istanbul ignore next: проверка в dev mode, тест на hasAccessibleName() есть в lib/accessibility.test.tsx */\n    const isAccessible = hasAccessibleName({\n      children: [children, label],\n      ...restProps,\n    });\n\n    if (!isAccessible) {\n      warn(COMMON_WARNINGS.a11y['button-name'], 'error');\n    }\n  }\n\n  return (\n    <Tappable\n      {...restProps}\n      Component=\"button\"\n      hasHover={false}\n      activeMode={styles['WriteBarIcon__active']}\n      className={classNames(\n        styles['WriteBarIcon'],\n        platform === 'ios' && styles['WriteBarIcon--ios'],\n        mode === 'send' && styles['WriteBarIcon--mode-send'],\n        mode === 'done' && styles['WriteBarIcon--mode-done'],\n        className,\n      )}\n    >\n      <span className={styles['WriteBarIcon__in']}>\n        {label && <VisuallyHidden>{label}</VisuallyHidden>}\n        {predefinedIcons ? <AdaptiveIconRenderer {...predefinedIcons} /> : children}\n      </span>\n      {hasReactNode(count) && (\n        <Counter className={styles['WriteBarIcon__counter']} size=\"s\">\n          {count}\n        </Counter>\n      )}\n    </Tappable>\n  );\n};\n"],"names":["WriteBarIcon","predefinedLabel","attach","send","done","warn","warnOnce","mode","children","count","className","label","labelProp","restProps","platform","usePlatform","predefinedIcons","IconCompact","Icon28AddCircleOutline","Icon24Attach","IconRegular","Icon28AttachOutline","Icon48WritebarSend","Icon24Send","Icon28Send","Icon48WritebarDone","Icon24CheckCircleOutline","Icon28CheckCircleOutline","process","env","NODE_ENV","isAccessible","hasAccessibleName","COMMON_WARNINGS","a11y","Tappable","Component","hasHover","activeMode","classNames","span","VisuallyHidden","AdaptiveIconRenderer","hasReactNode","Counter","size"],"mappings":";;;;+BAsDaA;;;eAAAA;;;;;;;iEAtDU;uBAWhB;sBACkC;6BACb;+BACM;0BACQ;sCACL;yBACb;0BACC;gCACM;AAG/B,MAAMC,kBAAkB;IACtBC,QAAQ;IACRC,MAAM;IACNC,MAAM;AACR;AAuBA,MAAMC,OAAOC,IAAAA,kBAAQ,EAAC;AAKf,MAAMN,eAAe;QAAC,EAC3BO,IAAI,EACJC,QAAQ,EACRC,KAAK,EACLC,SAAS,EACTC,OAAOC,SAAS,EAEE,WADfC;QALHN;QACAC;QACAC;QACAC;QACAC;;IAGA,MAAMG,WAAWC,IAAAA,wBAAW;IAE5B,IAAIC;IAEJ,OAAQT;QACN,KAAK;YACHS,kBAAkB;gBAChBC,aAAaH,aAAa,QAAQI,6BAAsB,GAAGC,mBAAY;gBACvEC,aAAaN,aAAa,QAAQI,6BAAsB,GAAGG,0BAAmB;YAChF;YACA;QAEF,KAAK;YACHL,kBAAkB;gBAChBC,aAAaH,aAAa,QAAQQ,yBAAkB,GAAGC,iBAAU;gBACjEH,aAAaN,aAAa,QAAQQ,yBAAkB,GAAGE,iBAAU;YACnE;YACA;QAEF,KAAK;YACHR,kBAAkB;gBAChBC,aAAaH,aAAa,QAAQW,yBAAkB,GAAGC,+BAAwB;gBAC/EN,aAAaN,aAAa,QAAQW,yBAAkB,GAAGE,+BAAwB;YACjF;YACA;QAEF;YACE;IACJ;IAEA,MAAMhB,QAAQC,sBAAAA,uBAAAA,YAAcL,QAAQN,eAAe,CAACM,KAAK;IAEzD,IAAIqB,QAAQC,GAAG,CAACC,QAAQ,KAAK,eAAe;QAC1C,4GAA4G,GAC5G,MAAMC,eAAeC,IAAAA,gCAAiB,EAAC;YACrCxB,UAAU;gBAACA;gBAAUG;aAAM;WACxBE;QAGL,IAAI,CAACkB,cAAc;YACjB1B,KAAK4B,yBAAe,CAACC,IAAI,CAAC,cAAc,EAAE;QAC5C;IACF;IAEA,qBACE,qBAACC,kBAAQ,8CACHtB;QACJuB,WAAU;QACVC,UAAU;QACVC,UAAU;QACV5B,WAAW6B,IAAAA,gBAAU,sBAEnBzB,aAAa,kCACbP,SAAS,yCACTA,SAAS,yCACTG;sBAGF,qBAAC8B;QAAK9B,SAAS;OACZC,uBAAS,qBAAC8B,8BAAc,QAAE9B,QAC1BK,gCAAkB,qBAAC0B,0CAAoB,EAAK1B,mBAAsBR,WAEpEmC,IAAAA,kBAAY,EAAClC,wBACZ,qBAACmC,gBAAO;QAAClC,SAAS;QAAmCmC,MAAK;OACvDpC;AAKX"}