{"version":3,"sources":["../../../../src/components/CalendarHeader/CalendarHeader.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Icon12Dropdown,\n  Icon20ChevronLeftOutline,\n  Icon20ChevronRightOutline,\n} from '@vkontakte/icons';\nimport { classNames } from '@vkontakte/vkjs';\nimport { getMonths, getYears } from '../../lib/calendar';\nimport { addMonths, setMonth, setYear, subMonths } from '../../lib/date';\nimport { HTMLAttributesWithRootRef } from '../../types';\nimport { AdaptivityProvider } from '../AdaptivityProvider/AdaptivityProvider';\nimport { useConfigProvider } from '../ConfigProvider/ConfigProviderContext';\nimport { CustomSelect } from '../CustomSelect/CustomSelect';\nimport { RootComponent } from '../RootComponent/RootComponent';\nimport { Tappable } from '../Tappable/Tappable';\nimport { Paragraph } from '../Typography/Paragraph/Paragraph';\nimport { VisuallyHidden } from '../VisuallyHidden/VisuallyHidden';\nimport styles from './CalendarHeader.module.css';\n\ntype ArrowMonthProps = Omit<React.AllHTMLAttributes<HTMLElement>, 'onClick' | 'aria-label'>;\n\nexport interface CalendarHeaderProps\n  extends Omit<HTMLAttributesWithRootRef<HTMLDivElement>, 'onChange'> {\n  viewDate: Date;\n  /**\n   * Скрывает иконку для переключения на предыдущий месяц\n   */\n  prevMonthHidden?: boolean;\n  /**\n   * Скрывает иконку для переключения на следующий месяц\n   */\n  nextMonthHidden?: boolean;\n  disablePickers?: boolean;\n  prevMonthLabel?: string;\n  nextMonthLabel?: string;\n  changeMonthLabel?: string;\n  changeYearLabel?: string;\n  prevMonthIcon?: React.ReactNode;\n  nextMonthIcon?: React.ReactNode;\n  prevMonthProps?: ArrowMonthProps;\n  nextMonthProps?: ArrowMonthProps;\n  onChange(viewDate: Date): void;\n  /**\n   * Нажатие на кнопку переключения на следующий месяц.\n   */\n  onNextMonth?(): void;\n  /**\n   * Нажатие на кнопку переключения на предыдущий месяц.\n   */\n  onPrevMonth?(): void;\n}\n\nexport const CalendarHeader = ({\n  viewDate,\n  onChange,\n  prevMonthHidden = false,\n  nextMonthHidden = false,\n  disablePickers = false,\n  onNextMonth,\n  onPrevMonth,\n  prevMonthProps = {},\n  nextMonthProps = {},\n  prevMonthLabel = 'Предыдущий месяц',\n  nextMonthLabel = 'Следующий месяц',\n  changeMonthLabel = 'Изменить месяц',\n  changeYearLabel = 'Изменить год',\n  prevMonthIcon = (\n    <Icon20ChevronLeftOutline\n      className={styles['CalendarHeader__nav-icon--accent']}\n      width={30}\n      height={30}\n    />\n  ),\n  nextMonthIcon = (\n    <Icon20ChevronRightOutline\n      className={styles['CalendarHeader__nav-icon--accent']}\n      width={30}\n      height={30}\n    />\n  ),\n  ...restProps\n}: CalendarHeaderProps) => {\n  const { locale } = useConfigProvider();\n  const onMonthsChange = React.useCallback(\n    (event: React.ChangeEvent<HTMLSelectElement>) =>\n      onChange(setMonth(viewDate, Number(event.target.value))),\n    [onChange, viewDate],\n  );\n  const onYearChange = React.useCallback(\n    (event: React.ChangeEvent<HTMLSelectElement>) =>\n      onChange(setYear(viewDate, Number(event.target.value))),\n    [onChange, viewDate],\n  );\n\n  const months = React.useMemo(\n    () =>\n      getMonths(locale).map(({ value, label }) => ({\n        value,\n        label: <span className={styles['CalendarHeader__month']}>{label}</span>,\n      })),\n    [locale],\n  );\n\n  const currentYear = viewDate.getFullYear();\n\n  const years = React.useMemo(() => getYears(currentYear, 100), [currentYear]);\n\n  const formatter = new Intl.DateTimeFormat(locale, {\n    year: 'numeric',\n    month: 'long',\n  });\n\n  const { className: prevMonthClassName, ...restPrevMonthProps } = prevMonthProps;\n  const { className: nextMonthClassName, ...restNextMonthProps } = nextMonthProps;\n\n  return (\n    <RootComponent baseClassName={styles['CalendarHeader']} {...restProps}>\n      {!prevMonthHidden && (\n        <AdaptivityProvider sizeX=\"regular\">\n          <Tappable\n            className={classNames(\n              styles['CalendarHeader__nav-icon'],\n              styles['CalendarHeader__nav-icon-prev'],\n              prevMonthClassName,\n            )}\n            onClick={onPrevMonth}\n            {...restPrevMonthProps}\n          >\n            <VisuallyHidden>\n              {prevMonthLabel}, {formatter.format(subMonths(viewDate, 1))}\n            </VisuallyHidden>\n            {prevMonthIcon}\n          </Tappable>\n        </AdaptivityProvider>\n      )}\n      {disablePickers ? (\n        <Paragraph\n          className={classNames(\n            styles['CalendarHeader__pickers'],\n            'vkuiInternalCalendarHeader__pickers',\n          )}\n          weight=\"2\"\n        >\n          <span className={styles['CalendarHeader__month']}>\n            {new Intl.DateTimeFormat(locale, {\n              month: 'long',\n            }).format(viewDate)}\n          </span>\n          &nbsp;\n          {new Intl.DateTimeFormat(locale, {\n            year: 'numeric',\n          }).format(viewDate)}\n        </Paragraph>\n      ) : (\n        <AdaptivityProvider sizeY=\"compact\">\n          <div\n            className={classNames(\n              styles['CalendarHeader__pickers'],\n              'vkuiInternalCalendarHeader__pickers',\n            )}\n          >\n            <CustomSelect\n              className={classNames(\n                styles['CalendarHeader__picker'],\n                'vkuiInternalCalendarHeader__picker',\n              )}\n              value={viewDate.getMonth()}\n              options={months}\n              dropdownOffsetDistance={4}\n              dropdownAutoWidth\n              icon={<Icon12Dropdown />}\n              onChange={onMonthsChange}\n              forceDropdownPortal={false}\n              selectType=\"accent\"\n              aria-label={changeMonthLabel}\n            />\n            <CustomSelect\n              className={classNames(\n                styles['CalendarHeader__picker'],\n                'vkuiInternalCalendarHeader__picker',\n              )}\n              value={viewDate.getFullYear()}\n              options={years}\n              dropdownOffsetDistance={4}\n              dropdownAutoWidth\n              icon={<Icon12Dropdown />}\n              onChange={onYearChange}\n              forceDropdownPortal={false}\n              selectType=\"accent\"\n              aria-label={changeYearLabel}\n            />\n          </div>\n        </AdaptivityProvider>\n      )}\n      {!nextMonthHidden && (\n        <AdaptivityProvider sizeX=\"regular\">\n          <Tappable\n            className={classNames(\n              styles['CalendarHeader__nav-icon'],\n              styles['CalendarHeader__nav-icon-next'],\n              nextMonthClassName,\n            )}\n            onClick={onNextMonth}\n            {...restNextMonthProps}\n          >\n            <VisuallyHidden>\n              {nextMonthLabel}, {formatter.format(addMonths(viewDate, 1))}\n            </VisuallyHidden>\n            {nextMonthIcon}\n          </Tappable>\n        </AdaptivityProvider>\n      )}\n    </RootComponent>\n  );\n};\n"],"names":["CalendarHeader","viewDate","onChange","prevMonthHidden","nextMonthHidden","disablePickers","onNextMonth","onPrevMonth","prevMonthProps","nextMonthProps","prevMonthLabel","nextMonthLabel","changeMonthLabel","changeYearLabel","prevMonthIcon","Icon20ChevronLeftOutline","className","width","height","nextMonthIcon","Icon20ChevronRightOutline","restProps","locale","useConfigProvider","onMonthsChange","React","useCallback","event","setMonth","Number","target","value","onYearChange","setYear","months","useMemo","getMonths","map","label","span","currentYear","getFullYear","years","getYears","formatter","Intl","DateTimeFormat","year","month","prevMonthClassName","restPrevMonthProps","nextMonthClassName","restNextMonthProps","RootComponent","baseClassName","AdaptivityProvider","sizeX","Tappable","classNames","onClick","VisuallyHidden","format","subMonths","Paragraph","weight","sizeY","div","CustomSelect","getMonth","options","dropdownOffsetDistance","dropdownAutoWidth","icon","Icon12Dropdown","forceDropdownPortal","selectType","aria-label","addMonths"],"mappings":"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"}