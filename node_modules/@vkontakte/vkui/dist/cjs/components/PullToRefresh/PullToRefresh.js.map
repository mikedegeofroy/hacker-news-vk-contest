{"version":3,"sources":["../../../../src/components/PullToRefresh/PullToRefresh.tsx"],"sourcesContent":["import * as React from 'react';\nimport { classNames } from '@vkontakte/vkjs';\nimport { clamp } from '../../helpers/math';\nimport { usePlatform } from '../../hooks/usePlatform';\nimport { usePrevious } from '../../hooks/usePrevious';\nimport { DOMProps, useDOM } from '../../lib/dom';\nimport { useIsomorphicLayoutEffect } from '../../lib/useIsomorphicLayoutEffect';\nimport { AnyFunction, HasChildren } from '../../types';\nimport { ScrollContextInterface, useScroll } from '../AppRoot/ScrollContext';\nimport { FixedLayout } from '../FixedLayout/FixedLayout';\nimport { Touch, TouchEvent as TouchEventInternal, TouchProps } from '../Touch/Touch';\nimport TouchRootContext from '../Touch/TouchContext';\nimport { PullToRefreshSpinner } from './PullToRefreshSpinner';\nimport styles from './PullToRefresh.module.css';\n\nconst WAIT_FETCHING_TIMEOUT_MS = 1000;\n\nfunction cancelEvent(event: TouchEventInternal) {\n  /* istanbul ignore if: неясно в какой ситуации `event` из `Touch` может быть не определён */\n  if (!event) {\n    return false;\n  }\n  if ('preventDefault' in event.originalEvent && event.originalEvent.cancelable) {\n    event.originalEvent.preventDefault();\n  }\n  if ('stopPropagation' in event.originalEvent) {\n    event.originalEvent.stopPropagation();\n  }\n  return false;\n}\n\nexport interface PullToRefreshProps extends DOMProps, TouchProps, HasChildren {\n  /**\n   * Будет вызвана для обновления контента (прим.: функция должна быть мемоизированным коллбэком)\n   */\n  onRefresh: AnyFunction;\n  /**\n   * Определяет, выполняется ли обновление. Для скрытия спиннера после получения контента необходимо передать `false`\n   */\n  isFetching?: boolean;\n  /** @ignore */\n  scroll?: ScrollContextInterface;\n}\n\n/**\n * @see https://vkcom.github.io/VKUI/#/PullToRefresh\n */\nexport const PullToRefresh = ({\n  children,\n  isFetching,\n  onRefresh,\n  className,\n  ...restProps\n}: PullToRefreshProps) => {\n  const platform = usePlatform();\n  const scroll = useScroll();\n  const { window, document } = useDOM();\n  const prevIsFetching = usePrevious(isFetching);\n\n  const initParams = React.useMemo(\n    () => ({\n      start: platform === 'ios' ? -10 : -45,\n      max: platform === 'ios' ? 50 : 80,\n      maxY: platform === 'ios' ? 400 : 80,\n      refreshing: platform === 'ios' ? 36 : 50,\n      positionMultiplier: platform === 'ios' ? 0.21 : 1,\n    }),\n    [platform],\n  );\n\n  const [spinnerY, setSpinnerY] = React.useState(initParams.start);\n  const [watching, setWatching] = React.useState(false);\n  const [refreshing, setRefreshing] = React.useState(false);\n  const [canRefresh, setCanRefresh] = React.useState(false);\n  const [touchDown, setTouchDown] = React.useState(false);\n  const prevTouchDown = usePrevious(touchDown);\n\n  const touchY = React.useRef(0);\n  const [contentShift, setContentShift] = React.useState(0);\n  const [spinnerProgress, setSpinnerProgress] = React.useState(0);\n\n  const resetRefreshingState = React.useCallback(() => {\n    setWatching(false);\n    setCanRefresh(false);\n    setRefreshing(false);\n    setSpinnerY(initParams.start);\n    setSpinnerProgress(0);\n    setContentShift(0);\n  }, [initParams]);\n\n  const onRefreshingFinish = React.useCallback(() => {\n    if (!touchDown) {\n      resetRefreshingState();\n    }\n  }, [touchDown, resetRefreshingState]);\n\n  const waitFetchingTimeoutId = React.useRef<NodeJS.Timeout>();\n\n  useIsomorphicLayoutEffect(() => {\n    if (prevIsFetching !== undefined && prevIsFetching && !isFetching) {\n      onRefreshingFinish();\n    }\n  }, [prevIsFetching, isFetching, onRefreshingFinish]);\n\n  useIsomorphicLayoutEffect(() => {\n    if (prevIsFetching !== undefined && !prevIsFetching && isFetching) {\n      clearTimeout(waitFetchingTimeoutId.current);\n    }\n  }, [isFetching, prevIsFetching]);\n\n  const runRefreshing = React.useCallback(() => {\n    if (!refreshing && onRefresh) {\n      // cleanup if the consumer does not start fetching in 1s\n      clearTimeout(waitFetchingTimeoutId.current);\n      waitFetchingTimeoutId.current = setTimeout(onRefreshingFinish, WAIT_FETCHING_TIMEOUT_MS);\n\n      setRefreshing(true);\n      setSpinnerY((prevSpinnerY) => (platform === 'ios' ? prevSpinnerY : initParams.refreshing));\n\n      onRefresh();\n    }\n  }, [refreshing, onRefresh, onRefreshingFinish, platform, initParams.refreshing]);\n\n  useIsomorphicLayoutEffect(() => {\n    if (prevTouchDown !== undefined && prevTouchDown && !touchDown) {\n      if (!refreshing && canRefresh) {\n        runRefreshing();\n      } else if (refreshing && !isFetching) {\n        // only iOS can start refresh before gesture end\n        resetRefreshingState();\n        /* istanbul ignore if: TODO написать тест */\n      } else {\n        // refreshing && isFetching: refresh in progress\n        // OR !refreshing && !canRefresh: pull was not strong enough\n        setSpinnerY(refreshing ? initParams.refreshing : initParams.start);\n        setSpinnerProgress(0);\n        setContentShift(0);\n      }\n    }\n  }, [\n    initParams,\n    prevIsFetching,\n    isFetching,\n    onRefreshingFinish,\n    prevTouchDown,\n    touchDown,\n    refreshing,\n    canRefresh,\n    runRefreshing,\n  ]);\n\n  useIsomorphicLayoutEffect(\n    function toggleBodyOverscrollBehavior() {\n      /* istanbul ignore if: невозможный кейс, т.к. в SSR эффекты не вызываются. Проверка на будущее, если вдруг эффект будет вызываться. */\n      if (!window || !document) {\n        return;\n      }\n\n      /**\n       * ⚠️ В частности, необходимо для iOS 15. Начиная с этой версии в Safari добавили\n       * pull-to-refresh. CSS св-во `overflow-behavior` появился только с iOS 16.\n       *\n       * Во вторую очередь, полезна блокированием скролла, чтобы пользователь дождался обновления\n       * данных.\n       */\n      /* istanbul ignore next: в jest не протестировать */\n      const handleWindowTouchMoveForPreventIOSViewportBounce = (event: TouchEvent) => {\n        event.preventDefault();\n        event.stopPropagation();\n      };\n\n      if (watching || refreshing) {\n        // eslint-disable-next-line no-restricted-properties\n        document.documentElement.classList.add('vkui--disable-overscroll-behavior');\n        /* istanbul ignore next: в jest не протестировать */\n        window.addEventListener('touchmove', handleWindowTouchMoveForPreventIOSViewportBounce, {\n          passive: false,\n        });\n      }\n\n      return () => {\n        // eslint-disable-next-line no-restricted-properties\n        document.documentElement.classList.remove('vkui--disable-overscroll-behavior');\n        /* istanbul ignore next: в jest не протестировать */\n        window.removeEventListener('touchmove', handleWindowTouchMoveForPreventIOSViewportBounce);\n      };\n    },\n    [window, document, watching, refreshing],\n  );\n\n  const startYRef = React.useRef(0);\n\n  const onTouchStart = (event: TouchEventInternal) => {\n    if (refreshing) {\n      cancelEvent(event);\n      return;\n    }\n    setTouchDown(true);\n    startYRef.current = event.startY;\n  };\n\n  const iosRefreshStartedRef = React.useRef(false);\n  const onTouchMove = (event: TouchEventInternal) => {\n    const { isY, shiftY } = event;\n    const { start, max } = initParams;\n    const pageYOffset = scroll?.getScroll().y;\n\n    if (watching && touchDown) {\n      cancelEvent(event);\n\n      const { positionMultiplier, maxY } = initParams;\n\n      const shift = Math.max(0, shiftY - touchY.current);\n\n      const currentY = clamp(start + shift * positionMultiplier, start, maxY);\n      const progress = currentY > -10 ? Math.abs((currentY + 10) / max) * 80 : 0;\n\n      setSpinnerY(currentY);\n      setSpinnerProgress(clamp(progress, 0, 80));\n      setCanRefresh(progress > 80);\n      setContentShift((currentY + 10) * 2.3);\n\n      const iosCanStartRefreshDuringGesture =\n        platform === 'ios' && progress > 85 && !refreshing && !iosRefreshStartedRef.current;\n      if (iosCanStartRefreshDuringGesture) {\n        iosRefreshStartedRef.current = true;\n        runRefreshing();\n      }\n    } else if (isY && pageYOffset === 0 && shiftY > 0 && !refreshing && touchDown) {\n      cancelEvent(event);\n\n      touchY.current = shiftY;\n      setWatching(true);\n      setSpinnerY(start);\n      setSpinnerProgress(0);\n    }\n  };\n\n  const onTouchEnd = () => {\n    setWatching(false);\n    setTouchDown(false);\n    iosRefreshStartedRef.current = false;\n  };\n\n  const spinnerTransform = `translate3d(0, ${spinnerY}px, 0)`;\n  let contentTransform = '';\n\n  if (platform === 'ios' && refreshing && !touchDown) {\n    contentTransform = 'translate3d(0, 100px, 0)';\n  } else if (platform === 'ios' && (contentShift || refreshing)) {\n    contentTransform = `translate3d(0, ${contentShift}px, 0)`;\n  }\n\n  return (\n    <TouchRootContext.Provider value={true}>\n      <Touch\n        aria-live=\"polite\"\n        aria-busy={!!isFetching}\n        {...restProps}\n        onStart={onTouchStart}\n        onMove={onTouchMove}\n        onEnd={onTouchEnd}\n        className={classNames(\n          styles['PullToRefresh'],\n          platform === 'ios' && styles['PullToRefresh--ios'],\n          watching && styles['PullToRefresh--watching'],\n          refreshing && styles['PullToRefresh--refreshing'],\n          className,\n        )}\n      >\n        <FixedLayout className={styles['PullToRefresh__controls']} useParentWidth>\n          <PullToRefreshSpinner\n            style={{\n              transform: spinnerTransform,\n              WebkitTransform: spinnerTransform,\n              opacity: watching || refreshing || canRefresh ? 1 : 0,\n            }}\n            on={refreshing}\n            progress={refreshing ? undefined : spinnerProgress}\n          />\n        </FixedLayout>\n\n        <div\n          className={styles['PullToRefresh__content']}\n          style={{\n            transform: contentTransform,\n            WebkitTransform: contentTransform,\n          }}\n        >\n          {children}\n        </div>\n      </Touch>\n    </TouchRootContext.Provider>\n  );\n};\n"],"names":["PullToRefresh","WAIT_FETCHING_TIMEOUT_MS","cancelEvent","event","originalEvent","cancelable","preventDefault","stopPropagation","children","isFetching","onRefresh","className","restProps","platform","usePlatform","scroll","useScroll","window","document","useDOM","prevIsFetching","usePrevious","initParams","React","useMemo","start","max","maxY","refreshing","positionMultiplier","spinnerY","setSpinnerY","useState","watching","setWatching","setRefreshing","canRefresh","setCanRefresh","touchDown","setTouchDown","prevTouchDown","touchY","useRef","contentShift","setContentShift","spinnerProgress","setSpinnerProgress","resetRefreshingState","useCallback","onRefreshingFinish","waitFetchingTimeoutId","useIsomorphicLayoutEffect","undefined","clearTimeout","current","runRefreshing","setTimeout","prevSpinnerY","toggleBodyOverscrollBehavior","handleWindowTouchMoveForPreventIOSViewportBounce","documentElement","classList","add","addEventListener","passive","remove","removeEventListener","startYRef","onTouchStart","startY","iosRefreshStartedRef","onTouchMove","isY","shiftY","pageYOffset","getScroll","y","shift","Math","currentY","clamp","progress","abs","iosCanStartRefreshDuringGesture","onTouchEnd","spinnerTransform","contentTransform","TouchRootContext","Provider","value","Touch","aria-live","aria-busy","onStart","onMove","onEnd","classNames","FixedLayout","useParentWidth","PullToRefreshSpinner","style","transform","WebkitTransform","opacity","on","div"],"mappings":"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"}