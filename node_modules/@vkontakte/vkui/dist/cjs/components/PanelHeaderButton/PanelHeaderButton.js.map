{"version":3,"sources":["../../../../src/components/PanelHeaderButton/PanelHeaderButton.tsx"],"sourcesContent":["import * as React from 'react';\nimport { classNames, isPrimitiveReactNode } from '@vkontakte/vkjs';\nimport { usePlatform } from '../../hooks/usePlatform';\nimport { hasAccessibleName } from '../../lib/accessibility';\nimport { COMMON_WARNINGS, warnOnce } from '../../lib/warnOnce';\nimport { Tappable, TappableProps } from '../Tappable/Tappable';\nimport { Text } from '../Typography/Text/Text';\nimport { Title } from '../Typography/Title/Title';\nimport styles from './PanelHeaderButton.module.css';\n\nconst platformClassNames = {\n  ios: styles['PanelHeaderButton--ios'],\n  android: styles['PanelHeaderButton--android'],\n  vkcom: styles['PanelHeaderButton--vkcom'],\n};\n\nexport interface PanelHeaderButtonProps extends Omit<TappableProps, 'label'> {\n  primary?: boolean;\n  label?: React.ReactNode;\n}\n\ninterface ButtonTypographyProps extends React.AllHTMLAttributes<HTMLElement> {\n  primary?: PanelHeaderButtonProps['primary'];\n}\n\nconst ButtonTypography = ({ primary, children }: ButtonTypographyProps) => {\n  const platform = usePlatform();\n\n  if (platform === 'ios') {\n    return (\n      <Title Component=\"span\" level=\"3\" weight={primary ? '1' : '3'}>\n        {children}\n      </Title>\n    );\n  }\n\n  return <Text weight={platform === 'vkcom' ? undefined : '2'}>{children}</Text>;\n};\n\nconst warn = warnOnce('PanelHeaderButton');\n\n/**\n * @see https://vkcom.github.io/VKUI/#/PanelHeaderButton\n */\nexport const PanelHeaderButton = ({\n  children,\n  primary = false,\n  label,\n  className,\n  ...restProps\n}: PanelHeaderButtonProps) => {\n  const isPrimitive = isPrimitiveReactNode(children);\n  const isPrimitiveLabel = isPrimitiveReactNode(label);\n  const platform = usePlatform();\n\n  let hoverMode;\n  let activeMode;\n\n  switch (platform) {\n    case 'ios':\n      hoverMode = 'background';\n      activeMode = 'opacity';\n      break;\n    case 'vkcom':\n      hoverMode = styles['PanelHeaderButton--hover'];\n      activeMode = styles['PanelHeaderButton--active'];\n      break;\n    default:\n      hoverMode = 'background';\n      activeMode = 'background';\n  }\n\n  if (process.env.NODE_ENV === 'development') {\n    /* istanbul ignore next: проверка в dev mode, тест на hasAccessibleName() есть в lib/accessibility.test.tsx */\n    const isAccessible = hasAccessibleName({\n      children: [children, label],\n      ...restProps,\n    });\n\n    if (!isAccessible) {\n      warn(COMMON_WARNINGS.a11y[restProps.href ? 'link-name' : 'button-name'], 'error');\n    }\n  }\n\n  return (\n    <Tappable\n      Component={restProps.href ? 'a' : 'button'}\n      {...restProps}\n      hoverMode={hoverMode}\n      activeEffectDelay={200}\n      activeMode={activeMode}\n      className={classNames(\n        'vkuiInternalPanelHeaderButton',\n        styles['PanelHeaderButton'],\n        platformClassNames.hasOwnProperty(platform)\n          ? platformClassNames[platform]\n          : platformClassNames.android,\n        isPrimitive && styles['PanelHeaderButton--primitive'],\n        !isPrimitive && !isPrimitiveLabel && styles['PanelHeaderButton--notPrimitive'],\n        className,\n      )}\n    >\n      {isPrimitive ? <ButtonTypography primary={primary}>{children}</ButtonTypography> : children}\n      {isPrimitiveLabel ? (\n        <ButtonTypography primary={primary} className={styles['PanelHeaderButton__label']}>\n          {label}\n        </ButtonTypography>\n      ) : (\n        label\n      )}\n    </Tappable>\n  );\n};\n"],"names":["PanelHeaderButton","platformClassNames","ios","android","vkcom","ButtonTypography","primary","children","platform","usePlatform","Title","Component","level","weight","Text","undefined","warn","warnOnce","label","className","restProps","isPrimitive","isPrimitiveReactNode","isPrimitiveLabel","hoverMode","activeMode","process","env","NODE_ENV","isAccessible","hasAccessibleName","COMMON_WARNINGS","a11y","href","Tappable","activeEffectDelay","classNames","hasOwnProperty"],"mappings":";;;;+BA4CaA;;;eAAAA;;;;;;;iEA5CU;sBAC0B;6BACrB;+BACM;0BACQ;0BACF;sBACnB;uBACC;AAGtB,MAAMC,qBAAqB;IACzBC,GAAG;IACHC,OAAO;IACPC,KAAK;AACP;AAWA,MAAMC,mBAAmB,CAAC,EAAEC,OAAO,EAAEC,QAAQ,EAAyB;IACpE,MAAMC,WAAWC,IAAAA,wBAAW;IAE5B,IAAID,aAAa,OAAO;QACtB,qBACE,qBAACE,YAAK;YAACC,WAAU;YAAOC,OAAM;YAAIC,QAAQP,UAAU,MAAM;WACvDC;IAGP;IAEA,qBAAO,qBAACO,UAAI;QAACD,QAAQL,aAAa,UAAUO,YAAY;OAAMR;AAChE;AAEA,MAAMS,OAAOC,IAAAA,kBAAQ,EAAC;AAKf,MAAMjB,oBAAoB;QAAC,EAChCO,QAAQ,EACRD,UAAU,KAAK,EACfY,KAAK,EACLC,SAAS,EAEc,WADpBC;QAJHb;QACAD;QACAY;QACAC;;IAGA,MAAME,cAAcC,IAAAA,0BAAoB,EAACf;IACzC,MAAMgB,mBAAmBD,IAAAA,0BAAoB,EAACJ;IAC9C,MAAMV,WAAWC,IAAAA,wBAAW;IAE5B,IAAIe;IACJ,IAAIC;IAEJ,OAAQjB;QACN,KAAK;YACHgB,YAAY;YACZC,aAAa;YACb;QACF,KAAK;YACHD;YACAC;YACA;QACF;YACED,YAAY;YACZC,aAAa;IACjB;IAEA,IAAIC,QAAQC,GAAG,CAACC,QAAQ,KAAK,eAAe;QAC1C,4GAA4G,GAC5G,MAAMC,eAAeC,IAAAA,gCAAiB,EAAC;YACrCvB,UAAU;gBAACA;gBAAUW;aAAM;WACxBE;QAGL,IAAI,CAACS,cAAc;YACjBb,KAAKe,yBAAe,CAACC,IAAI,CAACZ,UAAUa,IAAI,GAAG,cAAc,cAAc,EAAE;QAC3E;IACF;IAEA,qBACE,qBAACC,kBAAQ;QACPvB,WAAWS,UAAUa,IAAI,GAAG,MAAM;OAC9Bb;QACJI,WAAWA;QACXW,mBAAmB;QACnBV,YAAYA;QACZN,WAAWiB,IAAAA,gBAAU,EACnB,0DAEAnC,mBAAmBoC,cAAc,CAAC7B,YAC9BP,kBAAkB,CAACO,SAAS,GAC5BP,mBAAmBE,OAAO,EAC9BkB,mDACA,CAACA,eAAe,CAACE,2DACjBJ;QAGDE,4BAAc,qBAAChB;QAAiBC,SAASA;OAAUC,YAA+BA,UAClFgB,iCACC,qBAAClB;QAAiBC,SAASA;QAASa,SAAS;OAC1CD,SAGHA;AAIR"}