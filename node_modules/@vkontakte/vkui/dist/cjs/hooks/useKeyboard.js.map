{"version":3,"sources":["../../../src/hooks/useKeyboard.ts"],"sourcesContent":["import * as React from 'react';\nimport { useDOM } from '../lib/dom';\nimport { useGlobalEventListener } from './useGlobalEventListener';\n\ninterface SoftwareKeyboardState {\n  isOpened: boolean;\n}\n\n/**\n Проверяет, закрыла ли клавиатура часть экрана, 24% подошло к большинству устройств\n Работает на iOS и Android, где софт-клавиатура ресайзит viewport в браузерах\n */\nexport function getPreciseKeyboardState(window: any): boolean {\n  const {\n    innerHeight,\n    screen: { availHeight },\n  } = window;\n\n  const coveredViewportPercentage = Math.round((1 - innerHeight / availHeight) * 100);\n  return coveredViewportPercentage > 24;\n}\n\nconst eventOptions = {\n  passive: true,\n  capture: false,\n};\n\nexport function useKeyboard(): SoftwareKeyboardState {\n  const { document } = useDOM();\n\n  const [isOpened, setIsOpened] = React.useState(false);\n\n  const onFocus = React.useCallback(\n    (event: FocusEvent | true) => {\n      const isOpened =\n        (event === true || event.type === 'focusin') &&\n        (document?.activeElement?.tagName === 'INPUT' ||\n          document?.activeElement?.tagName === 'TEXTAREA');\n      setIsOpened(isOpened);\n    },\n    [document?.activeElement?.tagName],\n  );\n\n  /**\n   У полей с autoFocus не отлавливаются события focus, для этого вызываем вручную,\n   чтобы иметь хоть какое-то понимание происходящего.\n   */\n  React.useEffect(() => {\n    onFocus(true);\n  }, [onFocus]);\n\n  useGlobalEventListener(document, 'focusout', onFocus, eventOptions);\n  useGlobalEventListener(document, 'focusin', onFocus, eventOptions);\n\n  return { isOpened };\n}\n"],"names":["getPreciseKeyboardState","useKeyboard","window","innerHeight","screen","availHeight","coveredViewportPercentage","Math","round","eventOptions","passive","capture","document","useDOM","isOpened","setIsOpened","React","useState","onFocus","useCallback","event","type","activeElement","tagName","useEffect","useGlobalEventListener"],"mappings":";;;;;;;;;;;IAYgBA,uBAAuB;eAAvBA;;IAeAC,WAAW;eAAXA;;;;iEA3BO;qBACA;wCACgB;AAUhC,SAASD,wBAAwBE,MAAW;IACjD,MAAM,EACJC,WAAW,EACXC,QAAQ,EAAEC,WAAW,EAAE,EACxB,GAAGH;IAEJ,MAAMI,4BAA4BC,KAAKC,KAAK,CAAC,AAAC,CAAA,IAAIL,cAAcE,WAAU,IAAK;IAC/E,OAAOC,4BAA4B;AACrC;AAEA,MAAMG,eAAe;IACnBC,SAAS;IACTC,SAAS;AACX;AAEO,SAASV;QAaXW;IAZH,MAAM,EAAEA,QAAQ,EAAE,GAAGC,IAAAA,WAAM;IAE3B,MAAM,CAACC,UAAUC,YAAY,GAAGC,OAAMC,QAAQ,CAAC;IAE/C,MAAMC,UAAUF,OAAMG,WAAW,CAC/B,CAACC;YAGIR,yBACCA;QAHJ,MAAME,WACJ,AAACM,CAAAA,UAAU,QAAQA,MAAMC,IAAI,KAAK,SAAQ,KACzCT,CAAAA,CAAAA,qBAAAA,gCAAAA,0BAAAA,SAAUU,aAAa,cAAvBV,8CAAAA,wBAAyBW,OAAO,MAAK,WACpCX,CAAAA,qBAAAA,gCAAAA,2BAAAA,SAAUU,aAAa,cAAvBV,+CAAAA,yBAAyBW,OAAO,MAAK,UAAS;QAClDR,YAAYD;IACd,GACA;QAACF,qBAAAA,gCAAAA,0BAAAA,SAAUU,aAAa,cAAvBV,8CAAAA,wBAAyBW,OAAO;KAAC;IAGpC;;;GAGC,GACDP,OAAMQ,SAAS,CAAC;QACdN,QAAQ;IACV,GAAG;QAACA;KAAQ;IAEZO,IAAAA,8CAAsB,EAACb,UAAU,YAAYM,SAAST;IACtDgB,IAAAA,8CAAsB,EAACb,UAAU,WAAWM,SAAST;IAErD,OAAO;QAAEK;IAAS;AACpB"}