{"version":3,"sources":["../../../src/hooks/useAdaptivityWithJSMediaQueries.ts"],"sourcesContent":["import * as React from 'react';\nimport { canUseDOM, hasHover as hasHoverLib, hasMouse as hasPointerLib } from '@vkontakte/vkjs';\nimport {\n  AdaptivityContext,\n  type AdaptivityProps as BaseAdaptivityProps,\n} from '../components/AdaptivityProvider/AdaptivityContext';\nimport { getOrDefault } from '../helpers/getOrDefault';\nimport {\n  getSizeX,\n  getSizeY,\n  getViewHeightByMediaQueries,\n  getViewWidthByMediaQueries,\n  tryToCheckIsDesktop,\n} from '../lib/adaptivity';\nimport { matchMediaListAddListener, matchMediaListRemoveListener } from '../lib/matchMedia';\nimport { useMediaQueries } from './useMediaQueries';\nimport { usePlatform } from './usePlatform';\n\nexport interface UseAdaptivityWithJSMediaQueries extends Required<BaseAdaptivityProps> {\n  isDesktop: boolean;\n}\n\n/**\n * Высчитывает и возвращает параметры адаптивности при изменении вьюпорта.\n *\n * Берёт в приоритет значения из `AdaptivityContext`.\n *\n * > ⚠ SSR\n * >\n * > Во избежания ошибок при гидратации, не используйте данный хук, если есть вероятность, что компонент будет отрендерен\n * > на стороне сервера.\n * >\n * > Лучше всего использовать для всплывающих окон, т.к. они вызываются только после загрузки\n * > страницы либо пользователем, либо программно.\n */\nexport const useAdaptivityWithJSMediaQueries = (): UseAdaptivityWithJSMediaQueries => {\n  if (!canUseDOM) {\n    // eslint-disable-next-line no-console\n    console.error(`[useAdaptivityWithJSMediaQueries] Похоже, вы пытаетесь использовать хук вне браузера.\n\nПостарайтесь этого избегать, чтобы не было ошибок при гидратации: при SSR нет информации о размерах экрана.\n\nИспользуйте CSS Media Query или библиотеку по типу https://github.com/artsy/fresnel.`);\n  }\n\n  const {\n    viewWidth: viewWidthContext,\n    viewHeight: viewHeightContext,\n    sizeX: sizeXContext,\n    sizeY: sizeYContext,\n    hasPointer: hasPointerContext,\n    hasHover: hasHoverContext,\n  } = React.useContext(AdaptivityContext);\n\n  const platform = usePlatform();\n  const mediaQueries = useMediaQueries();\n\n  const [[viewWidthLocal, viewHeightLocal], setViewSizeLocal] = React.useState(() => [\n    getOrDefault(viewWidthContext, getViewWidthByMediaQueries(mediaQueries)),\n    getOrDefault(viewHeightContext, getViewHeightByMediaQueries(mediaQueries)),\n  ]);\n\n  const adaptivityProps = React.useMemo(() => {\n    const hasPointer = getOrDefault(hasPointerContext, hasPointerLib);\n    const hasHover = getOrDefault(hasHoverContext, hasHoverLib);\n    const viewWidth = getOrDefault(viewWidthContext, viewWidthLocal);\n    const viewHeight = getOrDefault(viewHeightContext, viewHeightLocal);\n    const sizeX = getOrDefault(sizeXContext, getSizeX(viewWidth));\n    const sizeY = getOrDefault(sizeYContext, getSizeY(viewWidth, viewHeight, hasPointer));\n    const isDesktop = tryToCheckIsDesktop(viewWidth, viewHeight, hasPointer, platform);\n\n    return {\n      viewWidth,\n      viewHeight,\n      sizeX,\n      sizeY,\n      hasPointer,\n      hasHover,\n      isDesktop,\n    };\n  }, [\n    viewWidthLocal,\n    viewHeightLocal,\n    viewWidthContext,\n    viewHeightContext,\n    sizeXContext,\n    sizeYContext,\n    hasPointerContext,\n    hasHoverContext,\n    platform,\n  ]);\n\n  React.useEffect(() => {\n    const handleMediaQuery = () => {\n      setViewSizeLocal((prevSizeLocal) => {\n        const newViewWidthLocal = getOrDefault(\n          viewWidthContext,\n          getViewWidthByMediaQueries(mediaQueries),\n        );\n        const newViewHeightLocal = getOrDefault(\n          viewHeightContext,\n          getViewHeightByMediaQueries(mediaQueries),\n        );\n\n        const [prevViewWidthLocal, prevViewHeightLocal] = prevSizeLocal;\n\n        if (\n          prevViewWidthLocal !== newViewWidthLocal ||\n          prevViewHeightLocal !== newViewHeightLocal\n        ) {\n          return [newViewWidthLocal, newViewHeightLocal];\n        }\n\n        return prevSizeLocal;\n      });\n    };\n\n    if (!viewWidthContext) {\n      [\n        mediaQueries.desktopPlus,\n        mediaQueries.tablet,\n        mediaQueries.smallTablet,\n        mediaQueries.mobile,\n      ].forEach((matchMediaListener) =>\n        matchMediaListAddListener(matchMediaListener, handleMediaQuery),\n      );\n    }\n\n    if (!viewHeightContext) {\n      [mediaQueries.mediumHeight, mediaQueries.mobileLandscapeHeight].forEach(\n        (matchMediaListener) => matchMediaListAddListener(matchMediaListener, handleMediaQuery),\n      );\n    }\n\n    return () => {\n      [\n        mediaQueries.desktopPlus,\n        mediaQueries.tablet,\n        mediaQueries.smallTablet,\n        mediaQueries.mobile,\n        mediaQueries.mediumHeight,\n        mediaQueries.mobileLandscapeHeight,\n      ].forEach((matchMediaListener) =>\n        matchMediaListRemoveListener(matchMediaListener, handleMediaQuery),\n      );\n    };\n  }, [mediaQueries, viewWidthContext, viewHeightContext]);\n\n  return adaptivityProps;\n};\n"],"names":["useAdaptivityWithJSMediaQueries","canUseDOM","console","error","viewWidth","viewWidthContext","viewHeight","viewHeightContext","sizeX","sizeXContext","sizeY","sizeYContext","hasPointer","hasPointerContext","hasHover","hasHoverContext","React","useContext","AdaptivityContext","platform","usePlatform","mediaQueries","useMediaQueries","viewWidthLocal","viewHeightLocal","setViewSizeLocal","useState","getOrDefault","getViewWidthByMediaQueries","getViewHeightByMediaQueries","adaptivityProps","useMemo","hasPointerLib","hasHoverLib","getSizeX","getSizeY","isDesktop","tryToCheckIsDesktop","useEffect","handleMediaQuery","prevSizeLocal","newViewWidthLocal","newViewHeightLocal","prevViewWidthLocal","prevViewHeightLocal","desktopPlus","tablet","smallTablet","mobile","forEach","matchMediaListener","matchMediaListAddListener","mediumHeight","mobileLandscapeHeight","matchMediaListRemoveListener"],"mappings":";;;;+BAmCaA;;;eAAAA;;;;iEAnCU;sBACuD;mCAIvE;8BACsB;4BAOtB;4BACiE;iCACxC;6BACJ;AAmBrB,MAAMA,kCAAkC;IAC7C,IAAI,CAACC,eAAS,EAAE;QACd,sCAAsC;QACtCC,QAAQC,KAAK,CAAC,CAAC;;;;oFAIiE,CAAC;IACnF;IAEA,MAAM,EACJC,WAAWC,gBAAgB,EAC3BC,YAAYC,iBAAiB,EAC7BC,OAAOC,YAAY,EACnBC,OAAOC,YAAY,EACnBC,YAAYC,iBAAiB,EAC7BC,UAAUC,eAAe,EAC1B,GAAGC,OAAMC,UAAU,CAACC,oCAAiB;IAEtC,MAAMC,WAAWC,IAAAA,wBAAW;IAC5B,MAAMC,eAAeC,IAAAA,gCAAe;IAEpC,MAAM,CAAC,CAACC,gBAAgBC,gBAAgB,EAAEC,iBAAiB,GAAGT,OAAMU,QAAQ,CAAC,IAAM;YACjFC,IAAAA,0BAAY,EAACtB,kBAAkBuB,IAAAA,sCAA0B,EAACP;YAC1DM,IAAAA,0BAAY,EAACpB,mBAAmBsB,IAAAA,uCAA2B,EAACR;SAC7D;IAED,MAAMS,kBAAkBd,OAAMe,OAAO,CAAC;QACpC,MAAMnB,aAAae,IAAAA,0BAAY,EAACd,mBAAmBmB,cAAa;QAChE,MAAMlB,WAAWa,IAAAA,0BAAY,EAACZ,iBAAiBkB,cAAW;QAC1D,MAAM7B,YAAYuB,IAAAA,0BAAY,EAACtB,kBAAkBkB;QACjD,MAAMjB,aAAaqB,IAAAA,0BAAY,EAACpB,mBAAmBiB;QACnD,MAAMhB,QAAQmB,IAAAA,0BAAY,EAAClB,cAAcyB,IAAAA,oBAAQ,EAAC9B;QAClD,MAAMM,QAAQiB,IAAAA,0BAAY,EAAChB,cAAcwB,IAAAA,oBAAQ,EAAC/B,WAAWE,YAAYM;QACzE,MAAMwB,YAAYC,IAAAA,+BAAmB,EAACjC,WAAWE,YAAYM,YAAYO;QAEzE,OAAO;YACLf;YACAE;YACAE;YACAE;YACAE;YACAE;YACAsB;QACF;IACF,GAAG;QACDb;QACAC;QACAnB;QACAE;QACAE;QACAE;QACAE;QACAE;QACAI;KACD;IAEDH,OAAMsB,SAAS,CAAC;QACd,MAAMC,mBAAmB;YACvBd,iBAAiB,CAACe;gBAChB,MAAMC,oBAAoBd,IAAAA,0BAAY,EACpCtB,kBACAuB,IAAAA,sCAA0B,EAACP;gBAE7B,MAAMqB,qBAAqBf,IAAAA,0BAAY,EACrCpB,mBACAsB,IAAAA,uCAA2B,EAACR;gBAG9B,MAAM,CAACsB,oBAAoBC,oBAAoB,GAAGJ;gBAElD,IACEG,uBAAuBF,qBACvBG,wBAAwBF,oBACxB;oBACA,OAAO;wBAACD;wBAAmBC;qBAAmB;gBAChD;gBAEA,OAAOF;YACT;QACF;QAEA,IAAI,CAACnC,kBAAkB;YACrB;gBACEgB,aAAawB,WAAW;gBACxBxB,aAAayB,MAAM;gBACnBzB,aAAa0B,WAAW;gBACxB1B,aAAa2B,MAAM;aACpB,CAACC,OAAO,CAAC,CAACC,qBACTC,IAAAA,qCAAyB,EAACD,oBAAoBX;QAElD;QAEA,IAAI,CAAChC,mBAAmB;YACtB;gBAACc,aAAa+B,YAAY;gBAAE/B,aAAagC,qBAAqB;aAAC,CAACJ,OAAO,CACrE,CAACC,qBAAuBC,IAAAA,qCAAyB,EAACD,oBAAoBX;QAE1E;QAEA,OAAO;YACL;gBACElB,aAAawB,WAAW;gBACxBxB,aAAayB,MAAM;gBACnBzB,aAAa0B,WAAW;gBACxB1B,aAAa2B,MAAM;gBACnB3B,aAAa+B,YAAY;gBACzB/B,aAAagC,qBAAqB;aACnC,CAACJ,OAAO,CAAC,CAACC,qBACTI,IAAAA,wCAA4B,EAACJ,oBAAoBX;QAErD;IACF,GAAG;QAAClB;QAAchB;QAAkBE;KAAkB;IAEtD,OAAOuB;AACT"}