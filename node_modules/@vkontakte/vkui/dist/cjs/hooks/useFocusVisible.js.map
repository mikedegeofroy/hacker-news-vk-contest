{"version":3,"sources":["../../../src/hooks/useFocusVisible.ts"],"sourcesContent":["import { FocusEvent, useCallback, useContext, useState } from 'react';\nimport { AppRootContext } from '../components/AppRoot/AppRootContext';\n\nexport function useFocusVisible(withKeyboardInputCheck = true) {\n  const [isFocused, setIsFocused] = useState(false);\n  const { keyboardInput } = useContext(AppRootContext);\n\n  const onFocus = useCallback(\n    (event: FocusEvent<HTMLElement>) => {\n      event.stopPropagation();\n      setIsFocused(true);\n    },\n    [setIsFocused],\n  );\n\n  const onBlur = useCallback(\n    (event: FocusEvent<HTMLElement>) => {\n      event.stopPropagation();\n      setIsFocused(false);\n    },\n    [setIsFocused],\n  );\n\n  const focusVisible = withKeyboardInputCheck ? keyboardInput && isFocused : isFocused;\n\n  return {\n    focusVisible,\n    onFocus,\n    onBlur,\n  };\n}\n"],"names":["useFocusVisible","withKeyboardInputCheck","isFocused","setIsFocused","useState","keyboardInput","useContext","AppRootContext","onFocus","useCallback","event","stopPropagation","onBlur","focusVisible"],"mappings":";;;;+BAGgBA;;;eAAAA;;;uBAH8C;gCAC/B;AAExB,SAASA,gBAAgBC,yBAAyB,IAAI;IAC3D,MAAM,CAACC,WAAWC,aAAa,GAAGC,IAAAA,eAAQ,EAAC;IAC3C,MAAM,EAAEC,aAAa,EAAE,GAAGC,IAAAA,iBAAU,EAACC,8BAAc;IAEnD,MAAMC,UAAUC,IAAAA,kBAAW,EACzB,CAACC;QACCA,MAAMC,eAAe;QACrBR,aAAa;IACf,GACA;QAACA;KAAa;IAGhB,MAAMS,SAASH,IAAAA,kBAAW,EACxB,CAACC;QACCA,MAAMC,eAAe;QACrBR,aAAa;IACf,GACA;QAACA;KAAa;IAGhB,MAAMU,eAAeZ,yBAAyBI,iBAAiBH,YAAYA;IAE3E,OAAO;QACLW;QACAL;QACAI;IACF;AACF"}