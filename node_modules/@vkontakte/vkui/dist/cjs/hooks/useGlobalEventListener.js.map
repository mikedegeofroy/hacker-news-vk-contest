{"version":3,"sources":["../../../src/hooks/useGlobalEventListener.ts"],"sourcesContent":["import { useIsomorphicLayoutEffect } from '../lib/useIsomorphicLayoutEffect';\nimport { useEventListener } from './useEventListener';\n\nexport function useGlobalEventListener<K extends keyof GlobalEventHandlersEventMap>(\n  element: Document | HTMLElement | Window | null | undefined,\n  event: K,\n  cb: ((ev: GlobalEventHandlersEventMap[K]) => void) | null | false | undefined,\n  options?: AddEventListenerOptions,\n): void;\nexport function useGlobalEventListener<E extends Event>(\n  element: Document | HTMLElement | Window | null | undefined,\n  event: string,\n  cb: ((ev: E) => void) | null | false | undefined,\n  options?: AddEventListenerOptions,\n): void;\nexport function useGlobalEventListener<\n  K extends keyof GlobalEventHandlersEventMap,\n  E extends Event,\n>(\n  element: Document | HTMLElement | Window | null | undefined,\n  event: K | string,\n  cb: ((ev: E) => void) | null | false | undefined,\n  options?: AddEventListenerOptions,\n) {\n  const listener = useEventListener(event, cb, options);\n  useIsomorphicLayoutEffect(() => {\n    if (cb && element) {\n      listener.add(element);\n    } else {\n      listener.remove();\n    }\n  }, [Boolean(cb), Boolean(element)]);\n}\n"],"names":["useGlobalEventListener","element","event","cb","options","listener","useEventListener","useIsomorphicLayoutEffect","add","remove","Boolean"],"mappings":";;;;+BAegBA;;;eAAAA;;;2CAf0B;kCACT;AAc1B,SAASA,uBAIdC,OAA2D,EAC3DC,KAAiB,EACjBC,EAAgD,EAChDC,OAAiC;IAEjC,MAAMC,WAAWC,IAAAA,kCAAgB,EAACJ,OAAOC,IAAIC;IAC7CG,IAAAA,oDAAyB,EAAC;QACxB,IAAIJ,MAAMF,SAAS;YACjBI,SAASG,GAAG,CAACP;QACf,OAAO;YACLI,SAASI,MAAM;QACjB;IACF,GAAG;QAACC,QAAQP;QAAKO,QAAQT;KAAS;AACpC"}