{"version":3,"sources":["../../../src/hooks/useMediaQueries.ts"],"sourcesContent":["import * as React from 'react';\nimport { MEDIA_QUERIES, type MediaQueries } from '../lib/adaptivity';\nimport { mediaQueryNull } from '../lib/browser';\nimport { useDOM } from '../lib/dom';\n\ninterface StoredMediaQueries {\n  /**\n   * Постоянная ссылка на окно. Это необходима, чтобы пересоздать медиа выражение если окно вдруг измениться.\n   *\n   * > `styleguide`\n   * >\n   * > В данный момент изменения окна существует в рамках песочницы. По сути мы храним ссылку на окно ради этого кейса\n   * > в песочнице.\n   */\n  window: Window | undefined;\n  /**\n   * Хранит созданные медиа выражения.\n   *\n   * Достаточно единожды создать экземпляры `MediaQueryList`, а дальше подписываться на события\n   * через метод `addEventListener(type, listener)`.\n   *\n   * {@link https://developer.mozilla.org/en-US/docs/Web/API/MediaQueryList}\n   */\n  mediaQueries: MediaQueries | null;\n}\n\nconst storedMediaQueries: StoredMediaQueries = {\n  window: undefined,\n  mediaQueries: null,\n};\n\n/**\n * Возвращает медиа выражения определенные дизайн-системой.\n */\nexport const useMediaQueries = () => {\n  const { window } = useDOM();\n\n  return React.useMemo(\n    function initializeStoreOrUpdateStoreIfWindowChanges() {\n      if (storedMediaQueries.window === window && storedMediaQueries.mediaQueries !== null) {\n        return storedMediaQueries.mediaQueries;\n      }\n\n      const matchMedia = window ? window.matchMedia.bind(window) : mediaQueryNull;\n\n      storedMediaQueries.window = window;\n      storedMediaQueries.mediaQueries = {\n        desktopPlus: matchMedia(MEDIA_QUERIES.DESKTOP_PLUS),\n        smallTabletPlus: matchMedia(MEDIA_QUERIES.SMALL_TABLET_PLUS),\n        tablet: matchMedia(MEDIA_QUERIES.TABLET),\n        smallTablet: matchMedia(MEDIA_QUERIES.SMALL_TABLET),\n        mobile: matchMedia(MEDIA_QUERIES.MOBILE),\n        mediumHeight: matchMedia(MEDIA_QUERIES.MEDIUM_HEIGHT),\n        mobileLandscapeHeight: matchMedia(MEDIA_QUERIES.MOBILE_LANDSCAPE_HEIGHT),\n      };\n\n      return storedMediaQueries.mediaQueries;\n    },\n    [window],\n  );\n};\n"],"names":["useMediaQueries","storedMediaQueries","window","undefined","mediaQueries","useDOM","React","useMemo","initializeStoreOrUpdateStoreIfWindowChanges","matchMedia","bind","mediaQueryNull","desktopPlus","MEDIA_QUERIES","DESKTOP_PLUS","smallTabletPlus","SMALL_TABLET_PLUS","tablet","TABLET","smallTablet","SMALL_TABLET","mobile","MOBILE","mediumHeight","MEDIUM_HEIGHT","mobileLandscapeHeight","MOBILE_LANDSCAPE_HEIGHT"],"mappings":";;;;+BAkCaA;;;eAAAA;;;;iEAlCU;4BAC0B;yBAClB;qBACR;AAuBvB,MAAMC,qBAAyC;IAC7CC,QAAQC;IACRC,cAAc;AAChB;AAKO,MAAMJ,kBAAkB;IAC7B,MAAM,EAAEE,MAAM,EAAE,GAAGG,IAAAA,WAAM;IAEzB,OAAOC,OAAMC,OAAO,CAClB,SAASC;QACP,IAAIP,mBAAmBC,MAAM,KAAKA,UAAUD,mBAAmBG,YAAY,KAAK,MAAM;YACpF,OAAOH,mBAAmBG,YAAY;QACxC;QAEA,MAAMK,aAAaP,SAASA,OAAOO,UAAU,CAACC,IAAI,CAACR,UAAUS,uBAAc;QAE3EV,mBAAmBC,MAAM,GAAGA;QAC5BD,mBAAmBG,YAAY,GAAG;YAChCQ,aAAaH,WAAWI,yBAAa,CAACC,YAAY;YAClDC,iBAAiBN,WAAWI,yBAAa,CAACG,iBAAiB;YAC3DC,QAAQR,WAAWI,yBAAa,CAACK,MAAM;YACvCC,aAAaV,WAAWI,yBAAa,CAACO,YAAY;YAClDC,QAAQZ,WAAWI,yBAAa,CAACS,MAAM;YACvCC,cAAcd,WAAWI,yBAAa,CAACW,aAAa;YACpDC,uBAAuBhB,WAAWI,yBAAa,CAACa,uBAAuB;QACzE;QAEA,OAAOzB,mBAAmBG,YAAY;IACxC,GACA;QAACF;KAAO;AAEZ"}