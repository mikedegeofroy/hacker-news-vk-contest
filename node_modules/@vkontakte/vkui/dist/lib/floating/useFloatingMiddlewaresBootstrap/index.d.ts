import type { ArrowOptions, PlacementWithAuto, UseFloatingMiddleware } from '../types/common';
export interface UseFloatingMiddlewaresBootstrapOptions {
    /**
     * По умолчанию компонент выберет наилучшее расположение сам. Но его можно задать извне с помощью этого свойства.
     */
    placement?: PlacementWithAuto;
    /**
     * Отступ по главной оси.
     */
    offsetByMainAxis?: number;
    /**
     * Отступ по вспомогательной оси.
     */
    offsetByCrossAxis?: number;
    arrowRef?: ArrowOptions['element'];
    /**
     * Отображать ли стрелку, указывающую на якорный элемент.
     */
    arrow?: boolean;
    /**
     * Высота стрелки. Складывается с `mainAxis`, чтобы стрелка не залезала на якорный элемент.
     */
    arrowHeight?: number;
    /**
     * Безопасная зона вокруг стрелки, чтобы та не выходила за края контента.
     */
    arrowPadding?: number;
    /**
     * Выставлять ширину равной target элементу.
     */
    sameWidth?: boolean;
    /**
     * Массив кастомных модификаторов для Popper (необходимо мемоизировать).
     */
    customMiddlewares?: UseFloatingMiddleware[];
    /**
     * Принудительно скрывает компонент если целевой элемент вышел за область видимости.
     */
    hideWhenReferenceHidden?: boolean;
}
export declare const useFloatingMiddlewaresBootstrap: ({ placement, arrowRef, arrow, arrowHeight, arrowPadding, sameWidth, offsetByMainAxis, offsetByCrossAxis, customMiddlewares, hideWhenReferenceHidden, }: UseFloatingMiddlewaresBootstrapOptions) => {
    middlewares: {
        name: string;
        options?: any;
        fn: (state: {
            x: number;
            y: number;
            platform: import("@floating-ui/core").Platform;
            placement: import("@floating-ui/utils").Placement;
            strategy: import("@floating-ui/utils").Strategy;
            middlewareData: import("@floating-ui/core").MiddlewareData;
            initialPlacement: import("@floating-ui/utils").Placement;
            rects: import("@floating-ui/utils").ElementRects;
            elements: import("@floating-ui/dom").Elements;
        }) => import("@floating-ui/core").MiddlewareReturn | Promise<import("@floating-ui/core").MiddlewareReturn>;
    }[];
    strictPlacement: import("@floating-ui/utils").Placement | undefined;
};
//# sourceMappingURL=index.d.ts.map