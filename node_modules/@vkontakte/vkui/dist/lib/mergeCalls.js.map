{"version":3,"sources":["../../src/lib/mergeCalls.ts"],"sourcesContent":["import { callMultiple } from './callMultiple';\n\n/**\n * Собирает события в callMultiple\n *\n * # Пример\n *\n * ```js\n * const handlers = mergeCalls(focusEvents, { onFocus, onBlur })\n * ```\n */\nexport function mergeCalls(...props: Array<Record<string, any>>): Record<string, any> {\n  const objectToArrays = props.reduce<Record<string, any[]>>((record, obj) => {\n    Object.entries(obj).forEach(([key, value]) => {\n      if (!record.hasOwnProperty(key)) {\n        record[key] = [];\n      }\n      record[key].push(value);\n    });\n\n    return record;\n  }, {});\n\n  return Object.entries(objectToArrays).reduce<Record<string, any>>((record, [key, array]) => {\n    record[key] = callMultiple(...array);\n    return record;\n  }, {});\n}\n"],"names":["callMultiple","mergeCalls","props","objectToArrays","reduce","record","obj","Object","entries","forEach","key","value","hasOwnProperty","push","array"],"mappings":"AAAA,SAASA,YAAY,QAAQ,iBAAiB;AAE9C;;;;;;;;CAQC,GACD,OAAO,SAASC,WAAW,GAAGC,KAAiC;IAC7D,MAAMC,iBAAiBD,MAAME,MAAM,CAAwB,CAACC,QAAQC;QAClEC,OAAOC,OAAO,CAACF,KAAKG,OAAO,CAAC,CAAC,CAACC,KAAKC,MAAM;YACvC,IAAI,CAACN,OAAOO,cAAc,CAACF,MAAM;gBAC/BL,MAAM,CAACK,IAAI,GAAG,EAAE;YAClB;YACAL,MAAM,CAACK,IAAI,CAACG,IAAI,CAACF;QACnB;QAEA,OAAON;IACT,GAAG,CAAC;IAEJ,OAAOE,OAAOC,OAAO,CAACL,gBAAgBC,MAAM,CAAsB,CAACC,QAAQ,CAACK,KAAKI,MAAM;QACrFT,MAAM,CAACK,IAAI,GAAGV,gBAAgBc;QAC9B,OAAOT;IACT,GAAG,CAAC;AACN"}