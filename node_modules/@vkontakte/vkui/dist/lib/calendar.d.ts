export declare const getYears: (currentYear: number, range: number) => {
    value: number;
    label: string;
}[];
export declare const getMonths: (locale?: string) => {
    value: number;
    label: string;
}[];
export declare const getDaysNames: (now: Date, weekStartsOn: 0 | 1 | 2 | 3 | 4 | 5 | 6, locale?: string) => string[];
export declare const navigateDate: (date?: Date | null, key?: string) => Date;
export declare const getWeeks: (viewDate: Date, weekStartsOn: 0 | 1 | 2 | 3 | 4 | 5 | 6) => Date[][];
export declare const setTimeEqual: (to: Date, from?: Date | null) => Date;
export declare const isFirstDay: (day: Date, dayOfWeek: number) => boolean;
export declare const isLastDay: (day: Date, dayOfWeek: number) => boolean;
/**
 * Возвращает дату, ограниченную `min` и/или `max` значениями
 */
export declare function clamp(day: Date, options?: {
    min?: Date;
    max?: Date;
}): Date;
/**
 * Позволяет определить удовлетворяет ли исходная дата заданным ограничения `min` и/или `max`
 */
export declare function isDayMinMaxRestricted(day: Date, options?: {
    min?: Date;
    max?: Date;
    withTime?: boolean;
}): boolean;
//# sourceMappingURL=calendar.d.ts.map