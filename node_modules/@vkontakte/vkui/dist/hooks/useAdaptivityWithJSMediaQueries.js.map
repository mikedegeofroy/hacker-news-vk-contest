{"version":3,"sources":["../../src/hooks/useAdaptivityWithJSMediaQueries.ts"],"sourcesContent":["import * as React from 'react';\nimport { canUseDOM, hasHover as hasHoverLib, hasMouse as hasPointerLib } from '@vkontakte/vkjs';\nimport {\n  AdaptivityContext,\n  type AdaptivityProps as BaseAdaptivityProps,\n} from '../components/AdaptivityProvider/AdaptivityContext';\nimport { getOrDefault } from '../helpers/getOrDefault';\nimport {\n  getSizeX,\n  getSizeY,\n  getViewHeightByMediaQueries,\n  getViewWidthByMediaQueries,\n  tryToCheckIsDesktop,\n} from '../lib/adaptivity';\nimport { matchMediaListAddListener, matchMediaListRemoveListener } from '../lib/matchMedia';\nimport { useMediaQueries } from './useMediaQueries';\nimport { usePlatform } from './usePlatform';\n\nexport interface UseAdaptivityWithJSMediaQueries extends Required<BaseAdaptivityProps> {\n  isDesktop: boolean;\n}\n\n/**\n * Высчитывает и возвращает параметры адаптивности при изменении вьюпорта.\n *\n * Берёт в приоритет значения из `AdaptivityContext`.\n *\n * > ⚠ SSR\n * >\n * > Во избежания ошибок при гидратации, не используйте данный хук, если есть вероятность, что компонент будет отрендерен\n * > на стороне сервера.\n * >\n * > Лучше всего использовать для всплывающих окон, т.к. они вызываются только после загрузки\n * > страницы либо пользователем, либо программно.\n */\nexport const useAdaptivityWithJSMediaQueries = (): UseAdaptivityWithJSMediaQueries => {\n  if (!canUseDOM) {\n    // eslint-disable-next-line no-console\n    console.error(`[useAdaptivityWithJSMediaQueries] Похоже, вы пытаетесь использовать хук вне браузера.\n\nПостарайтесь этого избегать, чтобы не было ошибок при гидратации: при SSR нет информации о размерах экрана.\n\nИспользуйте CSS Media Query или библиотеку по типу https://github.com/artsy/fresnel.`);\n  }\n\n  const {\n    viewWidth: viewWidthContext,\n    viewHeight: viewHeightContext,\n    sizeX: sizeXContext,\n    sizeY: sizeYContext,\n    hasPointer: hasPointerContext,\n    hasHover: hasHoverContext,\n  } = React.useContext(AdaptivityContext);\n\n  const platform = usePlatform();\n  const mediaQueries = useMediaQueries();\n\n  const [[viewWidthLocal, viewHeightLocal], setViewSizeLocal] = React.useState(() => [\n    getOrDefault(viewWidthContext, getViewWidthByMediaQueries(mediaQueries)),\n    getOrDefault(viewHeightContext, getViewHeightByMediaQueries(mediaQueries)),\n  ]);\n\n  const adaptivityProps = React.useMemo(() => {\n    const hasPointer = getOrDefault(hasPointerContext, hasPointerLib);\n    const hasHover = getOrDefault(hasHoverContext, hasHoverLib);\n    const viewWidth = getOrDefault(viewWidthContext, viewWidthLocal);\n    const viewHeight = getOrDefault(viewHeightContext, viewHeightLocal);\n    const sizeX = getOrDefault(sizeXContext, getSizeX(viewWidth));\n    const sizeY = getOrDefault(sizeYContext, getSizeY(viewWidth, viewHeight, hasPointer));\n    const isDesktop = tryToCheckIsDesktop(viewWidth, viewHeight, hasPointer, platform);\n\n    return {\n      viewWidth,\n      viewHeight,\n      sizeX,\n      sizeY,\n      hasPointer,\n      hasHover,\n      isDesktop,\n    };\n  }, [\n    viewWidthLocal,\n    viewHeightLocal,\n    viewWidthContext,\n    viewHeightContext,\n    sizeXContext,\n    sizeYContext,\n    hasPointerContext,\n    hasHoverContext,\n    platform,\n  ]);\n\n  React.useEffect(() => {\n    const handleMediaQuery = () => {\n      setViewSizeLocal((prevSizeLocal) => {\n        const newViewWidthLocal = getOrDefault(\n          viewWidthContext,\n          getViewWidthByMediaQueries(mediaQueries),\n        );\n        const newViewHeightLocal = getOrDefault(\n          viewHeightContext,\n          getViewHeightByMediaQueries(mediaQueries),\n        );\n\n        const [prevViewWidthLocal, prevViewHeightLocal] = prevSizeLocal;\n\n        if (\n          prevViewWidthLocal !== newViewWidthLocal ||\n          prevViewHeightLocal !== newViewHeightLocal\n        ) {\n          return [newViewWidthLocal, newViewHeightLocal];\n        }\n\n        return prevSizeLocal;\n      });\n    };\n\n    if (!viewWidthContext) {\n      [\n        mediaQueries.desktopPlus,\n        mediaQueries.tablet,\n        mediaQueries.smallTablet,\n        mediaQueries.mobile,\n      ].forEach((matchMediaListener) =>\n        matchMediaListAddListener(matchMediaListener, handleMediaQuery),\n      );\n    }\n\n    if (!viewHeightContext) {\n      [mediaQueries.mediumHeight, mediaQueries.mobileLandscapeHeight].forEach(\n        (matchMediaListener) => matchMediaListAddListener(matchMediaListener, handleMediaQuery),\n      );\n    }\n\n    return () => {\n      [\n        mediaQueries.desktopPlus,\n        mediaQueries.tablet,\n        mediaQueries.smallTablet,\n        mediaQueries.mobile,\n        mediaQueries.mediumHeight,\n        mediaQueries.mobileLandscapeHeight,\n      ].forEach((matchMediaListener) =>\n        matchMediaListRemoveListener(matchMediaListener, handleMediaQuery),\n      );\n    };\n  }, [mediaQueries, viewWidthContext, viewHeightContext]);\n\n  return adaptivityProps;\n};\n"],"names":["React","canUseDOM","hasHover","hasHoverLib","hasMouse","hasPointerLib","AdaptivityContext","getOrDefault","getSizeX","getSizeY","getViewHeightByMediaQueries","getViewWidthByMediaQueries","tryToCheckIsDesktop","matchMediaListAddListener","matchMediaListRemoveListener","useMediaQueries","usePlatform","useAdaptivityWithJSMediaQueries","console","error","viewWidth","viewWidthContext","viewHeight","viewHeightContext","sizeX","sizeXContext","sizeY","sizeYContext","hasPointer","hasPointerContext","hasHoverContext","useContext","platform","mediaQueries","viewWidthLocal","viewHeightLocal","setViewSizeLocal","useState","adaptivityProps","useMemo","isDesktop","useEffect","handleMediaQuery","prevSizeLocal","newViewWidthLocal","newViewHeightLocal","prevViewWidthLocal","prevViewHeightLocal","desktopPlus","tablet","smallTablet","mobile","forEach","matchMediaListener","mediumHeight","mobileLandscapeHeight"],"mappings":"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"}