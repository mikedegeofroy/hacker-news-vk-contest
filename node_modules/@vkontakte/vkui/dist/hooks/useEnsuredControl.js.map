{"version":3,"sources":["../../src/hooks/useEnsuredControl.ts"],"sourcesContent":["import * as React from 'react';\nimport { isFunction } from '@vkontakte/vkjs';\nimport { useIsomorphicLayoutEffect } from '../lib/useIsomorphicLayoutEffect';\n\nexport interface UseEnsuredControlProps<V, E extends React.ChangeEvent<any>> {\n  value?: V;\n  defaultValue: V;\n  disabled?: boolean | undefined;\n  onChange?(this: void, e: E): any;\n}\n\nexport function useEnsuredControl<V, E extends React.ChangeEvent<any>>({\n  onChange: onChangeProp,\n  disabled,\n  ...props\n}: UseEnsuredControlProps<V, E>): [V, (e: E) => any] {\n  const [value, onChangeValue] = useCustomEnsuredControl(props);\n\n  const onChange = React.useCallback(\n    (e: E) => {\n      if (disabled) {\n        return;\n      }\n\n      onChangeValue(e.target.value);\n      onChangeProp && onChangeProp(e);\n    },\n    [onChangeValue, onChangeProp, disabled],\n  );\n\n  return [value, onChange];\n}\n\nexport interface UseCustomEnsuredControlProps<V> {\n  value?: V;\n  defaultValue: V;\n  disabled?: boolean | undefined;\n  onChange?(this: void, v: V): any;\n}\n\nexport function useCustomEnsuredControl<V = any>({\n  value,\n  defaultValue,\n  disabled,\n  onChange: onChangeProp,\n}: UseCustomEnsuredControlProps<V>): [V, React.Dispatch<React.SetStateAction<V>>] {\n  const isControlled = value !== undefined;\n  const [localValue, setLocalValue] = React.useState(defaultValue);\n  const preservedControlledValueRef = React.useRef<V>();\n\n  useIsomorphicLayoutEffect(() => {\n    preservedControlledValueRef.current = value;\n  });\n\n  const onChange = React.useCallback(\n    (nextValue: V | ((prevValue: any) => V)) => {\n      if (disabled) {\n        return;\n      }\n\n      if (isFunction(nextValue)) {\n        if (!isControlled) {\n          setLocalValue((prevValue) => {\n            const resolvedValue = nextValue(prevValue);\n            if (onChangeProp) {\n              onChangeProp(resolvedValue);\n            }\n            return resolvedValue;\n          });\n        } else if (onChangeProp) {\n          const resolvedValue = nextValue(preservedControlledValueRef.current);\n          onChangeProp(resolvedValue);\n        }\n      } else {\n        if (onChangeProp) {\n          onChangeProp(nextValue);\n        }\n        if (!isControlled) {\n          setLocalValue(nextValue);\n        }\n      }\n    },\n    [disabled, isControlled, onChangeProp],\n  );\n\n  return [isControlled ? value : localValue, onChange];\n}\n"],"names":["React","isFunction","useIsomorphicLayoutEffect","useEnsuredControl","onChange","onChangeProp","disabled","props","value","onChangeValue","useCustomEnsuredControl","useCallback","e","target","defaultValue","isControlled","undefined","localValue","setLocalValue","useState","preservedControlledValueRef","useRef","current","nextValue","prevValue","resolvedValue"],"mappings":";AAAA,YAAYA,WAAW,QAAQ;AAC/B,SAASC,UAAU,QAAQ,kBAAkB;AAC7C,SAASC,yBAAyB,QAAQ,mCAAmC;AAS7E,OAAO,SAASC,kBAAuD;QAAA,EACrEC,UAAUC,YAAY,EACtBC,QAAQ,EAEqB,GAJwC,QAGlEC,mCAHkE;QACrEH;QACAE;;IAGA,MAAM,CAACE,OAAOC,cAAc,GAAGC,wBAAwBH;IAEvD,MAAMH,WAAWJ,MAAMW,WAAW,CAChC,CAACC;QACC,IAAIN,UAAU;YACZ;QACF;QAEAG,cAAcG,EAAEC,MAAM,CAACL,KAAK;QAC5BH,gBAAgBA,aAAaO;IAC/B,GACA;QAACH;QAAeJ;QAAcC;KAAS;IAGzC,OAAO;QAACE;QAAOJ;KAAS;AAC1B;AASA,OAAO,SAASM,wBAAiC,EAC/CF,KAAK,EACLM,YAAY,EACZR,QAAQ,EACRF,UAAUC,YAAY,EACU;IAChC,MAAMU,eAAeP,UAAUQ;IAC/B,MAAM,CAACC,YAAYC,cAAc,GAAGlB,MAAMmB,QAAQ,CAACL;IACnD,MAAMM,8BAA8BpB,MAAMqB,MAAM;IAEhDnB,0BAA0B;QACxBkB,4BAA4BE,OAAO,GAAGd;IACxC;IAEA,MAAMJ,WAAWJ,MAAMW,WAAW,CAChC,CAACY;QACC,IAAIjB,UAAU;YACZ;QACF;QAEA,IAAIL,WAAWsB,YAAY;YACzB,IAAI,CAACR,cAAc;gBACjBG,cAAc,CAACM;oBACb,MAAMC,gBAAgBF,UAAUC;oBAChC,IAAInB,cAAc;wBAChBA,aAAaoB;oBACf;oBACA,OAAOA;gBACT;YACF,OAAO,IAAIpB,cAAc;gBACvB,MAAMoB,gBAAgBF,UAAUH,4BAA4BE,OAAO;gBACnEjB,aAAaoB;YACf;QACF,OAAO;YACL,IAAIpB,cAAc;gBAChBA,aAAakB;YACf;YACA,IAAI,CAACR,cAAc;gBACjBG,cAAcK;YAChB;QACF;IACF,GACA;QAACjB;QAAUS;QAAcV;KAAa;IAGxC,OAAO;QAACU,eAAeP,QAAQS;QAAYb;KAAS;AACtD"}