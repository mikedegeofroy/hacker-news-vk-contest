{"version":3,"sources":["../../src/lib/replacer.ts"],"sourcesContent":["import { escapeRegExp } from '../regexp';\n\nexport class Replacer {\n  private regexp: RegExp | undefined;\n  private map: Record<string, string>;\n\n  constructor(map: Record<string, string>) {\n    this.map = map;\n  }\n\n  private build() {\n    if (this.regexp) {\n      return;\n    }\n\n    const groups = Object.keys(this.map)\n      .map(escapeRegExp)\n      .sort((a, b) => b.length - a.length);\n    const pattern = `(?:${groups.join('|')})`;\n\n    this.regexp = new RegExp(pattern, 'g');\n  }\n\n  replace(string: string) {\n    if (!string) {\n      return '';\n    }\n\n    this.build();\n\n    return string.replace(this.regexp!, (substring) => this.map[substring]);\n  }\n}\n"],"names":["Replacer","map","regexp","build","groups","Object","keys","escapeRegExp","sort","a","b","length","pattern","join","RegExp","replace","string","substring"],"mappings":";;;;+BAEaA;;;eAAAA;;;;;;sBAFgB;AAEtB,IAAA,AAAMA,yBAAD,AAAL;;aAAMA,SAICC,GAA2B;kCAJ5BD;QACX,yBAAQE,UAAR,KAAA;QACA,yBAAQD,OAAR,KAAA;QAGE,IAAI,CAACA,GAAG,GAAGA;;oBALFD;;YAQHG,KAAAA;mBAAR,SAAQA;gBACN,IAAI,IAAI,CAACD,MAAM,EAAE;oBACf;gBACF;gBAEA,IAAME,SAASC,OAAOC,IAAI,CAAC,IAAI,CAACL,GAAG,EAChCA,GAAG,CAACM,oBAAY,EAChBC,IAAI,CAAC,SAACC,GAAGC;2BAAMA,EAAEC,MAAM,GAAGF,EAAEE,MAAM;;gBACrC,IAAMC,UAAU,AAAC,MAAsB,OAAjBR,OAAOS,IAAI,CAAC,MAAK;gBAEvC,IAAI,CAACX,MAAM,GAAG,IAAIY,OAAOF,SAAS;YACpC;;;YAEAG,KAAAA;mBAAAA,SAAAA,QAAQC,MAAc;;gBACpB,IAAI,CAACA,QAAQ;oBACX,OAAO;gBACT;gBAEA,IAAI,CAACb,KAAK;gBAEV,OAAOa,OAAOD,OAAO,CAAC,IAAI,CAACb,MAAM,EAAG,SAACe;2BAAc,MAAKhB,GAAG,CAACgB,UAAU;;YACxE;;;WA7BWjB"}