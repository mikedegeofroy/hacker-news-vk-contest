{"version":3,"sources":["../src/date.ts"],"sourcesContent":["import { leadingZero } from './numbers';\n\nexport const SECONDS_IN_THE_DAY = 86400;\nconst MILLISECONDS_IN_THE_DAY = SECONDS_IN_THE_DAY * 1000;\n\n/**\n * Проверяет, что переданная дата является сегодняшним днём\n */\nexport function isDateToday(date: Date): boolean {\n  const now = new Date();\n  const d = now.getDate();\n  const m = now.getMonth();\n  const y = now.getFullYear();\n\n  return date.getFullYear() === y && date.getMonth() === m && date.getDate() === d;\n}\n\n/**\n * Проверяет, что переданная дата - вчерашний день\n */\nexport function isDateYesterday(date: Date): boolean {\n  const yesterdayDate = new Date(date.getTime() + MILLISECONDS_IN_THE_DAY);\n  return isDateToday(yesterdayDate);\n}\n\n/**\n * Проверяет, что переданная дата - завтрашний день\n */\nexport function isDateTomorrow(date: Date): boolean {\n  const tomorrowDate = new Date(date.getTime() - MILLISECONDS_IN_THE_DAY);\n  return isDateToday(tomorrowDate);\n}\n\n/**\n * Проверяет что переданные даты находятся в одном дне\n */\nexport function isSameDate(d1: Date, d2: Date): boolean {\n  return (\n    d1.getDate() === d2.getDate() &&\n    d1.getMonth() === d2.getMonth() &&\n    d1.getFullYear() === d2.getFullYear()\n  );\n}\n\n/**\n * Возвращает новую дату — начало переданного дня\n */\nexport function getBeginningOfDay(date: Date) {\n  const year = date.getFullYear();\n  const month = date.getMonth();\n  const day = date.getDate();\n\n  return new Date(year, month, day, 0, 0, 0, 0);\n}\n\nexport function isLeapYear(year: number) {\n  return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n}\n\n/**\n * Возвращает кол-во дней в месяце (последнее число месяца)\n */\nexport function getLastDayOfMonth(year: number, month: number): number {\n  if (+month === 2) {\n    return isLeapYear(year) ? 29 : 28;\n  } else if (month > 0 && ((month < 8 && month % 2 === 0) || (month > 7 && month % 2 === 1))) {\n    return 30;\n  }\n  return 31;\n}\n\n/**\n * Ближайший понедельник в прошлом относительно date\n */\nexport function getStartOfWeek(date: Date): Date {\n  const weekDay = date.getDay();\n  if (weekDay === 0) {\n    return addDays(date, -6);\n  }\n  return addDays(date, -weekDay + 1);\n}\n\n/**\n * Добавляет дни к дате и возвращает новый объект\n */\nexport function addDays(date: Date, dayCount: number): Date {\n  const modified = new Date(date.getTime());\n  modified.setDate(modified.getDate() + dayCount);\n  return modified;\n}\n\n/**\n * Создаёт дату из Unix Timestamp\n */\nexport function createDateFromUnixTimestamp(timestamp: number): Date {\n  return new Date(timestamp * 1000);\n}\n\n/**\n * Возвращает Unix Timestamp из даты\n */\nexport function getUnixTimestampFromDate(date: Date): number {\n  return Math.floor(date.getTime() / 1000);\n}\n\n/**\n * Возвращает дату в формате YYYY-MM-DD\n */\nexport function convertDateToInputFormat(date: Date): string {\n  const day = date.getDate();\n  const month = date.getMonth() + 1;\n  const year = date.getFullYear();\n\n  return [year, leadingZero(month), leadingZero(day)].join('-');\n}\n"],"names":["SECONDS_IN_THE_DAY","addDays","convertDateToInputFormat","createDateFromUnixTimestamp","getBeginningOfDay","getLastDayOfMonth","getStartOfWeek","getUnixTimestampFromDate","isDateToday","isDateTomorrow","isDateYesterday","isLeapYear","isSameDate","MILLISECONDS_IN_THE_DAY","date","now","Date","d","getDate","m","getMonth","y","getFullYear","yesterdayDate","getTime","tomorrowDate","d1","d2","year","month","day","weekDay","getDay","dayCount","modified","setDate","timestamp","Math","floor","leadingZero","join"],"mappings":"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"}