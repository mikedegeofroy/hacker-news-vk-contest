import { uniqueKey } from './common';
export class RootConfig {
    constructor(id, views) {
        this.id = id;
        this.views = views;
        if (!views.length) {
            throw new Error(`Trying to create root ${id} without views. Root must have at least one view.`);
        }
        views.forEach((views) => {
            // eslint-disable-next-line @typescript-eslint/ban-ts-comment
            // @ts-expect-error
            this[uniqueKey(this, views.id)] = views;
        });
    }
    get children() {
        return this.views;
    }
    getRoutes() {
        return this.views
            .map((view) => view.getRoutes())
            .flat()
            .map((viewRoute) => ({ ...viewRoute, root: this.id }));
    }
}
export function createRoot(id, views) {
    return new RootConfig(id, views);
}
//# sourceMappingURL=RootConfig.js.map