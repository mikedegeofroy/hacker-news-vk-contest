{"version":3,"file":"PanelPage.js","sourceRoot":"","sources":["../../src/page-types/PanelPage.ts"],"names":[],"mappings":"AAAA,OAAO,EAA2D,SAAS,EAAE,MAAM,UAAU,CAAC;AAa9F,MAAe,aAAa;IAC1B,YAA6B,EAAK,EAAS,IAAY,EAAY,MAAoB;QAA1D,OAAE,GAAF,EAAE,CAAG;QAAS,SAAI,GAAJ,IAAI,CAAQ;QAAY,WAAM,GAAN,MAAM,CAAc;QACrF,MAAM,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,EAAE;YACvB,6DAA6D;YAC7D,mBAAmB;YACnB,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,CAAC,CAAC,GAAG,KAAK,CAAC;QAC1C,CAAC,CAAC,CAAC;IACL,CAAC;IAED,SAAS;QACP,OAAO,IAAI,CAAC,MAAM;aACf,GAAG,CAAC,CAAC,UAAU,EAAE,EAAE,CAAC,UAAU,CAAC,SAAS,EAAE,CAAC;aAC3C,IAAI,EAAE;aACN,GAAG,CAAC,CAAC,KAAK,EAAqB,EAAE,CAAC,CAAC,EAAE,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC;aACjE,MAAM,CAAC;YACN,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,KAAK,EAAE,IAAI,CAAC,EAAE;SACf,CAAC,CAAC;IACP,CAAC;CACF;AAED,MAAM,OAAO,SAA4B,SAAQ,aAAgB;IAE/D,YAAY,EAAK,EAAS,IAAY,EAAE,SAAuB,EAAE;QAC/D,KAAK,CAAC,EAAE,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC;QADA,SAAI,GAAJ,IAAI,CAAQ;QADtC,cAAS,GAAU,KAAK,CAAC;IAGzB,CAAC;CACF;AAED,MAAM,OAAO,mBAAwD,SAAQ,aAAgB;IAE3F,YAAmB,EAAK,EAAS,IAAY,EAAS,SAAuB,EAAE,SAAuB,EAAE;QACtG,KAAK,CAAC,EAAE,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC;QADP,OAAE,GAAF,EAAE,CAAG;QAAS,SAAI,GAAJ,IAAI,CAAQ;QAAS,cAAS,GAAT,SAAS,CAAc;QAD7E,cAAS,GAAS,IAAI,CAAC;IAGvB,CAAC;CACF;AAkHD,MAAM,UAAU,WAAW,CAAqC,EAAK,EAAE,IAAY,EAAE,MAAqB,EAAE,SAAwB;IAElI,IAAI,SAAS,EAAE;QACb,OAAO,IAAI,mBAAmB,CAAC,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,MAAM,IAAI,EAAE,CAAC,CAAC;KACnE;IACD,OAAO,IAAI,SAAS,CAAC,EAAE,EAAE,IAAI,EAAE,MAAM,IAAI,EAAE,CAAC,CAAC;AAC/C,CAAC","sourcesContent":["import { AddChild, HasId, Page, PageWithParams, RepresentsRoutes, uniqueKey } from './common';\nimport { AnyModalPage } from './ModalPage';\nimport { CommonRouteObject } from '../type';\nimport { AnyTabPage } from './TabPage';\n\ninterface PanelRoutePartial extends CommonRouteObject {\n  panel: string;\n  tab?: string;\n  modal?: string;\n}\n\ntype AnySubPage = AnyModalPage | AnyTabPage;\n\nabstract class BasePanelPage<I extends string> implements RepresentsRoutes<PanelRoutePartial>, HasId<I> {\n  protected constructor(public id: I, public path: string, protected modals: AnySubPage[]) {\n    modals.forEach((modal) => {\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-expect-error\n      this[uniqueKey(this, modal.id)] = modal;\n    });\n  }\n\n  getRoutes(): PanelRoutePartial[] {\n    return this.modals\n      .map((modalOrTab) => modalOrTab.getRoutes())\n      .flat()\n      .map((route): PanelRoutePartial => ({ ...route, panel: this.id }))\n      .concat({\n        path: this.path,\n        panel: this.id,\n      });\n  }\n}\n\nexport class PanelPage<I extends string> extends BasePanelPage<I> implements Page, HasId<I> {\n  hasParams: false = false;\n  constructor(id: I, public path: string, modals: AnySubPage[] = []) {\n    super(id, path, modals);\n  }\n}\n\nexport class PanelPageWithParams<I extends string, T extends string> extends BasePanelPage<I> implements PageWithParams<T>, HasId<I> {\n  hasParams: true = true;\n  constructor(public id: I, public path: string, public paramKeys: readonly T[], modals: AnySubPage[] = []) {\n    super(id, path, modals);\n  }\n}\n\nexport type AnyPanel = PanelPage<any> | PanelPageWithParams<any, any>;\n\nexport function createPanel<\n  T extends string,\n  A extends AnySubPage, B extends AnySubPage, C extends AnySubPage, D extends AnySubPage,\n  E extends AnySubPage, F extends AnySubPage, G extends AnySubPage, H extends AnySubPage,\n  I extends AnySubPage, J extends AnySubPage,\n>(id: T, path: string, modals: [A, B, C, D, E, F, G, H, I, J]):\nAddChild<AddChild<AddChild<AddChild<AddChild<AddChild<AddChild<AddChild<AddChild<\nAddChild<PanelPage<T>, A>, B>, C>, D>, E>, F>, G>, H>, I>, J>;\nexport function createPanel<\n  T extends string,\n  A extends AnySubPage, B extends AnySubPage, C extends AnySubPage, D extends AnySubPage,\n  E extends AnySubPage, F extends AnySubPage, G extends AnySubPage, H extends AnySubPage,\n  I extends AnySubPage,\n>(id: T, path: string, modals: [A, B, C, D, E, F, G, H, I]):\nAddChild<AddChild<AddChild<AddChild<AddChild<AddChild<AddChild<AddChild<\nAddChild<PanelPage<T>, A>, B>, C>, D>, E>, F>, G>, H>, I>;\nexport function createPanel<\n  T extends string,\n  A extends AnySubPage, B extends AnySubPage, C extends AnySubPage, D extends AnySubPage,\n  E extends AnySubPage, F extends AnySubPage, G extends AnySubPage, H extends AnySubPage,\n>(id: T, path: string, modals: [A, B, C, D, E, F, G, H]):\nAddChild<AddChild<AddChild<AddChild<AddChild<AddChild<AddChild<AddChild<PanelPage<T>, A>, B>, C>, D>, E>, F>, G>, H>;\nexport function createPanel<\n  T extends string,\n  A extends AnySubPage, B extends AnySubPage, C extends AnySubPage, D extends AnySubPage,\n  E extends AnySubPage, F extends AnySubPage, G extends AnySubPage,\n>(id: T, path: string, modals: [A, B, C, D, E, F, G]):\nAddChild<AddChild<AddChild<AddChild<AddChild<AddChild<AddChild<PanelPage<T>, A>, B>, C>, D>, E>, F>, G>;\nexport function createPanel<\n  T extends string,\n  A extends AnySubPage, B extends AnySubPage, C extends AnySubPage, D extends AnySubPage,\n  E extends AnySubPage, F extends AnySubPage,\n>(id: T, path: string, modals: [A, B, C, D, E, F]):\nAddChild<AddChild<AddChild<AddChild<AddChild<AddChild<PanelPage<T>, A>, B>, C>, D>, E>, F>;\nexport function createPanel<\n  T extends string,\n  A extends AnySubPage, B extends AnySubPage, C extends AnySubPage, D extends AnySubPage,\n  E extends AnySubPage,\n>(id: T, path: string, modals: [A, B, C, D, E]):\nAddChild<AddChild<AddChild<AddChild<AddChild<PanelPage<T>, A>, B>, C>, D>, E>;\nexport function createPanel<\n  T extends string,\n  A extends AnySubPage, B extends AnySubPage, C extends AnySubPage, D extends AnySubPage,\n>(id: T, path: string, modals: [A, B, C, D]):\nAddChild<AddChild<AddChild<AddChild<PanelPage<T>, A>, B>, C>, D>;\nexport function createPanel<\n  T extends string, A extends AnySubPage, B extends AnySubPage, C extends AnySubPage,\n>(id: T, path: string, modals: [A, B, C]): AddChild<AddChild<AddChild<PanelPage<T>, A>, B>, C>;\nexport function createPanel<\n  T extends string, A extends AnySubPage, B extends AnySubPage,\n>(id: T, path: string, modals: [A, B]): AddChild<AddChild<PanelPage<T>, A>, B>;\nexport function createPanel<T extends string, A extends AnySubPage>(id: T, path: string, modals: [A]): AddChild<PanelPage<T>, A>;\nexport function createPanel<T extends string>(id: T, path: string, modals?: AnySubPage[]): PanelPage<T>;\n\nexport function createPanel<\n  T extends string, P extends string,\n  A extends AnySubPage, B extends AnySubPage, C extends AnySubPage, D extends AnySubPage,\n  E extends AnySubPage, F extends AnySubPage, G extends AnySubPage, H extends AnySubPage,\n  I extends AnySubPage, J extends AnySubPage,\n>(id: T, path: string, modals: [A, B, C, D, E, F, G, H, I, J], paramKeys: readonly P[]):\nAddChild<AddChild<AddChild<AddChild<AddChild<AddChild<AddChild<AddChild<AddChild<\nAddChild<PanelPageWithParams<T, P>, A>, B>, C>, D>, E>, F>, G>, H>, I>, J>;\nexport function createPanel<\n  T extends string, P extends string,\n  A extends AnySubPage, B extends AnySubPage, C extends AnySubPage, D extends AnySubPage,\n  E extends AnySubPage, F extends AnySubPage, G extends AnySubPage, H extends AnySubPage,\n  I extends AnySubPage,\n>(id: T, path: string, modals: [A, B, C, D, E, F, G, H, I], paramKeys: readonly P[]):\nAddChild<AddChild<AddChild<AddChild<AddChild<AddChild<AddChild<AddChild<\nAddChild<PanelPageWithParams<T, P>, A>, B>, C>, D>, E>, F>, G>, H>, I>;\nexport function createPanel<\n  T extends string, P extends string,\n  A extends AnySubPage, B extends AnySubPage, C extends AnySubPage, D extends AnySubPage,\n  E extends AnySubPage, F extends AnySubPage, G extends AnySubPage, H extends AnySubPage,\n>(id: T, path: string, modals: [A, B, C, D, E, F, G, H], paramKeys: readonly P[]):\nAddChild<AddChild<AddChild<AddChild<AddChild<AddChild<AddChild<AddChild<PanelPageWithParams<T, P>, A>, B>, C>, D>, E>, F>, G>, H>;\nexport function createPanel<\n  T extends string, P extends string,\n  A extends AnySubPage, B extends AnySubPage, C extends AnySubPage, D extends AnySubPage,\n  E extends AnySubPage, F extends AnySubPage, G extends AnySubPage,\n>(id: T, path: string, modals: [A, B, C, D, E, F, G], paramKeys: readonly P[]):\nAddChild<AddChild<AddChild<AddChild<AddChild<AddChild<AddChild<PanelPageWithParams<T, P>, A>, B>, C>, D>, E>, F>, G>;\nexport function createPanel<\n  T extends string, P extends string,\n  A extends AnySubPage, B extends AnySubPage, C extends AnySubPage, D extends AnySubPage,\n  E extends AnySubPage, F extends AnySubPage,\n>(id: T, path: string, modals: [A, B, C, D, E, F], paramKeys: readonly P[]):\nAddChild<AddChild<AddChild<AddChild<AddChild<AddChild<PanelPageWithParams<T, P>, A>, B>, C>, D>, E>, F>;\nexport function createPanel<\n  T extends string, P extends string,\n  A extends AnySubPage, B extends AnySubPage, C extends AnySubPage, D extends AnySubPage,\n  E extends AnySubPage,\n>(id: T, path: string, modals: [A, B, C, D, E], paramKeys: readonly P[]):\nAddChild<AddChild<AddChild<AddChild<AddChild<PanelPageWithParams<T, P>, A>, B>, C>, D>, E>;\nexport function createPanel<\n  T extends string, P extends string,\n  A extends AnySubPage, B extends AnySubPage, C extends AnySubPage, D extends AnySubPage,\n>(id: T, path: string, modals: [A, B, C, D], paramKeys: readonly P[]):\nAddChild<AddChild<AddChild<AddChild<PanelPageWithParams<T, P>, A>, B>, C>, D>;\nexport function createPanel<\n  T extends string, P extends string,\n  A extends AnySubPage, B extends AnySubPage, C extends AnySubPage,\n>(id: T, path: string, modals: [A, B, C], paramKeys: readonly P[]): AddChild<AddChild<AddChild<PanelPageWithParams<T, P>, A>, B>, C>;\nexport function createPanel<\n  T extends string, P extends string, A extends AnySubPage, B extends AnySubPage,\n>(id: T, path: string, modals: [A, B], paramKeys: readonly P[]): AddChild<AddChild<PanelPageWithParams<T, P>, A>, B>;\nexport function createPanel<\n  T extends string, P extends string, A extends AnySubPage,\n>(id: T, path: string, modals: [A], paramKeys: readonly P[]): AddChild<PanelPageWithParams<T, P>, A>;\nexport function createPanel<T extends string, P extends string>(id: T, path: string, modals: AnySubPage[], paramKeys: readonly P[]): PanelPageWithParams<T, P>;\nexport function createPanel<T extends string, P extends string>(id: T, path: string, modals?: AnySubPage[], paramKeys?: readonly P[]):\nPanelPage<T> | PanelPageWithParams<T, P> {\n  if (paramKeys) {\n    return new PanelPageWithParams(id, path, paramKeys, modals ?? []);\n  }\n  return new PanelPage(id, path, modals ?? []);\n}\n"]}