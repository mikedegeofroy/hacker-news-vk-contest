{"version":3,"file":"RoutesConfig.js","sourceRoot":"","sources":["../../src/page-types/RoutesConfig.ts"],"names":[],"mappings":"AAEA,OAAO,EAA8B,SAAS,EAAE,MAAM,UAAU,CAAC;AAWjE,MAAM,OAAO,YAAY;IAGvB,gEAAgE;IAChE;QAHQ,UAAK,GAAgD,EAAE,CAAC;IAGzC,CAAC;IAExB,SAAS;QACP,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC;IAC3D,CAAC;IA2BD,MAAM,CAAC,MAAM,CAAC,MAAmD;QAC/D,MAAM,MAAM,GAAG,IAAI,YAAY,EAAE,CAAC;QAClC,MAAM,CAAC,KAAK,GAAG,MAAM,CAAC;QACtB,MAAM,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,EAAE;YACvB,6DAA6D;YAC7D,mBAAmB;YACnB,MAAM,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,EAAE,CAAC,CAAC,GAAG,KAAK,CAAC;QAC9C,CAAC,CAAC,CAAC;QACH,OAAO,MAAM,CAAC;IAChB,CAAC;CACF","sourcesContent":["import { RootConfig } from './RootConfig';\nimport { ViewConfig } from './ViewConfig';\nimport { AddChild, RepresentsRoutes, uniqueKey } from './common';\nimport { CommonRouteObject } from '../type';\n\ninterface RoutePartial extends CommonRouteObject {\n  root?: string;\n  view: string;\n  panel: string;\n  modal?: string;\n  tab?: string;\n}\n\nexport class RoutesConfig implements RepresentsRoutes<RoutePartial> {\n  private items: ViewConfig<string>[] | RootConfig<string>[] = [];\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  private constructor() {}\n\n  getRoutes(): RoutePartial[] {\n    return this.items.map((item) => item.getRoutes()).flat();\n  }\n\n  static create<\n    A extends RootConfig<string>, B extends RootConfig<string>, C extends RootConfig<string>, D extends RootConfig<string>,\n    E extends RootConfig<string>\n  >(routes: [A, B, C, D, E]): AddChild<AddChild<AddChild<AddChild<AddChild<RoutesConfig, A>, B>, C>, D>, E>\n  static create<\n    A extends RootConfig<string>, B extends RootConfig<string>, C extends RootConfig<string>, D extends RootConfig<string>\n  >(routes: [A, B, C, D]): AddChild<AddChild<AddChild<AddChild<RoutesConfig, A>, B>, C>, D>\n  static create<\n    A extends RootConfig<string>, B extends RootConfig<string>, C extends RootConfig<string>\n  >(routes: [A, B, C]): AddChild<AddChild<AddChild<RoutesConfig, A>, B>, C>\n  static create<A extends RootConfig<string>, B extends RootConfig<string>>(routes: [A, B]): AddChild<AddChild<RoutesConfig, A>, B>\n  static create<A extends RootConfig<string>>(routes: [A]): AddChild<RoutesConfig, A>\n\n  static create<\n    A extends ViewConfig<string>, B extends ViewConfig<string>, C extends ViewConfig<string>, D extends ViewConfig<string>,\n    E extends ViewConfig<string>\n  >(routes: [A, B, C, D, E]): AddChild<AddChild<AddChild<AddChild<AddChild<RoutesConfig, A>, B>, C>, D>, E>\n  static create<\n    A extends ViewConfig<string>, B extends ViewConfig<string>, C extends ViewConfig<string>, D extends ViewConfig<string>\n  >(routes: [A, B, C, D]): AddChild<AddChild<AddChild<AddChild<RoutesConfig, A>, B>, C>, D>\n  static create<\n    A extends ViewConfig<string>, B extends ViewConfig<string>, C extends ViewConfig<string>\n  >(routes: [A, B, C]): AddChild<AddChild<AddChild<RoutesConfig, A>, B>, C>\n  static create<A extends ViewConfig<string>, B extends ViewConfig<string>>(routes: [A, B]): AddChild<AddChild<RoutesConfig, A>, B>\n  static create<A extends ViewConfig<string>>(routes: [A]): AddChild<RoutesConfig, A>\n  static create(routes: ViewConfig<string>[] | RootConfig<string>[]): RoutesConfig {\n    const config = new RoutesConfig();\n    config.items = routes;\n    routes.forEach((route) => {\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-expect-error\n      config[uniqueKey(config, route.id)] = route;\n    });\n    return config;\n  }\n}\n"]}