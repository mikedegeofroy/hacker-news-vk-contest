{"version":3,"file":"ModalPage.js","sourceRoot":"","sources":["../../src/page-types/ModalPage.ts"],"names":[],"mappings":"AAOA,MAAM,OAAO,SAAS;IAEpB,YAAmB,EAAK,EAAS,IAAY;QAA1B,OAAE,GAAF,EAAE,CAAG;QAAS,SAAI,GAAJ,IAAI,CAAQ;QAD7C,cAAS,GAAU,KAAK,CAAC;IACuB,CAAC;IAEjD,SAAS;QACP,OAAO,CAAC;gBACN,IAAI,EAAE,IAAI,CAAC,IAAI;gBACf,KAAK,EAAE,IAAI,CAAC,EAAE;aACf,CAAC,CAAC;IACL,CAAC;CACF;AAED,MAAM,OAAO,mBAAmB;IAE9B,YAAmB,EAAK,EAAS,IAAY,EAAS,SAAuB;QAA1D,OAAE,GAAF,EAAE,CAAG;QAAS,SAAI,GAAJ,IAAI,CAAQ;QAAS,cAAS,GAAT,SAAS,CAAc;QAD7E,cAAS,GAAS,IAAI,CAAC;IACyD,CAAC;IAEjF,SAAS;QACP,OAAO,CAAC;gBACN,IAAI,EAAE,IAAI,CAAC,IAAI;gBACf,KAAK,EAAE,IAAI,CAAC,EAAE;aACf,CAAC,CAAC;IACL,CAAC;CACF;AAID,MAAM,UAAU,WAAW,CAAqC,EAAK,EAAE,IAAY,EAAE,SAAwB;IAE3G,IAAI,SAAS,EAAE;QACb,OAAO,IAAI,mBAAmB,CAAC,EAAE,EAAE,IAAI,EAAE,SAAS,CAAC,CAAC;KACrD;IACD,OAAO,IAAI,SAAS,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;AACjC,CAAC","sourcesContent":["import { HasId, Page, PageWithParams, RepresentsRoutes } from './common';\nimport { CommonRouteObject } from '../type';\n\ninterface ModalRoutePartial extends CommonRouteObject {\n  modal: string;\n}\n\nexport class ModalPage<I extends string> implements Page, RepresentsRoutes<ModalRoutePartial>, HasId<I> {\n  hasParams: false = false;\n  constructor(public id: I, public path: string) {}\n\n  getRoutes(): ModalRoutePartial[] {\n    return [{\n      path: this.path,\n      modal: this.id,\n    }];\n  }\n}\n\nexport class ModalPageWithParams<I extends string, T extends string> implements PageWithParams<T>, RepresentsRoutes<ModalRoutePartial>, HasId<I> {\n  hasParams: true = true;\n  constructor(public id: I, public path: string, public paramKeys: readonly T[]) {}\n\n  getRoutes(): ModalRoutePartial[] {\n    return [{\n      path: this.path,\n      modal: this.id,\n    }];\n  }\n}\n\nexport function createModal<T extends string>(id: T, path: string): ModalPage<T>;\nexport function createModal<T extends string, P extends string>(id: T, path: string, paramKeys: readonly P[]): ModalPageWithParams<T, P>;\nexport function createModal<T extends string, P extends string>(id: T, path: string, paramKeys?: readonly P[]):\nModalPage<T> | ModalPageWithParams<T, P> {\n  if (paramKeys) {\n    return new ModalPageWithParams(id, path, paramKeys);\n  }\n  return new ModalPage(id, path);\n}\n\nexport type AnyModalPage = ModalPage<string> | ModalPageWithParams<string, string>;\n"]}