{"version":3,"file":"createLocation.js","sourceRoot":"","sources":["../../../src/utils/react-router-override/createLocation.ts"],"names":[],"mappings":"AAAA,OAAO,EAAY,SAAS,EAAM,MAAM,mBAAmB,CAAC;AAC5D,OAAO,EAAE,SAAS,EAAE,MAAM,UAAU,CAAC;AAErC;;GAEG;AACH,MAAM,UAAU,cAAc,CAC5B,OAA0B,EAC1B,EAAM,EACN,QAAa,IAAI,EACjB,GAAY;IAEZ,OAAO;QACL,QAAQ,EAAE,OAAO,OAAO,KAAK,QAAQ,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,QAAQ;QAClE,MAAM,EAAE,EAAE;QACV,IAAI,EAAE,EAAE;QACR,GAAG,CAAC,OAAO,EAAE,KAAK,QAAQ,CAAC,CAAC,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;QAChD,KAAK;QACL,GAAG,EAAE,CAAC,EAAE,IAAK,EAAe,CAAC,GAAG,CAAC,IAAI,GAAG,IAAI,SAAS,EAAE;KACxD,CAAC;AACJ,CAAC","sourcesContent":["import { Location, parsePath, To } from '@remix-run/router';\nimport { createKey } from '../utils';\n\n/**\n * Creates a Location object with a unique key from the given Path\n */\nexport function createLocation(\n  current: string | Location,\n  to: To,\n  state: any = null,\n  key?: string,\n): Readonly<Location> {\n  return {\n    pathname: typeof current === 'string' ? current : current.pathname,\n    search: '',\n    hash: '',\n    ...(typeof to === 'string' ? parsePath(to) : to),\n    state,\n    key: (to && (to as Location).key) || key || createKey(),\n  };\n}\n"]}