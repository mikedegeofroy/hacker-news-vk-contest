{"version":3,"file":"HashParamHistory.js","sourceRoot":"","sources":["../../../src/utils/react-router-override/HashParamHistory.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAqB,SAAS,EAAM,MAAM,mBAAmB,CAAC;AACjF,OAAO,EAAE,cAAc,EAAE,MAAM,kBAAkB,CAAC;AAElD,OAAO,EAAE,kBAAkB,EAAE,MAAM,sBAAsB,CAAC;AAC1D,OAAO,EAAE,OAAO,EAAE,MAAM,UAAU,CAAC;AAMnC,MAAM,uBAAuB,GAAG,MAAM,CAAC;AAEvC;;;GAGG;AACH,MAAM,UAAU,sBAAsB,CAAC,UAAmC,EAAE;IAC1E,MAAM,SAAS,GAAG,OAAO,CAAC,SAAS,IAAI,uBAAuB,CAAC;IAE/D,SAAS,uBAAuB,CAAC,MAAc,EAAE,aAAgC;QAC/E,MAAM,UAAU,GAAG,IAAI,eAAe,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;QAC1E,MAAM,YAAY,GAAG,UAAU,CAAC,GAAG,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;QACrD,MAAM,EAAE,QAAQ,GAAG,GAAG,EAAE,MAAM,GAAG,EAAE,EAAE,IAAI,GAAG,EAAE,EAAE,GAAG,SAAS,CAAC,YAAY,CAAC,CAAC;QAC3E,OAAO,cAAc,CACnB,EAAE,EACF,EAAE,QAAQ,EAAE,MAAM,EAAE,IAAI,EAAE;QAC1B,+DAA+D;QAC/D,CAAC,aAAa,CAAC,KAAK,IAAI,aAAa,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,IAAI,EACxD,CAAC,aAAa,CAAC,KAAK,IAAI,aAAa,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,SAAS,CAC9D,CAAC;IACJ,CAAC;IAED,SAAS,mBAAmB,CAAC,MAAc,EAAE,EAAM;QACjD,MAAM,iBAAiB,GAAG,IAAI,eAAe,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;QACjF,MAAM,IAAI,GAAG,MAAM,CAAC,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;QACnD,IAAI,IAAI,GAAG,EAAE,CAAC;QAEd,IAAI,IAAI,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,EAAE;YACrC,MAAM,GAAG,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC;YACjC,MAAM,SAAS,GAAG,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;YACnC,IAAI,GAAG,SAAS,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC;SACzD;QAED,iBAAiB,CAAC,GAAG,CAAC,SAAS,EAAE,OAAO,EAAE,KAAK,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC;QAC/E,OAAO,IAAI,GAAG,GAAG,GAAG,iBAAiB,CAAC,QAAQ,EAAE,CAAC;IACnD,CAAC;IAED,SAAS,yBAAyB,CAAC,QAA4B,EAAE,EAAM;QACrE,OAAO,CACL,QAAQ,CAAC,QAAQ,CAAC,UAAU,CAAC,GAAG,CAAC,EACjC,mEAAmE,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,GAAG,CACzF,CAAC;IACJ,CAAC;IAED,OAAO,kBAAkB,CACvB,uBAAuB,EACvB,mBAAmB,EACnB,yBAAyB,EACzB,OAAO,CACR,CAAC;AACJ,CAAC","sourcesContent":["import { createPath, History, Location, parsePath, To } from '@remix-run/router';\nimport { createLocation } from './createLocation';\nimport { UrlHistoryOptions } from './UrlHistoryOptions.type';\nimport { getUrlBasedHistory } from './getUrlBasedHistory';\nimport { warning } from '../utils';\n\nexport type HashParamHistoryOptions = UrlHistoryOptions & {\n  paramName?: string;\n};\n\nconst DEFAULT_PATH_PARAM_NAME = 'path';\n\n/**\n * Специальная история для интеграции с платформой Mini Apps ВКонтакте.\n * Позволяет передавать в хэше путь вместе с параметрами запуска.\n */\nexport function createHashParamHistory(options: HashParamHistoryOptions = {}): History {\n  const paramName = options.paramName || DEFAULT_PATH_PARAM_NAME;\n\n  function createHashParamLocation(window: Window, globalHistory: Window['history']) {\n    const hashParams = new URLSearchParams(window.location.hash.substring(1));\n    const pathFromHash = hashParams.get(paramName) || '';\n    const { pathname = '/', search = '', hash = '' } = parsePath(pathFromHash);\n    return createLocation(\n      '',\n      { pathname, search, hash },\n      // state defaults to `null` because `window.history.state` does\n      (globalHistory.state && globalHistory.state.usr) || null,\n      (globalHistory.state && globalHistory.state.key) || 'default',\n    );\n  }\n\n  function createHashParamHref(window: Window, to: To) {\n    const currentHashParams = new URLSearchParams(window.location.hash.substring(1));\n    const base = window.document.querySelector('base');\n    let href = '';\n\n    if (base && base.getAttribute('href')) {\n      const url = window.location.href;\n      const hashIndex = url.indexOf('#');\n      href = hashIndex === -1 ? url : url.slice(0, hashIndex);\n    }\n\n    currentHashParams.set(paramName, typeof to === 'string' ? to : createPath(to));\n    return href + '#' + currentHashParams.toString();\n  }\n\n  function validateHashParamLocation(location: Readonly<Location>, to: To) {\n    warning(\n      location.pathname.startsWith('/'),\n      `relative pathnames are not supported in hash param history.push(${JSON.stringify(to)})`,\n    );\n  }\n\n  return getUrlBasedHistory(\n    createHashParamLocation,\n    createHashParamHref,\n    validateHashParamLocation,\n    options,\n  );\n}\n"]}