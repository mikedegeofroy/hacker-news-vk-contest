{"version":3,"file":"fillHistory.js","sourceRoot":"","sources":["../../src/utils/fillHistory.ts"],"names":[],"mappings":"AAIA,OAAO,EAAE,qBAAqB,EAAE,MAAM,mCAAmC,CAAC;AAC1E,OAAO,EAAE,kBAAkB,EAAE,MAAM,SAAS,CAAC;AAC7C,OAAO,EAAE,kBAAkB,EAAE,MAAM,sBAAsB,CAAC;AAC1D,OAAO,EAAE,oBAAoB,EAAE,MAAM,UAAU,CAAC;AAEhD,SAAS,aAAa,CACpB,KAAkB,EAClB,OAA+B;IAE/B,OAAO,KAAK;SACT,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE;QACZ,MAAM,eAAe,GAAG,EAAE,GAAG,IAAI,EAAE,OAAO,EAAE,CAAC;QAC7C,OAAO,IAAI,CAAC,QAAQ;YAClB,CAAC,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,GAAG,OAAO,EAAE,eAAe,CAAC,CAAC;YAC7D,CAAC,CAAC,eAAe,CAAC;IACtB,CAAC,CAAC;SACD,IAAI,EAAE,CAAC;AACZ,CAAC;AAED,MAAM,UAAU,WAAW,CACzB,MAAmB,EACnB,cAA8B,EAC9B,OAA2B,EAC3B,mBAAwC;IAExC,MAAM,KAAK,GAAG,aAAa,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;IACxC,MAAM,eAAe,GAAG,OAAO,CAAC,KAAK,CAAC,QAAQ,CAAC;IAC/C,MAAM,MAAM,GAAG,OAAO,CAAC,KAAK,EAAE,MAAM,IAAI,EAAE,CAAC;IAC3C,MAAM,UAAU,GAAG,OAAO,CAAC,KAAK,EAAE,KAAK,CAAC,IAAI,CAAC;IAC7C,MAAM,UAAU,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,IAAI,KAAK,UAAU,CAAC,CAAC;IAClE,IAAI,CAAC,UAAU,EAAE;QACf,OAAO;KACR;IACD,MAAM,OAAO,GAAG,UAAU,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC,kBAAkB,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC,CAAC;IACvF,UAAU,CAAC,GAAG,EAAE;QACd,IAAI,OAAO,CAAC,MAAM,EAAE;YAClB,MAAM,YAAY,GAAG,kBAAkB,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;YAChE,YAAY,CAAC,MAAM,CAAC,oBAAoB,CAAC,CAAC;YAC1C,MAAM,MAAM,GAAG,YAAY,CAAC,QAAQ,EAAE,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,YAAY,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;YACvF,MAAM,EAAE,GAAG,GAAG,eAAe,CAAC,QAAQ,GAAG,MAAM,GAAG,eAAe,CAAC,IAAI,EAAE,CAAC;YACzE,MAAM,WAAW,GAAG,OAAO,CAAC,KAAK,EAAY,CAAC;YAC9C,MAAM,OAAO,GAAG;gBACd,GAAG,EAAE,CAAC,cAAc,CAAC,OAAO,CAAC,WAAW,CAAC;gBACzC,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBAC7D,GAAG,EAAE,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE,CAAC;aAC9B,CAAC;YACF,MAAM,WAAW,GAAG,IAAI,qBAAqB,CAAC,OAAO,CAAC,CAAC;YACvD,mBAAmB,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;YACrC,mBAAmB,CAAC,MAAM,EAAE,CAAC;SAC9B;IACH,CAAC,CAAC,CAAC;AACL,CAAC","sourcesContent":["import { RouteNavigator } from '../services/RouteNavigator.type';\nimport { RouteContextObject } from '../contexts';\nimport { RouteLeaf, RouteLeafWithParents } from '../type';\nimport { TransactionExecutor } from '../services/TransactionExecutor';\nimport { NavigationTransaction } from '../entities/NavigationTransaction';\nimport { fillParamsIntoPath } from './utils';\nimport { createSearchParams } from './createSearchParams';\nimport { SEARCH_PARAM_INFLATE } from '../const';\n\nfunction flattenBranch(\n  leafs: RouteLeaf[],\n  parents: RouteLeafWithParents[],\n): RouteLeafWithParents[] {\n  return leafs\n    .map((leaf) => {\n      const leafWithParents = { ...leaf, parents };\n      return leaf.children\n        ? flattenBranch(leaf.children, [...parents, leafWithParents])\n        : leafWithParents;\n    })\n    .flat();\n}\n\nexport function fillHistory(\n  config: RouteLeaf[],\n  routeNavigator: RouteNavigator,\n  context: RouteContextObject,\n  transactionExecutor: TransactionExecutor,\n) {\n  const leafs = flattenBranch(config, []);\n  const currentLocation = context.state.location;\n  const params = context.match?.params ?? {};\n  const targetPath = context.match?.route.path;\n  const targetLeaf = leafs.find((leaf) => leaf.path === targetPath);\n  if (!targetLeaf) {\n    return;\n  }\n  const records = targetLeaf.parents.map(({ path }) => fillParamsIntoPath(path, params));\n  setTimeout(() => {\n    if (records.length) {\n      const searchParams = createSearchParams(currentLocation.search);\n      searchParams.delete(SEARCH_PARAM_INFLATE);\n      const search = searchParams.toString().length > 0 ? `?${searchParams.toString()}` : '';\n      const to = `${currentLocation.pathname}${search}${currentLocation.hash}`;\n      const firstParent = records.shift() as string;\n      const actions = [\n        () => routeNavigator.replace(firstParent),\n        ...records.map((record) => () => routeNavigator.push(record)),\n        () => routeNavigator.push(to),\n      ];\n      const transaction = new NavigationTransaction(actions);\n      transactionExecutor.add(transaction);\n      transactionExecutor.doNext();\n    }\n  });\n}\n"]}