import { STATE_KEY_SHOW_MODAL, STATE_KEY_SHOW_POPOUT } from '../const';
import { useState } from 'react';
export function getParamKeys(path) {
    return path?.match(/\/:[^\/]+/g)?.map((param) => param.replace('/', '')) ?? [];
}
export function fillParamsIntoPath(path, params) {
    const parameters = getParamKeys(path);
    const paramInjector = (acc, param) => {
        const paramName = param.replace(':', '');
        if (!params[paramName]) {
            throw new Error(`Missing parameter ${paramName} while building route ${path}`);
        }
        return acc.replace(param, params[paramName]);
    };
    return parameters.reduce(paramInjector, path);
}
export function getRouteContext(state, panelsHistory = []) {
    return {
        state,
        match: state.matches.length
            ? state.matches[state.matches.length - 1]
            : undefined,
        panelsHistory: panelsHistory,
    };
}
export function isModalShown(location) {
    return location.state && STATE_KEY_SHOW_MODAL in location.state;
}
export function isPopoutShown(location) {
    return location.state && STATE_KEY_SHOW_POPOUT in location.state;
}
export function createKey() {
    const allNumbersAndLetters = 36;
    const positionAfterZeroAnDot = 2;
    const keyLength = 7;
    return Math.random()
        .toString(allNumbersAndLetters)
        .substring(positionAfterZeroAnDot, positionAfterZeroAnDot + keyLength);
}
export function getDisplayName(WrappedComponent) {
    return WrappedComponent.displayName || WrappedComponent.name || 'Component';
}
export function useForceUpdate() {
    const [, setState] = useState(0);
    return () => {
        setState(Date.now());
    };
}
export function warning(cond, message) {
    if (!cond) {
        if (typeof console !== 'undefined')
            console.warn(message);
        try {
            throw new Error(message);
        }
        catch (e) { }
    }
}
export function invariant(value, message) {
    if (value === false || value === null || typeof value === 'undefined') {
        throw new Error(message);
    }
}
//# sourceMappingURL=utils.js.map