{"version":3,"file":"createHashRouter.js","sourceRoot":"","sources":["../../src/utils/createHashRouter.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,SAAS,EAAE,MAAM,SAAS,CAAC;AACpC,OAAO,EAAE,iBAAiB,EAAE,YAAY,EAAE,MAAM,mBAAmB,CAAC;AAEpE,OAAO,EAAE,eAAe,EAAE,MAAM,6BAA6B,CAAC;AAE9D,MAAM,UAAU,gBAAgB,CAAC,MAA4C;IAC3E,6EAA6E;IAC7E,yEAAyE;IACzE,MAAM,CAAC,gBAAgB,CAAC,UAAU,EAAE,CAAC,KAAoB,EAAE,EAAE;QAC3D,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE;YAChB,MAAM,CAAC,OAAO,CAAC,YAAY,CAAC,EAAE,GAAG,EAAE,SAAS,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;SACvD;IACH,CAAC,CAAC,CAAC;IACH,MAAM,OAAO,GAAG,iBAAiB,EAAE,CAAC;IACpC,eAAe,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;IACvC,OAAO,YAAY,CAAC;QAClB,OAAO;QACP,MAAM,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC;KACzD,CAAC,CAAC,UAAU,EAAE,CAAC;AAClB,CAAC","sourcesContent":["import { Router as RemixRouter } from '@remix-run/router/dist/router';\nimport { createKey } from './utils';\nimport { createHashHistory, createRouter } from '@remix-run/router';\nimport { RouteWithoutRoot, RouteWithRoot } from '../type';\nimport { InitialLocation } from '../services/InitialLocation';\n\nexport function createHashRouter(routes: RouteWithRoot[] | RouteWithoutRoot[]): RemixRouter {\n  // Задать новый key для новой локации в случае, если приложение уже запущено,\n  // а пользователь делает переход изменив hash в адресной строке браузера.\n  window.addEventListener('popstate', (event: PopStateEvent) => {\n    if (!event.state) {\n      window.history.replaceState({ key: createKey() }, '');\n    }\n  });\n  const history = createHashHistory();\n  InitialLocation.init(history.location);\n  return createRouter({\n    history,\n    routes: routes.map((item) => ({ ...item, index: true })),\n  }).initialize();\n}\n"]}