export class NavigationTransaction {
    constructor(actions) {
        this.actions = actions;
        this.pointer = 0;
        this.resolve = () => {
            /* Empty */
        };
        this.reject = () => {
            /* Empty */
        };
        this.promise = new Promise((resolve, reject) => {
            this.resolve = resolve;
            this.reject = reject;
        });
    }
    get isMultiAction() {
        return this.actions.length > 1;
    }
    get donePromise() {
        return this.promise;
    }
    get finished() {
        return this.pointer >= this.actions.length;
    }
    doNext() {
        if (!this.finished) {
            this.actions[this.pointer]();
            this.pointer += 1;
        }
        // this.finished изменился при выполнении предыдущего условия - нельзя объединить в if-else.
        if (this.finished) {
            this.resolve();
        }
    }
}
//# sourceMappingURL=NavigationTransaction.js.map