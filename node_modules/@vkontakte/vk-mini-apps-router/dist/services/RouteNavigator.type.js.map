{"version":3,"file":"RouteNavigator.type.js","sourceRoot":"","sources":["../../src/services/RouteNavigator.type.ts"],"names":[],"mappings":"AAQA,MAAM,UAAU,wBAAwB,CAAe,MAAS;IAC9D,MAAM,IAAI,GAAgC;QACxC,gBAAgB,EAAE,IAAI;QACtB,KAAK,EAAE,EAAE;KACV,CAAC;IACF,OAAO,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,IAAI,IAAI,CAAC,CAAC;AACxD,CAAC","sourcesContent":["import { Page, PageWithParams } from '../page-types/common';\nimport { BlockerFunction, Params } from '@remix-run/router';\n\nexport interface NavigationOptions {\n  keepSearchParams?: boolean;\n  state?: Object;\n}\n\nexport function hasNavigationOptionsKeys<T extends {}>(object: T): boolean {\n  const base: Required<NavigationOptions> = {\n    keepSearchParams: true,\n    state: {},\n  };\n  return Object.keys(object).some((key) => key in base);\n}\n\nexport interface RouteNavigator {\n  push<T extends string>(\n    to: PageWithParams<T>,\n    params: Params<T>,\n    options?: NavigationOptions,\n  ): Promise<void>;\n  push(to: string | Page, options?: NavigationOptions): Promise<void>;\n\n  replace<T extends string>(\n    to: PageWithParams<T>,\n    params: Params<T>,\n    options?: NavigationOptions,\n  ): Promise<void>;\n  replace(to: string | Page, options?: NavigationOptions): Promise<void>;\n\n  back(to?: number): Promise<void>;\n\n  backToFirst(): Promise<void>;\n\n  go(to: number): Promise<void>;\n\n  showModal(id: string): Promise<void>;\n\n  block(onLeave: BlockerFunction): () => void;\n\n  /**\n   * Закрыть модальное окно, открытое методом showModal или навигацией (push/replace/back).\n   *\n   * @param pushPanel Установите значение в true, если хотите выполнить PUSH навигацию.\n   * В случае, если модальное окно было открыто через навигацию, можно закрыть окно шагом назад\n   * или навигацией вперед на родительскую панель.<br>\n   * По умолчанию false.\n   */\n  hideModal(pushPanel?: boolean): Promise<void>;\n\n  showPopout(popout: JSX.Element): Promise<void>;\n\n  hidePopout(): Promise<void>;\n\n  runSync(actions: VoidFunction[]): Promise<void>;\n}\n"]}