export class TransactionExecutor {
    constructor(forceUpdate) {
        this.forceUpdate = forceUpdate;
        this.transactions = [];
    }
    get initialDelay() {
        return this.transactions.length > 1 ||
            (this.transactions.length > 0 && this.transactions[0].isMultiAction)
            ? 100
            : 0;
    }
    add(transaction) {
        this.transactions.push(transaction);
        this.forceUpdate();
    }
    async doNext() {
        // Нужно делать асинхронно, иначе будет бесконечный цикл навигация-изменение стейта-навигация...
        setTimeout(() => {
            if (this.transactions.length) {
                this.transactions[0].doNext();
                if (this.transactions[0].finished) {
                    this.transactions.shift();
                }
            }
        });
    }
}
//# sourceMappingURL=TransactionExecutor.js.map