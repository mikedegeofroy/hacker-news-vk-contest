{"version":3,"file":"BridgeService.js","sourceRoot":"","sources":["../../src/services/BridgeService.ts"],"names":[],"mappings":"AAAA,OAAO,MAAqB,MAAM,sBAAsB,CAAC;AACzD,OAAO,EAAE,SAAS,EAAE,MAAM,gBAAgB,CAAC;AAE3C,MAAM,OAAO,aAAa;aAGT,oCAA+B,GAAG,CAAC,AAAJ,CAAK;IAInD,gEAAgE;IAChE;QAPQ,uBAAkB,GAAa,EAAE,CAAC;IAOnB,CAAC;aAET,wBAAmB,GAA+B,CAAC,KAAK,EAAE,EAAE;QACzE,IAAI,KAAK,CAAC,UAAU,CAAC,UAAU,KAAK,aAAa,CAAC,+BAA+B,EAAE;YACjF,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;SACpB;IACH,CAAC,AAJiC,CAIhC;IAEF,MAAM,CAAC,qBAAqB;QAC1B,OAAO,CAAC,GAAG,CAAC;YACV,MAAM,CAAC,IAAI,CAAC,0BAA0B,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;YAC1D,MAAM,CAAC,IAAI,CAAC,yBAAyB,CAAC;SACvC,CAAC,CAAC,KAAK,CAAC,aAAa,CAAC,mBAAmB,CAAC,CAAC;QAE5C,MAAM,QAAQ,GAAG,aAAa,CAAC,QAAQ,CAAC;QACxC,MAAM,UAAU,GAAG,SAAS,EAAE,CAAC;QAC/B,QAAQ,CAAC,kBAAkB,GAAG,CAAC,GAAG,QAAQ,CAAC,kBAAkB,EAAE,UAAU,CAAC,CAAC;QAE3E,OAAO,UAAU,CAAC;IACpB,CAAC;IAED,MAAM,CAAC,sBAAsB,CAAC,UAAkB;QAC9C,MAAM,QAAQ,GAAG,aAAa,CAAC,QAAQ,CAAC;QACxC;;WAEG;QACH,QAAQ,CAAC,kBAAkB,GAAG,QAAQ,CAAC,kBAAkB,CAAC,MAAM,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,KAAK,UAAU,CAAC,CAAC;QAE5F;;WAEG;QACH,IAAI,QAAQ,CAAC,kBAAkB,CAAC,MAAM,KAAK,CAAC,EAAE;YAC5C,OAAO,CAAC,GAAG,CAAC;gBACV,MAAM,CAAC,IAAI,CAAC,0BAA0B,EAAE,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC;gBAC3D,MAAM,CAAC,IAAI,CAAC,0BAA0B,CAAC;aACxC,CAAC,CAAC,KAAK,CAAC,aAAa,CAAC,mBAAmB,CAAC,CAAC;SAC7C;IACH,CAAC;IAEO,MAAM,KAAK,QAAQ;QACzB,IAAI,CAAC,aAAa,CAAC,SAAS,EAAE;YAC5B,aAAa,CAAC,SAAS,GAAG,IAAI,aAAa,EAAE,CAAC;SAC/C;QACD,OAAO,aAAa,CAAC,SAAS,CAAC;IACjC,CAAC","sourcesContent":["import bridge, { ErrorData } from '@vkontakte/vk-bridge';\nimport { createKey } from '../utils/utils';\n\nexport class BridgeService {\n  private swipeBackConsumers: string[] = [];\n\n  private static UNSUPPORTED_PLATFORM_ERROR_CODE = 6;\n\n  private static _instance: BridgeService | undefined;\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  private constructor() {}\n\n  private static handlePlatformError: (error: ErrorData) => void = (error) => {\n    if (error.error_data.error_code !== BridgeService.UNSUPPORTED_PLATFORM_ERROR_CODE) {\n      console.log(error);\n    }\n  };\n\n  static enableNativeSwipeBack(): string {\n    Promise.all([\n      bridge.send('VKWebAppSetSwipeSettings', { history: true }),\n      bridge.send('VKWebAppEnableSwipeBack'),\n    ]).catch(BridgeService.handlePlatformError);\n\n    const instance = BridgeService.instance;\n    const consumerId = createKey();\n    instance.swipeBackConsumers = [...instance.swipeBackConsumers, consumerId];\n\n    return consumerId;\n  }\n\n  static disableNativeSwipeBack(consumerId: string) {\n    const instance = BridgeService.instance;\n    /**\n     * Тот, кто попросил отключить нативный свайпбек, выходит из списка.\n     */\n    instance.swipeBackConsumers = instance.swipeBackConsumers.filter((id) => id !== consumerId);\n\n    /**\n     * Нативный свайпбек будет отключен только если больше не осталось тех, кому он нужен.\n     */\n    if (instance.swipeBackConsumers.length === 0) {\n      Promise.all([\n        bridge.send('VKWebAppSetSwipeSettings', { history: false }),\n        bridge.send('VKWebAppDisableSwipeBack'),\n      ]).catch(BridgeService.handlePlatformError);\n    }\n  }\n\n  private static get instance(): BridgeService {\n    if (!BridgeService._instance) {\n      BridgeService._instance = new BridgeService();\n    }\n    return BridgeService._instance;\n  }\n}\n"]}