{"version":3,"file":"hooks.js","sourceRoot":"","sources":["../../src/hooks/hooks.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,aAAa,EAAE,YAAY,EAAE,aAAa,EAAE,MAAM,aAAa,CAAC;AAGzE,OAAO,EAAE,mBAAmB,EAAE,MAAM,uBAAuB,CAAC;AAE5D,OAAO,EAAE,SAAS,EAAE,MAAM,gBAAgB,CAAC;AAE3C,MAAM,UAAU,iBAAiB;IAC/B,MAAM,CAAC,aAAa,CAAC,GAAG,mBAAmB,CAAC,aAAa,CAAC,CAAC;IAC3D,SAAS,CACP,aAAa,EACb,yGAAyG,CAC1G,CAAC;IACF,OAAO,aAAa,CAAC,cAAc,CAAC;AACtC,CAAC;AAQD,MAAM,UAAU,SAAS,CAA4B,EAAU;IAC7D,MAAM,CAAC,YAAY,EAAE,gBAAgB,CAAC,GAAG,mBAAmB,CAAC,YAAY,CAAC,CAAC;IAC3E,SAAS,CACP,YAAY,EACZ,qGAAqG,CACtG,CAAC;IACF,MAAM,KAAK,GACT,EAAE;QACF,gBAAgB;QACf,MAAM,CAAC,IAAI,CAAC,EAAE,CAAgC,CAAC,KAAK,CACnD,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,YAAY,CAAC,KAAK,EAAE,KAAuB,CAAA,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC,GAAG,CAAC,CACvE;QACA,MAAM,CAAC,IAAI,CAAC,EAAE,CAAgC,CAAC,KAAK,CACnD,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,gBAAgB,CAAC,KAAK,EAAE,KAAuB,CAAA,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC,GAAG,CAAC,CAC3E;QACC,CAAC,CAAC,gBAAgB,CAAC,KAAK;QACxB,CAAC,CAAC,YAAY,CAAC,KAAK,CAAC;IACzB,OAAO,KAAK,EAAE,MAAM,CAAC;AACvB,CAAC;AAED,MAAM,UAAU,WAAW;IACzB,MAAM,CAAC,YAAY,CAAC,GAAG,mBAAmB,CAAC,YAAY,CAAC,CAAC;IACzD,SAAS,CACP,YAAY,EACZ,uGAAuG,CACxG,CAAC;IACF,OAAO,YAAY,CAAC,KAAK,CAAC,QAAQ,CAAC;AACrC,CAAC;AAED,MAAM,UAAU,SAAS;IACvB,MAAM,CAAC,aAAa,CAAC,GAAG,mBAAmB,CAAC,aAAa,CAAC,CAAC;IAC3D,OAAO,aAAa,CAAC,MAAM,CAAC;AAC9B,CAAC","sourcesContent":["import { PopoutContext, RouteContext, RouterContext } from '../contexts';\nimport { Location, Params } from '@remix-run/router';\nimport { RouteNavigator } from '../services/RouteNavigator.type';\nimport { useThrottledContext } from './useThrottledContext';\nimport { ModalWithRoot } from '../type';\nimport { invariant } from '../utils/utils';\n\nexport function useRouteNavigator(): RouteNavigator {\n  const [routerContext] = useThrottledContext(RouterContext);\n  invariant(\n    routerContext,\n    'You can not use useNavigator hook outside of RouterContext. Make sure calling it inside RouterProvider.',\n  );\n  return routerContext.routeNavigator;\n}\n\ntype RequireOnlyOne<T, Keys extends keyof T = keyof T> = Pick<T, Exclude<keyof T, Keys>> &\n  { [K in Keys]-?: Required<Pick<T, K>> & Partial<Record<Exclude<Keys, K>, undefined>> }[Keys];\n\ntype AnimatedParts = Pick<ModalWithRoot, 'tab' | 'panel' | 'modal'>;\ntype NavId = RequireOnlyOne<AnimatedParts>;\n\nexport function useParams<T extends string = string>(id?: NavId): Params<T> | undefined {\n  const [routeContext, prevRouteContext] = useThrottledContext(RouteContext);\n  invariant(\n    routeContext,\n    'You can not use useParams hook outside of RouteContext. Make sure calling it inside RouterProvider.',\n  );\n  const match =\n    id &&\n    prevRouteContext &&\n    (Object.keys(id) as unknown as (keyof NavId)[]).every(\n      (key) => (routeContext.match?.route as ModalWithRoot)[key] !== id[key],\n    ) &&\n    (Object.keys(id) as unknown as (keyof NavId)[]).every(\n      (key) => (prevRouteContext.match?.route as ModalWithRoot)[key] === id[key],\n    )\n      ? prevRouteContext.match\n      : routeContext.match;\n  return match?.params;\n}\n\nexport function useLocation(): Location {\n  const [routeContext] = useThrottledContext(RouteContext);\n  invariant(\n    routeContext,\n    'You can not use useLocation hook outside of RouteContext. Make sure calling it inside RouterProvider.',\n  );\n  return routeContext.state.location;\n}\n\nexport function usePopout(): JSX.Element | null {\n  const [popoutContext] = useThrottledContext(PopoutContext);\n  return popoutContext.popout;\n}\n"]}